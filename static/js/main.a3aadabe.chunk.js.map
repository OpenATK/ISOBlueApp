{"version":3,"sources":["components/AppBarContent/index.js","components/Visualization/Map/Lines/index.js","components/Visualization/Map/Markers/index.js","components/Visualization/Map/index.js","components/Visualization/Graph/index.js","components/Visualization/index.js","components/DrawerContent/Summary/index.js","components/DrawerContent/Diagnostics/index.js","components/DrawerContent/index.js","components/App/index.js","modules/session/sequences.js","modules/session/index.js","modules/map/sequences.js","modules/snapshots/sequences.js","modules/data/sequences.js","modules/diagnostics/sequences.js","modules/diagnostics/index.js","modules/map/index.js","modules/data/index.js","modules/snapshots/index.js","modules/root/sequences.js","modules/root/index.js","controller.js","index.js"],"names":["AppBarContent","userLocationButton","_this","this","classes","props","userLocationAvailable","react_default","a","createElement","IconButton_default","onClick","centerOnUser","MyLocation_default","className","icon","Toolbar_default","color","aria-label","toggleDrawerOpen","Menu_default","Typography_default","variant","flex","React","Component","connect","state","_templateObject","signal","_templateObject2","_templateObject3","withStyles","theme","_icon","Object","defineProperty","breakpoints","up","width","spacing","unit","height","marginRight","down","Lines","conn_id","connection_id","ready","devices","oada","bookmarks","isoblue","dataLines","_","forEach","unit_resource","days","selectedUnit","gps","date","hour","positions","instance","lat","lng","push","current_time_sec","Math","round","Date","getTime","keys","sort","b","hours","currentHour","max","lastHour","remove","n","currentGPS","lastGPS","time","i","tempGPS","map","Polyline","key","uuid","v4","Lines_templateObject","Lines_templateObject2","Lines_templateObject3","_templateObject4","_templateObject5","_templateObject6","withTheme","Markers","unitMarkers","snapshots","location","CircleMarker","ref","center","fillColor","health","fillOpacity","radius","zIndexOffset","e","selectUnit","Tooltip","direction","offset","Markers_templateObject","Markers_templateObject2","Markers_templateObject3","Markers_templateObject4","Markers_templateObject5","refs","leafletElement","locate","currentMarker","Marker","position","userLocation","Map","dragging","targetCenter","zoom","onlocationfound","storeUserLocation","latlng","TileLayer","url","attribution","Map_Markers","Map_Lines","Map_templateObject","Map_templateObject2","Map_templateObject3","Map_templateObject4","Map_templateObject5","display","Graph","rawData","chart","data","measurement","values","heartbeats","value","latency","recTime","genTime","toLocaleTimeString","minute","LineChart","margin","top","right","left","bottom","Line","type","isAnimationActive","dataKey","stroke","CartesianGrid","strokeDasharray","XAxis","label","dy","YAxis","angle","component_Tooltip","interfaces","connection","ResponsiveContainer","Graph_templateObject","Graph_templateObject2","Graph_templateObject3","Graph_templateObject4","Graph_templateObject5","Graph_templateObject6","_templateObject7","Visualization","mode","Visualization_Map","Visualization_Graph","Visualization_templateObject","Summary","units","length","List_default","list","component","ListItem_default","button","concat","ListItemText_default","primary","ListItemIcon_default","Sync_default","healthy","SyncProblem_default","sick","SyncDisabled_default","align","Divider_default","Summary_templateObject","Summary_templateObject2","backgroundColor","palette","background","paper","overflow","textField","Diagnostics","measurements","visualizing","Button_default","toggleMode","measurementSelect","Select_default","renderValue","onChange","setMeasurement","target","MenuItem_default","dateSelect","setDate","hourSelect","setHour","lastReport","unselectUnit","Diagnostics_templateObject","Diagnostics_templateObject2","Diagnostics_templateObject3","Diagnostics_templateObject4","Diagnostics_templateObject5","Diagnostics_templateObject6","Diagnostics_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","DrawerContent","content","DrawerContent_Diagnostics","DrawerContent_Summary","Drawer_default","open","drawerOpen","onClose","drawerPaper","toolbar","DrawerContent_templateObject","DrawerContent_templateObject2","DrawerContent_templateObject3","mixins","App","init","root","AppBar_default","appBar","components_AppBarContent","components_DrawerContent","components_Visualization","App_templateObject","flexGrow","zIndex","drawer","sequence","toggle","sequences_templateObject","Module","signals","_ref","set","map_sequences_templateObject","sequences_templateObject2","debounce","continue","sequences_templateObject3","sequences_templateObject4","discard","centerOnUnit","sequences_templateObject5","_ref2","get","gps_list","last","unitLocation","updateSnapshot","createSnapshots","reduce","acc","unitkey","unitData","lastDate","lastTime","lastHeartbeat","console","log","msg_gps","msg_hb","lastHeartbeatTime","snapshots_sequences_templateObject","snapshots_sequences_templateObject2","masterTree","_type","_rev","device-index","*","day-index","hour-index","dayTree","setRequestLastHour","Promise","device","deviceData","path","watch","tree","then","requests","handleDeviceUpdate","data_sequences_templateObject","data_sequences_templateObject2","data_sequences_templateObject3","data_sequences_templateObject4","data_sequences_templateObject5","sequences_templateObject6","sequences_templateObject7","getHour","_ref3","diagnostics_sequences_templateObject","diagnostics_sequences_templateObject2","diagnostics_sequences_templateObject3","diagnostics_sequences_templateObject4","diagnostics_sequences_templateObject5","diagnostics_sequences_templateObject6","_ref4","diagnostics_sequences_templateObject7","sequences_templateObject8","sequences_templateObject9","when","sequences_templateObject10","true","sequences_templateObject11","sequences_templateObject12","false","sequences_templateObject13","sequences_templateObject14","domain","options","redirect","metadata","scope","modules","session","oadaModule","diagnostics","providers","oadaProvider","Controller","devtools","createMuiTheme","pallete","light","main","dark","contrastText","secondary","render","_cerebral_react","controller","core_styles","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.a3aadabe.chunk.js","sourcesContent":["import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\n//import TextField from '@material-ui/core/TextField';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport { connect } from '@cerebral/react';\nimport { state, signal } from 'cerebral/tags';\n\nconst styles = theme => ({\n  flex: {\n    flex: 1,\n  },\n  icon: {\n    color: '#FFFFFF',\n    [theme.breakpoints.up('xs')]: {\n      width: 5*theme.spacing.unit,\n      height: 5*theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n    },\n    [theme.breakpoints.down('xs')]: {\n      width: 4*theme.spacing.unit,\n      height: 4*theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n    },\n  },\n});\n\nclass AppBarContent extends React.Component {\n\n  render() {\n    const { classes } = this.props\n\n    var userLocationButton;\n    if (this.props.userLocationAvailable) {\n      userLocationButton = \n      <IconButton\n        onClick={() => this.props.centerOnUser({})}>\n        <MyLocationIcon className={classes.icon}/>\n      </IconButton>\n    } else {\n      userLocationButton = null;\n    }\n\n    return (\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"Open Drawer\"\n          onClick={this.props.toggleDrawerOpen}\n          >\n          <MenuIcon className={classes.icon}/>\n        </IconButton>\n        <Typography variant='title' color='inherit' className={classes.flex}>\n          ISOBlueApp [1.0.0]\n        </Typography>\n        {userLocationButton}\n      </Toolbar>\n    )\n  }\n}\n\nexport default connect({\n  userLocationAvailable: state`map.userLocationAvailable`,\n\n  centerOnUser: signal`map.centerOnUser`,  \n  toggleDrawerOpen: signal`session.toggleDrawerOpen`,\n\n  },\n  withStyles(styles)(AppBarContent)\n);\n\n\n\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { connect } from \"@cerebral/react\";\nimport { state } from \"cerebral/tags\";\nimport uuid from \"uuid\";\n//import Leaflet from 'leaflet';\nimport { Polyline } from \"react-leaflet\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({});\n\nclass Lines extends React.Component {\n  render() {\n    const conn_id = this.props.connection_id;\n    if (!this.props.ready) return null;\n    const devices =\n      this.props.oada[conn_id].bookmarks.isoblue[\"device-index\"] || {};\n    var dataLines = [];\n    _.forEach(devices, (unit_resource, unit) => {\n      const days = unit_resource[\"day-index\"];\n      // selected unit\n      if (unit === this.props.selectedUnit) {\n        var gps = days[this.props.date][\"hour-index\"][this.props.hour].gps;\n        var positions = [];\n        _.forEach(gps, instance => {\n          if (instance.lat && instance.lng) {\n            positions.push([instance.lat, instance.lng]);\n          }\n        });\n        dataLines.push(positions);\n      }\n      // non-selected unit\n      else {\n        var positions = [];\n        var current_time_sec = Math.round(new Date().getTime() / 1000);\n        var date = Object.keys(days).sort((a, b) => {\n          return new Date(b) - new Date(a);\n        })[0];\n        var hours = Object.keys(days[date][\"hour-index\"]);\n        var currentHour = _.max(hours);\n        var lastHour = _.max(\n          _.remove(hours, n => {\n            return n !== currentHour;\n          }),\n        );\n\n        var currentGPS = Object.keys(\n          days[date][\"hour-index\"][currentHour].gps || {},\n        );\n        var lastGPS = lastHour\n          ? Object.keys(days[date][\"hour-index\"][lastHour].gps || {})\n          : [];\n\n        // FIXME: currentGPS and lastGPS are not guaranteed to be sorted\n\n        //Creates a polyline of last 15 mins of data from both the current and\n        //last hour of data\n        _.forEach(currentGPS, (time, i) => {\n          var tempGPS = days[date][\"hour-index\"][currentHour].gps[time];\n          if (\n            current_time_sec - time <= 15 * 60 &&\n            tempGPS.lat &&\n            tempGPS.lng\n          ) {\n            positions.push([tempGPS.lat, tempGPS.lng]);\n          }\n        });\n        _.forEach(lastGPS || [], time => {\n          var tempGPS = days[date][\"hour-index\"][lastHour].gps[time];\n          if (\n            current_time_sec - time <= 15 * 60 &&\n            tempGPS.lat &&\n            tempGPS.lng\n          ) {\n            positions.push([tempGPS.lat, tempGPS.lng]);\n          }\n        });\n\n        dataLines.push(positions);\n      }\n    });\n\n    return (\n      <div>\n        {dataLines.map(positions => (\n          <Polyline key={uuid.v4()} positions={positions} color=\"#ffffff\" />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  {\n    connection_id: state`data.connection_id`,\n    ready: state`data.ready`,\n    oada: state`oada`,\n    date: state`diagnostics.date`,\n    hour: state`diagnostics.hour`,\n    selectedUnit: state`diagnostics.selectedUnit`,\n  },\n  withStyles(styles, { withTheme: true })(Lines),\n);\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport { CircleMarker, Tooltip } from \"react-leaflet\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({});\n\nclass Markers extends React.Component {\n  render() {\n    const unitMarkers = [];\n    _.forEach(Object.keys(this.props.snapshots) || {}, unit => {\n      var tempGPS = this.props.snapshots[unit].location;\n      if (tempGPS && tempGPS.lat && tempGPS.lng) {\n        unitMarkers.push(\n          <CircleMarker\n            ref={unit => {\n              this.unit = unit;\n            }}\n            key={unit}\n            center={[\n              this.props.snapshots[unit].location.lat,\n              this.props.snapshots[unit].location.lng,\n            ]}\n            color={\"#ffffff\"}\n            fillColor={(() => {\n              switch (this.props.snapshots[unit].health) {\n                case \"Healthy\":\n                  return \"#008000\";\n                case \"Sick\":\n                  return \"#ffbf00\";\n                case \"Down\":\n                  return \"#707070\";\n                default:\n                  return \"#707070\";\n              }\n            })()}\n            fillOpacity={1}\n            radius={12}\n            zIndexOffset={1}\n            onClick={e => this.props.selectUnit({ unit: unit })}\n          >\n            <Tooltip direction=\"top\" offset={[0, -10]}>\n              <b>Unit: {unit}</b>\n              <br />\n              <center>\n                <b>{this.props.snapshots[unit].health}</b>\n              </center>\n            </Tooltip>\n          </CircleMarker>,\n        );\n      }\n    });\n\n    return <div>{unitMarkers}</div>;\n  }\n}\n\nexport default connect(\n  {\n    snapshots: state`snapshots`,\n    date: state`diagnostics.date`,\n    hour: state`diagnostics.hour`,\n    selectedUnit: state`diagnostics.selectedUnit`,\n\n    selectUnit: signal`diagnostics.selectUnit`,\n  },\n  withStyles(styles, { withTheme: true })(Markers),\n);\n","import React from \"react\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport { Map, Marker, TileLayer } from \"react-leaflet\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport \"./Map.css\";\nimport Lines from \"./Lines/\";\nimport Markers from \"./Markers/\";\n\nconst styles = theme => ({\n  map: {\n    position: \"relative\",\n    display: \"flex\",\n    width: \"100%\",\n    height: \"calc(100% - 56px)\",\n  },\n});\n\nconst mapTiles =\n  \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\";\nconst attrib =\n  \"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\";\n\nclass map extends React.Component {\n  componentDidMount() {\n    this.refs.map.leafletElement.locate();\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    const currentMarker = [];\n    if (this.props.userLocationAvailable) {\n      currentMarker.push(\n        <Marker\n          key={\"user\"}\n          position={[this.props.userLocation.lat, this.props.userLocation.lng]}\n        >\n          zIndexOffset={1}\n        </Marker>,\n      );\n    }\n\n    return (\n      <div className={classes.map}>\n        <Map\n          dragging={true}\n          center={[this.props.targetCenter.lat, this.props.targetCenter.lng]}\n          ref=\"map\"\n          zoom={18}\n          onlocationfound={e =>\n            this.props.storeUserLocation({\n              lat: e.latlng.lat,\n              lng: e.latlng.lng,\n            })\n          }\n        >\n          <TileLayer url={mapTiles} attribution={attrib} />\n          <Markers />\n          <Lines />\n          {currentMarker}\n        </Map>\n      </div>\n    );\n  }\n}\n\nmap.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default connect(\n  {\n    // states\n    targetCenter: state`map.targetCenter`,\n    userLocation: state`map.userLocation`,\n    userLocationAvailable: state`map.userLocationAvailable`,\n    // signals\n    storeUserLocation: signal`map.storeUserLocation`,\n    selectUnit: signal`diagnostics.selectUnit`,\n  },\n  withStyles(styles, { withTheme: true })(map),\n);\n","import React from \"react\";\nimport { connect } from \"@cerebral/react\";\nimport { state } from \"cerebral/tags\";\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  ResponsiveContainer,\n  Tooltip,\n} from \"recharts\";\nimport _ from \"lodash\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({});\n\nclass Graph extends React.Component {\n  render() {\n    var rawData;\n    if (this.props.selectedUnit && this.props.date && this.props.hour) {\n      rawData = this.props.oada[this.props.connection_id].bookmarks.isoblue[\n        \"device-index\"\n      ][this.props.selectedUnit][\"day-index\"][this.props.date][\"hour-index\"][\n        this.props.hour\n      ];\n    } else {\n      // this should not happen\n      return null;\n    }\n\n    var data = [];\n    var chart;\n    if (this.props.measurement === \"Latency\" && rawData) {\n      _.forEach(Object.values(rawData.heartbeats || {}), value => {\n        value.latency = value.recTime - value.genTime;\n        value.time = new Date(value.genTime * 1000).toLocaleTimeString(\n          \"en-US\",\n          { hour: \"numeric\", minute: \"numeric\" },\n        );\n        data.push(value);\n      });\n\n      chart = (\n        <LineChart\n          data={data}\n          margin={{ top: 20, right: 30, left: 0, bottom: 80 }}\n        >\n          <Line\n            type=\"step\"\n            isAnimationActive={false}\n            dataKey={\"latency\"}\n            stroke=\"#8884d8\"\n          />\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n          <XAxis\n            dataKey={\"time\"}\n            label={{ value: \"Time\", position: \"insideBottom\", dy: 20 }}\n          />\n          <YAxis\n            dataKey={\"latency\"}\n            label={{\n              value: \"Latency (sec)\",\n              position: \"insideLeft\",\n              angle: -90,\n            }}\n          />\n          <Tooltip />\n        </LineChart>\n      );\n    } else if (this.props.measurement === \"Wifi RSSI\" && rawData) {\n      _.forEach(Object.values(rawData.heartbeats || {}), value => {\n        _.forEach(value.interfaces, connection => {\n          if (connection.type === \"wifi\") {\n            connection.time = new Date(value.genTime * 1000).toLocaleTimeString(\n              \"en-US\",\n              { hour: \"numeric\", minute: \"numeric\" },\n            );\n            data.push(connection);\n          }\n        });\n      });\n\n      chart = (\n        <LineChart\n          data={data}\n          margin={{ top: 20, right: 30, left: 0, bottom: 80 }}\n        >\n          <Line\n            type=\"step\"\n            isAnimationActive={false}\n            dataKey={\"rssi\"}\n            stroke=\"#8884d8\"\n          />\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n          <XAxis dataKey={\"time\"} />\n          <YAxis\n            dataKey={\"rssi\"}\n            label={{\n              value: \"WiFi RSSI (dB)\",\n              position: \"insideLeft\",\n              angle: -90,\n            }}\n          />\n          <Tooltip />\n        </LineChart>\n      );\n    } else if (this.props.measurement === \"Cellular RSSI\" && rawData) {\n      _.forEach(Object.values(rawData.heartbeats || {}), value => {\n        _.forEach(value.interfaces, connection => {\n          if (connection.type === \"cellular\") {\n            connection.time = new Date(value.genTime * 1000).toLocaleTimeString(\n              \"en-US\",\n              { hour: \"numeric\", minute: \"numeric\" },\n            );\n            data.push(connection);\n          }\n        });\n      });\n\n      chart = (\n        <LineChart\n          data={data}\n          margin={{ top: 20, right: 30, left: 0, bottom: 80 }}\n        >\n          <Line\n            type=\"step\"\n            isAnimationActive={false}\n            dataKey={\"rssi\"}\n            stroke=\"#8884d8\"\n          />\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n          <XAxis dataKey={\"time\"} />\n          <YAxis\n            dataKey={\"rssi\"}\n            label={{\n              value: \"Cellular RSSI (dB)\",\n              position: \"insideLeft\",\n              angle: -90,\n            }}\n          />\n          <Tooltip />\n        </LineChart>\n      );\n    } else {\n      chart = (\n        <LineChart margin={{ top: 20, right: 30, left: 0, bottom: 80 }} />\n      );\n    }\n\n    return (\n      <ResponsiveContainer width={\"100%\"} height={\"100%\"}>\n        {chart}\n      </ResponsiveContainer>\n    );\n  }\n}\n\nexport default connect(\n  {\n    connection_id: state`data.connection_id`,\n    date: state`diagnostics.date`,\n    hour: state`diagnostics.hour`,\n    selectedUnit: state`diagnostics.selectedUnit`,\n    measurement: state`diagnostics.measurement`,\n    oada: state`oada`,\n    data: state`data`,\n  },\n  withStyles(styles, { withTheme: true })(Graph),\n);\n","import React from \"react\";\nimport { connect } from \"@cerebral/react\";\nimport { state } from \"cerebral/tags\";\n\nimport Map from \"./Map/\";\nimport Graph from \"./Graph/\";\n\nclass Visualization extends React.Component {\n  render() {\n    var graphic;\n    if (this.props.mode === \"map\") {\n      graphic = <Map />;\n    } else {\n      graphic = <Graph />;\n    }\n\n    return graphic;\n  }\n}\n\nexport default connect(\n  {\n    mode: state`diagnostics.mode`,\n  },\n  Visualization,\n);\n","import React from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport SyncIcon from \"@material-ui/icons/Sync\";\nimport SyncProblemIcon from \"@material-ui/icons/SyncProblem\";\nimport SyncDisabledIcon from \"@material-ui/icons/SyncDisabled\";\n\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\n\nconst styles = theme => ({\n  list: {\n    width: \"90%\",\n    backgroundColor: theme.palette.background.paper,\n    //position: 'relative',\n    overflow: \"auto\",\n    height: 300,\n    margin: 1.5 * theme.spacing.unit,\n  },\n  textField: {\n    margin: 1.5 * theme.spacing.unit,\n  },\n  healthy: { color: \"#008000\" },\n  sick: { color: \"#ffbf00\" },\n  down: { color: \"#ff0000\" },\n});\n\nclass Summary extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    // create unit list\n    var units;\n    if (Object.keys(this.props.health).length > 0) {\n      units = (\n        <List className={classes.list} component=\"nav\">\n          {Object.keys(this.props.health).map(unit => (\n            <ListItem\n              button\n              key={`-${unit}`}\n              onClick={() => this.props.selectUnit({ unit: unit })}\n            >\n              <ListItemText primary={unit} />\n              <ListItemIcon>\n                {(() => {\n                  switch (this.props.health[unit]) {\n                    case \"Healthy\":\n                      return <SyncIcon className={classes.healthy} />;\n                    case \"Sick\":\n                      return <SyncProblemIcon className={classes.sick} />;\n                    case \"Down\":\n                      return <SyncDisabledIcon />;\n                    default:\n                      return <SyncDisabledIcon />;\n                  }\n                })()}\n              </ListItemIcon>\n            </ListItem>\n          ))}\n        </List>\n      );\n    } else {\n      units = <List className={classes.list} component=\"nav\" />;\n    }\n\n    // wrapper for unit list\n    return (\n      <List>\n        <ListItem>\n          <ListItemText align=\"center\" primary={\"My ISOBlues:\"} />\n        </ListItem>\n        {units}\n        <Divider />\n      </List>\n    );\n  }\n}\n\nexport default connect(\n  {\n    health: state`health`,\n    selectUnit: signal`diagnostics.selectUnit`,\n  },\n  withStyles(styles)(Summary),\n);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\n\nconst styles = theme => ({});\n\nclass Diagnostics extends React.Component {\n  render() {\n    const visualizing = (\n      <ListItem>\n        <ListItemText align=\"center\">\n          <Button onClick={() => this.props.toggleMode({})} variant=\"contained\">\n            {this.props.mode === \"map\" ? \"Show Statistics\" : \"Show Map\"}\n          </Button>\n        </ListItemText>\n      </ListItem>\n    );\n\n    var measurements;\n    if (this.props.mode === \"map\") {\n      measurements = [\"GPS\"];\n    } else {\n      measurements = [\"Latency\", \"Wifi RSSI\", \"Cellular RSSI\"];\n    }\n    const measurementSelect = (\n      <Select\n        value={this.props.measurement}\n        renderValue={value => `${value}`}\n        onChange={value =>\n          this.props.setMeasurement({ measurement: value.target.value })\n        }\n      >\n        {measurements.map(measurement => (\n          <MenuItem key={measurement} value={measurement}>\n            {measurement}\n          </MenuItem>\n        ))}\n      </Select>\n    );\n\n    const dateSelect = (\n      <Select\n        value={this.props.date}\n        renderValue={value => `${value}`}\n        onChange={value => this.props.setDate({ date: value.target.value })}\n      >\n        {Object.keys(\n          this.props.oada[this.props.connection_id].bookmarks.isoblue[\n          \"device-index\"\n          ][this.props.selectedUnit][\"day-index\"],\n        ).map(date => (\n          <MenuItem key={date} value={date}>\n            {date}\n          </MenuItem>\n        ))}\n        ;\n      </Select>\n    );\n\n    const hourSelect = (\n      <Select\n        value={this.props.hour}\n        renderValue={value => `${value}`}\n        onChange={value => this.props.setHour({ hour: value.target.value })}\n      >\n        {Object.keys(\n          this.props.oada[this.props.connection_id].bookmarks.isoblue[\n          \"device-index\"\n          ][this.props.selectedUnit][\"day-index\"][this.props.date][\n          \"hour-index\"\n          ],\n        ).map(hour => (\n          <MenuItem key={hour} value={hour}>\n            {hour}\n          </MenuItem>\n        ))}\n        ;\n      </Select>\n    );\n\n    return (\n      <List>\n        <ListItem>\n          <ListItemText align=\"center\" primary={\"Selected Unit:\"} />\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\" primary={this.props.selectedUnit} />\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText align=\"center\" primary=\"ISOBlue Status:\" />\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\" primary={\"Health:\"} />\n          <ListItemText\n            align=\"center\"\n            primary={this.props.snapshots[this.props.selectedUnit].health}\n          />\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\" primary={\"Last Report:\"} />\n          <ListItemText\n            align=\"center\"\n            primary={\n              this.props.snapshots[this.props.selectedUnit].lastReport === \"NA\"\n                ? \"NA\"\n                : this.props.snapshots[this.props.selectedUnit].lastReport +\n                \" min\"\n            }\n          />\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText align=\"center\" primary={\"Available Data:\"} />\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\">{measurementSelect}</ListItemText>\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\">{dateSelect}</ListItemText>\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\">{hourSelect}</ListItemText>\n        </ListItem>\n        {visualizing}\n        <Divider />\n        <ListItem>\n          <ListItemText align=\"center\">\n            <Button\n              variant=\"contained\"\n              onClick={() => this.props.unselectUnit({})}\n            >\n              Back to Main\n            </Button>\n          </ListItemText>\n        </ListItem>\n      </List>\n    );\n  }\n}\n\nexport default connect(\n  {\n    date: state`diagnostics.date`,\n    hour: state`diagnostics.hour`,\n    measurement: state`diagnostics.measurement`,\n    selectedUnit: state`diagnostics.selectedUnit`,\n    snapshots: state`snapshots`,\n    data: state`data`,\n    mode: state`diagnostics.mode`,\n    oada: state`oada`,\n    connection_id: state`data.connection_id`,\n\n    selectUnit: signal`diagnostics.selectUnit`,\n    unselectUnit: signal`diagnostics.unselectUnit`,\n    setDate: signal`diagnostics.setDate`,\n    setHour: signal`diagnostics.setHour`,\n    setMeasurement: signal`diagnostics.setMeasurement`,\n    toggleMode: signal`diagnostics.toggleMode`,\n  },\n  withStyles(styles)(Diagnostics),\n);\n","import React from \"react\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\n\nimport Summary from \"./Summary/\";\nimport Diagnostics from \"./Diagnostics/\";\n\nconst styles = theme => ({\n  drawerPaper: {\n    position: \"relative\",\n    width: 240,\n    backgroundColor: \"#eeeeee\",\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\nclass DrawerContent extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    var content;\n    if (this.props.selectedUnit) {\n      content = <Diagnostics />;\n    } else {\n      content = <Summary />;\n    }\n\n    return (\n      <Drawer\n        open={this.props.drawerOpen}\n        onClose={this.props.toggleDrawerOpen}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.toolbar} />\n        {content}\n      </Drawer>\n    );\n  }\n}\n\nexport default connect(\n  {\n    selectedUnit: state`diagnostics.selectedUnit`,\n    drawerOpen: state`session.drawerOpen`,\n\n    toggleDrawerOpen: signal`session.toggleDrawerOpen`,\n  },\n  withStyles(styles)(DrawerContent),\n);\n","import React from 'react';\nimport { connect } from '@cerebral/react';\nimport { signal } from 'cerebral/tags';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\n\nimport AppBarContent from '../AppBarContent/';\nimport Visualization from '../Visualization/';\nimport DrawerContent from '../DrawerContent/index.js';\n\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    height: '100vh',\n    zIndex: 1,\n    overflow: 'hidden',\n    position: 'relative',\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  content: {\n    flexGrow: 1,\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\nclass App extends React.Component {\n\n  componentWillMount() {\n    this.props.init({});\n  }\n \n  render() {\n\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position='absolute' className={classes.appBar}>\n          <AppBarContent/>\n        </AppBar>\n        <DrawerContent />\n        <main className={classes.content}>\n          <div className={classes.toolbar}/>\n          <Visualization/>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default connect (\n  {\n    init: signal`init`\n  },\n  withStyles(styles, { withTheme: true })(App)\n);\n\n","import { sequence } from \"cerebral\";\nimport { state } from \"cerebral/tags\";\nimport { toggle } from \"cerebral/operators\";\n\nexport const toggleDrawerOpen = sequence(\"toggleDrawerOpen\", [\n  toggle(state`session.drawerOpen`),\n]);\n","import { Module } from 'cerebral';\nimport * as signals from './sequences'\n\nexport default Module({\n  state: {\n    drawerOpen: true,\n  },\n  signals,\n});\n\n\n","import { sequence } from \"cerebral\";\nimport { state } from \"cerebral/tags\";\nimport { set, debounce } from \"cerebral/operators\";\nimport _ from \"lodash\";\n\nexport const storeUserLocation = sequence(\"storeUserLocation\", [\n  ({ state, props }) =>\n    state.set(\"map.userLocation\", { lat: props.lat, lng: props.lng }),\n  set(state`map.userLocationAvailable`, true),\n]);\n\nexport const centerOnUser = sequence(\"centerOnUser\", [\n  set(state`map.targetCenter`, { lat: 40.428641, lng: -86.913783 }),\n  debounce(1),\n  {\n    continue: [set(state`map.targetCenter`, state`map.userLocation`)],\n    discard: [],\n  },\n]);\n\nexport const centerOnUnit = sequence(\"centerOnUnit\", [\n  set(state`map.targetCenter`, { lat: 40.428641, lng: -86.913783 }),\n  debounce(1),\n  {\n    continue: [\n      ({ state, props }) => {\n        const conn_id = state.get(\"data.connection_id\");\n        let unit = state.get(`diagnostics.selectedUnit`);\n        let date = state.get(`diagnostics.date`);\n        let hour = state.get(`diagnostics.hour`);\n        if (unit && date && hour) {\n          const gps_list =\n            state.get(\n              `oada.${conn_id}.bookmarks.isoblue.device-index.${unit}.day-index.${date}.hour-index.${hour}.gps`,\n            ) || {};\n          const last = _.max(Object.keys(gps_list));\n          if (last) {\n            const unitLocation = gps_list[last];\n            if (unitLocation.lat && unitLocation.lng) {\n              state.set(`map.targetCenter`, unitLocation);\n            }\n          }\n        }\n      },\n      //set(state`map.targetCenter`, state`snapshots.${state`diagnostics.selectedUnit`}.location`),\n    ],\n    discard: [],\n  },\n]);\n","import { sequence } from \"cerebral\";\nimport { state, props } from \"cerebral/tags\";\nimport { set } from \"cerebral/operators\";\nimport _ from \"lodash\";\n\nfunction getUnitStatus(state, props) { }\n\nexport const updateSnapshot = sequence(\"updateSnapshot\", [\n  //    ({ state, props }) => ({\n  //\n  //    }\n]);\n\nexport const createSnapshots = sequence(\"createSnapshots\", [\n  ({ state, props }) => ({\n    units: _.reduce(\n      Object.keys(\n        state.get(`oada.${props.connection_id}.bookmarks.isoblue.device-index`),\n      ),\n      (acc, unit, unitkey) => {\n        // iterate over all the ISOBlue units\n        var unitData = state.get(\n          `oada.${\n          props.connection_id\n          }.bookmarks.isoblue.device-index.${unit}.day-index`,\n        );\n        //var health, location, connection, lastReport;\n        var lastDate = Object.keys(unitData || {}).sort((a, b) => {\n          return new Date(b) - new Date(a);\n        })[0];\n        var lastTime = _.max(\n          Object.keys(unitData[lastDate][\"hour-index\"] || {}),\n        );\n\n        var lastGPS = _.max(\n          Object.keys(unitData[lastDate][\"hour-index\"][lastTime].gps || {}),\n        );\n        var lastHeartbeat = _.max(\n          Object.keys(\n            unitData[lastDate][\"hour-index\"][lastTime].heartbeats || {},\n          ),\n        );\n\n        console.log(\n          \"unit \" +\n          unit +\n          \" lastDate \" +\n          lastDate +\n          \"lastTime \" +\n          lastTime +\n          \" lasthb \" +\n          lastHeartbeat +\n          \" lastgps \" +\n          lastGPS,\n        );\n\n        // get messages\n        const msg_gps = lastGPS\n          ? unitData[lastDate][\"hour-index\"][lastTime][\"gps\"][lastGPS]\n          : null;\n        const msg_hb = lastHeartbeat\n          ? unitData[lastDate][\"hour-index\"][lastTime][\"heartbeats\"][\n          lastHeartbeat\n          ]\n          : null;\n\n        if (msg_gps && msg_hb) {\n          var lastReport = Math.round(\n            (Math.round(new Date().getTime() / 1000) -\n              _.max([lastHeartbeat, lastGPS])) /\n            60,\n          );\n          var latency = msg_hb.recTime - msg_hb.genTime;\n          var health = null;\n          if (lastReport < 2) {\n            if (latency < 20) {\n              health = \"Healthy\";\n            } else {\n              health = \"Sick\";\n            }\n          } else if (lastReport < 10) {\n            health = \"Sick\";\n          } else {\n            health = \"Down\";\n          }\n\n          var connection = null;\n\n          acc[unit] = {\n            health,\n            connection,\n            location: msg_gps,\n            lastReport,\n            lastHeartbeatTime: lastHeartbeat,\n          };\n          state.set(`health.${unit}`, health);\n        } else {\n          acc[unit] = {\n            health: \"Down\",\n            connection: \"NA\",\n            location: null,\n            lastReport: \"NA\",\n            lastHeartbeatTime: lastHeartbeat,\n          };\n          state.set(`health.${unit}`, \"Down\");\n        }\n        return acc;\n      },\n      {},\n    ),\n  }),\n  set(state`snapshots`, props`units`),\n]);\n","import { sequence } from \"cerebral\";\nimport { state, props } from \"cerebral/tags\";\nimport { set } from \"cerebral/operators\";\nimport Promise from \"bluebird\";\nimport _ from \"lodash\";\nimport oada from \"@oada/cerebral-module/sequences\";\nimport * as snapshots from \"../snapshots/sequences\";\n\nvar masterTree = {\n  bookmarks: {\n    _type: \"applications/vnd.oada.bookmarks.1+json\",\n    _rev: \"0-0\",\n    isoblue: {\n      _type: \"applications/vnd.oada.isoblue.1+json\",\n      _rev: \"0-0\",\n      \"device-index\": {\n        \"*\": {\n          _type: \"applications/vnd.oada.isoblue.device.1+json\",\n          _rev: \"0-0\",\n          \"day-index\": {\n            \"*\": {\n              _type: \"applications/vnd.oada.isoblue.day.1+json\",\n              _rev: \"0-0\",\n              \"hour-index\": {\n                \"*\": {\n                  _type: \"applications/vnd.oada.isoblue.hour.1+json\",\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nvar dayTree = {\n  bookmarks: {\n    _type: \"applications/vnd.oada.bookmarks.1+json\",\n    _rev: \"0-0\",\n    isoblue: {\n      _type: \"applications/vnd.oada.isoblue.1+json\",\n      _rev: \"0-0\",\n      \"device-index\": {\n        \"*\": {\n          _type: \"applications/vnd.oada.isoblue.device.1+json\",\n          _rev: \"0-0\",\n          \"day-index\": {\n            \"*\": {\n              _type: \"applications/vnd.oada.isoblue.day.1+json\",\n              _rev: \"0-0\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nfunction setRequestLastHour({ state, props }) {\n  return Promise.map(\n    Object.keys(\n      state.get(`oada.${props.connection_id}.bookmarks.isoblue.device-index`) ||\n        {},\n    ),\n    device => {\n      var deviceData = state.get(\n        `oada.${\n          props.connection_id\n        }.bookmarks.isoblue.device-index.${device}.day-index`,\n      );\n      var lastDate = Object.keys(deviceData || {}).sort((a, b) => {\n        return new Date(b) - new Date(a);\n      })[0];\n      let lastHour = _.max(\n        Object.keys(deviceData[lastDate][\"hour-index\"] || {}),\n      );\n      return {\n        path: `/bookmarks/isoblue/device-index/${device}/day-index/${lastDate}/hour-index/${lastHour}`,\n        watch: { signals: [\"snapshots.createSnapshots\"] },\n        tree: masterTree,\n      };\n    },\n  ).then(requests => {\n    return { requests: requests };\n  });\n}\n\n/* Called when the device list was modified */\nexport const handleDeviceUpdate = sequence(\"data.handleDeviceUpdate\", [\n  set(state`data.ready`, false),\n  setRequestLastHour,\n  oada.get,\n  set(state`data.ready`, true),\n]);\n\n/* Initial sequence. Only called at startup. */\nexport const init = sequence(\"data.init\", [\n  set(state`data.ready`, false),\n  set(state`health`, {}),\n  // connect to server\n  oada.connect,\n  set(state`data.connection_id`, props`connection_id`),\n\n  // get devices\n  ({ state, props }) => ({\n    requests: [\n      {\n        path: \"/bookmarks/isoblue\",\n        tree: dayTree,\n        watch: { signals: [\"data.handleDeviceUpdate\"] },\n      },\n    ],\n  }),\n  oada.get,\n\n  // get most recent data\n  setRequestLastHour,\n  oada.get,\n  set(state`data.ready`, true),\n]);\n\n/* Set request to OADA server based on currently selected device, date, and hour */\nexport const getHour = sequence(\"data.getHour\", [\n  ({ state, props }) => ({\n    requests: [\n      {\n        connection_id: state.get(\"data.connection_id\"),\n        path: `/bookmarks/isoblue/device-index/${state.get(\n          `diagnostics.selectedUnit`,\n        )}/day-index/${state.get(`diagnostics.date`)}/hour-index/${state.get(\n          `diagnostics.hour`,\n        )}`,\n        tree: masterTree,\n      },\n    ],\n  }),\n  oada.get,\n]);\n","import { sequence } from \"cerebral\";\nimport { state, props } from \"cerebral/tags\";\nimport { set, when } from \"cerebral/operators\";\nimport _ from \"lodash\";\nimport * as map from \"../map/sequences\";\nimport * as data from \"../data/sequences\";\n\nexport const setDate = sequence(\"setDate\", [\n  set(state`diagnostics.date`, props`date`),\n  ({ state, props }) =>\n    state.set(\n      \"diagnostics.hour\",\n      _.max(\n        Object.keys(\n          state.get(\n            `oada.${state.get(\n              \"data.connection_id\",\n            )}.bookmarks.isoblue.device-index.${state.get(\n              \"diagnostics.selectedUnit\",\n            )}.day-index.${state.get(\"diagnostics.date\")}.hour-index`,\n          ),\n        ),\n      ),\n    ),\n  data.getHour,\n  map.centerOnUnit,\n]);\n\nexport const setHour = sequence(\"setHour\", [\n  set(state`diagnostics.hour`, props`hour`),\n  data.getHour,\n  map.centerOnUnit,\n]);\n\nexport const setMeasurement = sequence(\"setMeasurement\", [\n  ({ state, props }) => state.set(\"diagnostics.measurement\", props.measurement),\n]);\n\n/* Set the selected unit, default date, and hour */\nexport const selectUnit = sequence(\"selectUnit\", [\n  ({ state, props }) => ({ connection_id: state.get(\"data.connection_id\") }),\n  set(state`diagnostics.selectedUnit`, props`unit`),\n\n  // set default date and hour\n  ({ state, props }) => {\n    const date = Object.keys(\n      state.get(\n        `oada.${props.connection_id}.bookmarks.isoblue.device-index.${\n        props.unit\n        }.day-index`,\n      ),\n    ).sort((a, b) => {\n      return new Date(b) - new Date(a);\n    })[0];\n\n    const hour = _.max(\n      Object.keys(\n        state.get(\n          `oada.${props.connection_id}.bookmarks.isoblue.device-index.${\n          props.unit\n          }.day-index.${date}.hour-index`,\n        ),\n      ),\n    );\n\n    state.set(\"diagnostics.date\", date);\n    state.set(\"diagnostics.hour\", hour);\n  },\n\n  // center the map\n  map.centerOnUnit,\n]);\n\nexport const unselectUnit = sequence(\"unselectUnit\", [\n  set(state`diagnostics.selectedUnit`, null),\n  set(state`diagnostics.date`, null),\n  set(state`diagnostics.hour`, null),\n]);\n\n/* Toggle map view and graph view */\nexport const toggleMode = sequence(\"toggleMode\", [\n  when(state`diagnostics.mode`, value => value === \"map\"),\n  {\n    true: [\n      set(state`diagnostics.mode`, \"graph\"),\n      set(state`diagnostics.measurement`, \"Latency\"),\n    ],\n    false: [\n      set(state`diagnostics.mode`, \"map\"),\n      set(state`diagnostics.measurement`, \"GPS\"),\n    ],\n  },\n]);\n","import { Module } from 'cerebral';\nimport * as signals from './sequences';\n\nexport default Module({\n  state: {\n    hour: null,\n    measurement: 'GPS',\n    selectedUnit: null,\n    date: null,\n    mode: \"map\",\n  },\n  signals,\n});\n","import { Module } from 'cerebral';\nimport * as signals from './sequences';\n\nexport default Module({\n\n  state: {\n    targetCenter: { lat: 40.428641, lng: -86.913783 },\n    userLocation: { lat: 40.428641, lng: -86.913783 },\n    userLocationAvailable: false,\n  },\n\n  signals,\n\n});\n","import { Module } from \"cerebral\";\nimport * as signals from \"./sequences\";\n\nexport default Module({\n  //state: stateTree,\n  //state: {},\n\n  signals,\n});\n","import { Module } from 'cerebral';\nimport * as signals from './sequences'\n\nexport default Module({\n  state: {\n  },\n  signals,\n});\n\n\n","import { sequence } from \"cerebral\";\n\nimport * as snapshots from \"../snapshots/sequences\";\nimport * as data from \"../data/sequences\";\n\nconst _DEV_DOMAIN = \"https://128.46.71.115\";\nconst _LOCALHOST_REDIRECT = \"http://localhost:8000/oauth2/redirect.html\";\n//const _OPENATK_DOMAIN = \"https://oada.openatk.com\";\nconst _OPENATK_REDIRECT = \"https://openatk.com/ISOBlueApp/oauth2/redirect.html\";\n\n/* localhost */\n//let _CURRENT_DOMAIN = _DEV_DOMAIN;\n//let _CURRENT_REDIRECT = _LOCALHOST_REDIRECT;\n\n/* OpenATK.com */\nlet _CURRENT_DOMAIN = _DEV_DOMAIN;\nlet _CURRENT_REDIRECT = _OPENATK_REDIRECT;\n\nlet _METADATA =\n  \"eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHBzOi8vb3BlbmF0ay5jb20vSVNPQmx1ZUFwcC9vYXV0aDIvcmVkaXJlY3QuaHRtbCIsImh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9vYXV0aDIvcmVkaXJlY3QuaHRtbCJdLCJ0b2tlbl9lbmRwb2ludF9hdXRoX21ldGhvZCI6InVybjppZXRmOnBhcmFtczpvYXV0aDpjbGllbnQtYXNzZXJ0aW9uLXR5cGU6and0LWJlYXJlciIsImdyYW50X3R5cGVzIjpbImF1dGhvcml6YXRpb25fY29kZSJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImNvZGUiLCJpZF90b2tlbiIsImlkX3Rva2VuIHRva2VuIiwiY29kZSBpZF90b2tlbiIsImNvZGUgdG9rZW4iLCJjb2RlIGlkX3Rva2VuIHRva2VuIl0sImNsaWVudF9uYW1lIjoiSVNPQmx1ZSBIZWFsdGggTW9uaXRvciIsImNsaWVudF91cmkiOiJodHRwOi8vb2FkYS5vcGVuYXRrLmNvbS9JU09CbHVlQXBwIiwiY29udGFjdHMiOlsiU2FtIE5vZWwgPHNhbm9lbEBwdXJkdWUuZWR1PiJdLCJqd2tzIjp7ImtleXMiOlt7Imt0eSI6IlJTQSIsIm4iOiJ6YXVaRkJ1TWRsdjFrWWp6VWI0cS1fM200c21GeG5mdzRTWW9hSHE3Y2k4U2N0WTN4ajdyZEFIeWtRcG5RVnJqNktPOG1hSHYtMEJ2VzVNaGNnaXZrdVlzLXpIRXZmWUJlVkJuY3ZIZ09rSlBiYzkxQ3dfaXdPWTdFSFdCOGhNN1ZpTFFWY19EdjBoOG5KeWJCdmhMMDRDSFF0N0NwTXRWWUc2Zm9KWGMzZHE1MmpOUWJCSElaNW03VnoxS3R5em9MY3A4TzJtaGFMcDQ1VXIzQ18xZUd0djhuNU56OWJXX0JoNVhGWWJEeHY3Qm5oWk5JdzFHQ2JqakF3bXRibm5MN0dnZjRDeTYwd1JIbVI0dm9lMjFPSWpvQVNxMmpaMDN4MTJtWHM3SFBJM1lCNHkyOXd2Wk13MmdMek9kVG9ycnFPLXRsbW4xYm9Qa1dLSkpTWG9BdnciLCJlIjoiQVFBQiJ9XX0sInNvZnR3YXJlX2lkIjoiNzY1ZjFlZjctMzExNy00NjhhLTgwYjMtMDExYzQ1MjhkMGExIiwicmVnaXN0cmF0aW9uX3Byb3ZpZGVyIjoiaHR0cHM6Ly9pZGVudGl0eS5vYWRhLWRldi5jb20iLCJpYXQiOjE1NDcxNDYxOTF9.seH7eMsR1218IgEEbiq3T5ASGQAr7vqvy54_Yu8-6TIoAoVfslG-dSYWE2dXZ_P65kElqCKZLizVxyR1732vcFnOdzp6jE_pgpLg-eWZfVnIvNQdGK8Dh-5t1gVbPs1ME-j_GMCb2Un-mpDS8LAw4Nig_r-monjKyKbcPBN6gc4\";\n\n//let _METADATA = \"eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHBzOi8vb3BlbmF0ay5jb20vVGhlUm9ja0FwcC9vYXV0aDIvcmVkaXJlY3QuaHRtbCIsImh0dHBzOi8vamFmaWVjaHQuZ2l0aHViLmlvL3JvY2thcHBfMS9vYXV0aDIvcmVkaXJlY3QuaHRtbCIsImh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9vYXV0aDIvcmVkaXJlY3QuaHRtbCJdLCJ0b2tlbl9lbmRwb2ludF9hdXRoX21ldGhvZCI6InVybjppZXRmOnBhcmFtczpvYXV0aDpjbGllbnQtYXNzZXJ0aW9uLXR5cGU6and0LWJlYXJlciIsImdyYW50X3R5cGVzIjpbImF1dGhvcml6YXRpb25fY29kZSJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImNvZGUiLCJpZF90b2tlbiIsImlkX3Rva2VuIHRva2VuIiwiY29kZSBpZF90b2tlbiIsImNvZGUgdG9rZW4iLCJjb2RlIGlkX3Rva2VuIHRva2VuIl0sImNsaWVudF9uYW1lIjoiT3BlbkFUSyIsImNsaWVudF91cmkiOiJodHRwOi8vb3BlbmF0ay5jb20iLCJjb250YWN0cyI6WyJKZWZmIEZpZWNodGVyIDxqYWZpZWNodEBwdXJkdWUuZWR1PiJdLCJqd2tzIjp7ImtleXMiOlt7Imt0eSI6IlJTQSIsIm4iOiJ6YXVaRkJ1TWRsdjFrWWp6VWI0cS1fM200c21GeG5mdzRTWW9hSHE3Y2k4U2N0WTN4ajdyZEFIeWtRcG5RVnJqNktPOG1hSHYtMEJ2VzVNaGNnaXZrdVlzLXpIRXZmWUJlVkJuY3ZIZ09rSlBiYzkxQ3dfaXdPWTdFSFdCOGhNN1ZpTFFWY19EdjBoOG5KeWJCdmhMMDRDSFF0N0NwTXRWWUc2Zm9KWGMzZHE1MmpOUWJCSElaNW03VnoxS3R5em9MY3A4TzJtaGFMcDQ1VXIzQ18xZUd0djhuNU56OWJXX0JoNVhGWWJEeHY3Qm5oWk5JdzFHQ2JqakF3bXRibm5MN0dnZjRDeTYwd1JIbVI0dm9lMjFPSWpvQVNxMmpaMDN4MTJtWHM3SFBJM1lCNHkyOXd2Wk13MmdMek9kVG9ycnFPLXRsbW4xYm9Qa1dLSkpTWG9BdnciLCJlIjoiQVFBQiJ9XX0sInNvZnR3YXJlX2lkIjoiNmExNDFjODgtMDdhZC00M2M4LWIyMjEtYTU0MDkzMGJjMzFmIiwicmVnaXN0cmF0aW9uX3Byb3ZpZGVyIjoiaHR0cHM6Ly9pZGVudGl0eS5vYWRhLWRldi5jb20iLCJpYXQiOjE1MzQyNzk0MjJ9.hf9lLNxSY75R4MOXaUjgYZaYQqNunrUQhKV068Yk2azluGpKoBnDr8Ljn1U4Cdg39LBHzwARnL97TC3drjNCqKl-WU2-DLH5xY6wLgve7iR28ZllntFf_RXmFc5vJnYf0l6MPv7ukCJz0XBrXmBu7X1siSBpg8Rz4aIqelrLM28\";\n\nexport const init = sequence(\"init\", [\n  () => ({\n    domain: _CURRENT_DOMAIN,\n    options: {\n      redirect: _CURRENT_REDIRECT,\n      metadata: _METADATA,\n      scope: \"oada.isoblue:all\",\n    },\n  }),\n  data.init,\n  snapshots.createSnapshots,\n]);\n","import { Module } from 'cerebral';\n\nimport session from '../session/';\nimport diagnostics from '../diagnostics/';\nimport map from '../map/';\nimport data from '../data/';\nimport snapshots from '../snapshots/';\nimport oadaModule from '@oada/cerebral-module'\nimport oadaProvider from '@oada/cerebral-provider'\nimport * as signals from './sequences';\n\nexport default Module({\n  modules: {\n    session,\n    oada: oadaModule,\n    diagnostics,\n    map,\n    data,\n    snapshots,\n  },\n  signals,\n  providers: {\n    oada: oadaProvider\n  }\n});\n\n","import { Controller } from \"cerebral\";\nimport root from \"./modules/root\";\nimport Devtools from \"cerebral/devtools\";\n\nexport default Controller(root, {\n  devtools:\n    process.env.NODE_ENV === \"production\"\n      ? null\n      : Devtools({ host: \"localhost:8787\" }),\n  //devtools: null,\n});\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport App from './components/App/';\n\nimport { Container } from '@cerebral/react';\nimport controller from './controller';\n\n\nconst theme = createMuiTheme({\n  pallete: {\n    primary: {\n      light: '#718792',\n      main: '#455a64',\n      dark: '#1c313a',\n      contrastText: '#ffffff',\n    },\n    secondary: {\n      light: '#896a60',\n      main: '#5b3f36',\n      dark: '#301810',\n      contrastText: '#ffffff',\n    },\n  },\n});\n\n\nrender (\n  <Container controller={controller}>\n    <MuiThemeProvider theme={theme}>\n      <App/> \n    </MuiThemeProvider>\n  </Container>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}