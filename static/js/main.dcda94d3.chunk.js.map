{"version":3,"sources":["components/AppBarContent/index.js","components/Visualization/Map/Lines/index.js","components/Visualization/Map/Markers/index.js","components/Visualization/Map/index.js","components/Visualization/Graph/index.js","components/Visualization/index.js","components/DrawerContent/Summary/index.js","components/DrawerContent/Diagnostics/index.js","components/DrawerContent/index.js","components/App/index.js","modules/session/sequences.js","modules/session/index.js","modules/map/sequences.js","modules/snapshots/sequences.js","modules/data/sequences.js","modules/diagnostics/sequences.js","modules/diagnostics/index.js","modules/map/index.js","modules/data/index.js","modules/snapshots/index.js","modules/root/sequences.js","modules/root/index.js","controller.js","index.js"],"names":["AppBarContent","userLocationButton","_this","this","classes","props","userLocationAvailable","react_default","a","createElement","IconButton_default","onClick","centerOnUser","MyLocation_default","className","icon","Toolbar_default","color","aria-label","toggleDrawerOpen","Menu_default","Typography_default","variant","flex","React","Component","connect","state","_templateObject","signal","_templateObject2","_templateObject3","withStyles","theme","_icon","Object","defineProperty","breakpoints","up","width","spacing","unit","height","marginRight","down","Lines","conn_id","data","connection_id","ready","devices","oada","bookmarks","isoblue","dataLines","_","forEach","unit_resource","days","selectedUnit","gps","date","hour","positions","instance","lat","lng","push","snapshots","health","current_time_sec","Math","round","Date","getTime","keys","sort","b","hours","currentHour","max","lastHour","remove","n","currentGPS","lastGPS","time","i","tempGPS","map","Polyline","key","uuid","v4","Lines_templateObject","Lines_templateObject2","Lines_templateObject3","_templateObject4","_templateObject5","_templateObject6","withTheme","Markers","unitMarkers","location","CircleMarker","ref","center","fillColor","fillOpacity","radius","zIndexOffset","e","selectUnit","Tooltip","direction","offset","Markers_templateObject","Markers_templateObject2","Markers_templateObject3","Markers_templateObject4","Markers_templateObject5","Markers_templateObject6","refs","leafletElement","locate","currentMarker","Marker","position","userLocation","Map","dragging","targetCenter","zoom","onlocationfound","storeUserLocation","latlng","TileLayer","url","attribution","Map_Markers","Map_Lines","Map_templateObject","Map_templateObject2","Map_templateObject3","Map_templateObject4","Map_templateObject5","Map_templateObject6","display","Graph","rawData","chart","measurement","values","heartbeats","value","latency","recTime","genTime","toLocaleTimeString","minute","LineChart","margin","top","right","left","bottom","Line","type","isAnimationActive","dataKey","stroke","CartesianGrid","strokeDasharray","XAxis","label","dy","YAxis","angle","component_Tooltip","interfaces","connection","ResponsiveContainer","Graph_templateObject","Graph_templateObject2","Graph_templateObject3","Graph_templateObject4","Graph_templateObject5","Graph_templateObject6","_templateObject7","Visualization","mode","Visualization_Map","Visualization_Graph","Visualization_templateObject","Summary","units","length","List_default","list","component","ListItem_default","button","concat","ListItemText_default","primary","ListItemIcon_default","Sync_default","healthy","SyncProblem_default","sick","SyncDisabled_default","align","Divider_default","Summary_templateObject","Summary_templateObject2","backgroundColor","palette","background","paper","overflow","textField","Diagnostics","measurements","visualizing","Button_default","toggleMode","measurementSelect","Select_default","renderValue","onChange","setMeasurement","target","MenuItem_default","dateSelect","setDate","hourSelect","setHour","lastReport","unselectUnit","Diagnostics_templateObject","Diagnostics_templateObject2","Diagnostics_templateObject3","Diagnostics_templateObject4","Diagnostics_templateObject5","Diagnostics_templateObject6","Diagnostics_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","DrawerContent","content","DrawerContent_Diagnostics","DrawerContent_Summary","Drawer_default","open","drawerOpen","onClose","drawerPaper","toolbar","DrawerContent_templateObject","DrawerContent_templateObject2","DrawerContent_templateObject3","mixins","App","init","root","AppBar_default","appBar","components_AppBarContent","components_DrawerContent","components_Visualization","App_templateObject","flexGrow","zIndex","drawer","sequence","toggle","sequences_templateObject","Module","signals","_ref","set","map_sequences_templateObject","sequences_templateObject2","debounce","continue","sequences_templateObject3","sequences_templateObject4","discard","centerOnUnit","sequences_templateObject5","_ref2","get","gps_list","last","unitLocation","updateSnapshot","createSnapshots","reduce","acc","unitkey","unitData","lastDate","lastTime","lastHeartbeat","msg_gps","msg_hb","lastHeartbeatTime","snapshots_sequences_templateObject","snapshots_sequences_templateObject2","masterTree","_type","_rev","device-index","*","day-index","hour-index","dayTree","setRequestLastHour","Promise","device","deviceData","path","watch","tree","then","requests","handleDeviceUpdate","data_sequences_templateObject","data_sequences_templateObject2","data_sequences_templateObject3","data_sequences_templateObject4","data_sequences_templateObject5","sequences_templateObject6","getHour","_ref3","diagnostics_sequences_templateObject","diagnostics_sequences_templateObject2","diagnostics_sequences_templateObject3","diagnostics_sequences_templateObject4","diagnostics_sequences_templateObject5","diagnostics_sequences_templateObject6","_ref4","sequences_templateObject7","sequences_templateObject8","sequences_templateObject9","when","sequences_templateObject10","true","sequences_templateObject11","sequences_templateObject12","false","sequences_templateObject13","sequences_templateObject14","domain","options","redirect","metadata","scope","modules","session","oadaModule","diagnostics","providers","oadaProvider","Controller","devtools","createMuiTheme","pallete","light","main","dark","contrastText","secondary","render","_cerebral_react","controller","core_styles","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.dcda94d3.chunk.js","sourcesContent":["import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\n//import TextField from '@material-ui/core/TextField';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport { connect } from '@cerebral/react';\nimport { state, signal } from 'cerebral/tags';\n\nconst styles = theme => ({\n  flex: {\n    flex: 1,\n  },\n  icon: {\n    color: '#FFFFFF',\n    [theme.breakpoints.up('xs')]: {\n      width: 5*theme.spacing.unit,\n      height: 5*theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n    },\n    [theme.breakpoints.down('xs')]: {\n      width: 4*theme.spacing.unit,\n      height: 4*theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n    },\n  },\n});\n\nclass AppBarContent extends React.Component {\n\n  render() {\n    const { classes } = this.props\n\n    var userLocationButton;\n    if (this.props.userLocationAvailable) {\n      userLocationButton = \n      <IconButton\n        onClick={() => this.props.centerOnUser({})}>\n        <MyLocationIcon className={classes.icon}/>\n      </IconButton>\n    } else {\n      userLocationButton = null;\n    }\n\n    return (\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"Open Drawer\"\n          onClick={this.props.toggleDrawerOpen}\n          >\n          <MenuIcon className={classes.icon}/>\n        </IconButton>\n        <Typography variant='title' color='inherit' className={classes.flex}>\n          ISOBlueApp [1.0.0]\n        </Typography>\n        {userLocationButton}\n      </Toolbar>\n    )\n  }\n}\n\nexport default connect({\n  userLocationAvailable: state`map.userLocationAvailable`,\n\n  centerOnUser: signal`map.centerOnUser`,  \n  toggleDrawerOpen: signal`session.toggleDrawerOpen`,\n\n  },\n  withStyles(styles)(AppBarContent)\n);\n\n\n\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { connect } from \"@cerebral/react\";\nimport { state } from \"cerebral/tags\";\nimport uuid from \"uuid\";\n//import Leaflet from 'leaflet';\nimport { Polyline } from \"react-leaflet\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({});\n\nclass Lines extends React.Component {\n  render() {\n    const conn_id = this.props.data.connection_id;\n    if (!this.props.data.ready) return null;\n    const devices =\n      this.props.oada[conn_id].bookmarks.isoblue[\"device-index\"] || {};\n    var dataLines = [];\n    _.forEach(devices, (unit_resource, unit) => {\n      const days = unit_resource[\"day-index\"];\n      // selected unit\n      if (unit === this.props.selectedUnit) {\n        var gps = days[this.props.date][\"hour-index\"][this.props.hour].gps;\n        var positions = [];\n        _.forEach(gps, instance => {\n          if (instance.lat && instance.lng) {\n            positions.push([instance.lat, instance.lng]);\n          }\n        });\n        dataLines.push(positions);\n      }\n      // non-selected unit\n      else if (\n        this.props.snapshots[unit].health === \"Healthy\" ||\n        this.props.snapshots[unit].health === \"Sick\"\n      ) {\n        var positions = [];\n        var current_time_sec = Math.round(new Date().getTime() / 1000);\n        var date = Object.keys(days).sort((a, b) => {\n          return new Date(b) - new Date(a);\n        })[0];\n        var hours = Object.keys(days[date][\"hour-index\"]);\n        var currentHour = _.max(hours);\n        var lastHour = _.max(\n          _.remove(hours, n => {\n            return n !== currentHour;\n          }),\n        );\n\n        var currentGPS = Object.keys(\n          days[date][\"hour-index\"][currentHour].gps || {},\n        );\n        var lastGPS = lastHour\n          ? Object.keys(days[date][\"hour-index\"][lastHour].gps || {})\n          : [];\n\n        // FIXME: currentGPS and lastGPS are not guaranteed to be sorted\n\n        //Creates a polyline of last 15 mins of data from both the current and\n        //last hour of data\n        _.forEach(currentGPS, (time, i) => {\n          var tempGPS = days[date][\"hour-index\"][currentHour].gps[time];\n          if (\n            current_time_sec - time <= 15 * 60 &&\n            tempGPS.lat &&\n            tempGPS.lng\n          ) {\n            positions.push([tempGPS.lat, tempGPS.lng]);\n          }\n        });\n        _.forEach(lastGPS || [], time => {\n          var tempGPS = days[date][\"hour-index\"][lastHour].gps[time];\n          if (\n            current_time_sec - time <= 15 * 60 &&\n            tempGPS.lat &&\n            tempGPS.lng\n          ) {\n            positions.push([tempGPS.lat, tempGPS.lng]);\n          }\n        });\n\n        dataLines.push(positions);\n      }\n    });\n\n    return (\n      <div>\n        {dataLines.map(positions => (\n          <Polyline key={uuid.v4()} positions={positions} color=\"#ffffff\" />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  {\n    snapshots: state`snapshots`,\n    data: state`data`,\n    oada: state`oada`,\n    date: state`diagnostics.date`,\n    hour: state`diagnostics.hour`,\n    selectedUnit: state`diagnostics.selectedUnit`,\n  },\n  withStyles(styles, { withTheme: true })(Lines),\n);\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport { CircleMarker, Tooltip } from \"react-leaflet\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({});\n\nclass Markers extends React.Component {\n  render() {\n    const unitMarkers = [];\n    _.forEach(Object.keys(this.props.snapshots) || {}, unit => {\n      var tempGPS = this.props.snapshots[unit].location;\n      if (tempGPS && tempGPS.lat && tempGPS.lng) {\n        unitMarkers.push(\n          <CircleMarker\n            ref={unit => {\n              this.unit = unit;\n            }}\n            key={unit}\n            center={[\n              this.props.snapshots[unit].location.lat,\n              this.props.snapshots[unit].location.lng,\n            ]}\n            color={\"#ffffff\"}\n            fillColor={(() => {\n              switch (this.props.snapshots[unit].health) {\n                case \"Healthy\":\n                  return \"#008000\";\n                case \"Sick\":\n                  return \"#ffbf00\";\n                case \"Down\":\n                  return \"#707070\";\n                default:\n                  return \"#707070\";\n              }\n            })()}\n            fillOpacity={1}\n            radius={12}\n            zIndexOffset={1}\n            onClick={e => this.props.selectUnit({ unit: unit })}\n          >\n            <Tooltip direction=\"top\" offset={[0, -10]}>\n              <b>Unit: {unit}</b>\n              <br />\n              <center>\n                <b>{this.props.snapshots[unit].health}</b>\n              </center>\n            </Tooltip>\n          </CircleMarker>,\n        );\n      }\n    });\n\n    return <div>{unitMarkers}</div>;\n  }\n}\n\nexport default connect(\n  {\n    snapshots: state`snapshots`,\n    data: state`data`,\n    date: state`diagnostics.date`,\n    hour: state`diagnostics.hour`,\n    selectedUnit: state`diagnostics.selectedUnit`,\n\n    selectUnit: signal`diagnostics.selectUnit`,\n  },\n  withStyles(styles, { withTheme: true })(Markers),\n);\n","import React from \"react\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport { Map, Marker, TileLayer } from \"react-leaflet\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport \"./Map.css\";\nimport Lines from \"./Lines/\";\nimport Markers from \"./Markers/\";\n\nconst styles = theme => ({\n  map: {\n    position: \"relative\",\n    display: \"flex\",\n    width: \"100%\",\n    height: \"calc(100% - 56px)\",\n  },\n});\n\nconst mapTiles =\n  \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\";\nconst attrib =\n  \"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\";\n\nclass map extends React.Component {\n  componentDidMount() {\n    this.refs.map.leafletElement.locate();\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    const currentMarker = [];\n    if (this.props.userLocationAvailable) {\n      currentMarker.push(\n        <Marker\n          key={\"user\"}\n          position={[this.props.userLocation.lat, this.props.userLocation.lng]}\n        >\n          zIndexOffset={1}\n        </Marker>,\n      );\n    }\n\n    return (\n      <div className={classes.map}>\n        <Map\n          dragging={true}\n          center={[this.props.targetCenter.lat, this.props.targetCenter.lng]}\n          ref=\"map\"\n          zoom={18}\n          onlocationfound={e =>\n            this.props.storeUserLocation({\n              lat: e.latlng.lat,\n              lng: e.latlng.lng,\n            })\n          }\n        >\n          <TileLayer url={mapTiles} attribution={attrib} />\n          <Markers />\n          <Lines />\n          {currentMarker}\n        </Map>\n      </div>\n    );\n  }\n}\n\nmap.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default connect(\n  {\n    targetCenter: state`map.targetCenter`,\n    userLocation: state`map.userLocation`,\n    userLocationAvailable: state`map.userLocationAvailable`,\n    snapshots: state`snapshots`,\n\n    storeUserLocation: signal`map.storeUserLocation`,\n    selectUnit: signal`diagnostics.selectUnit`,\n  },\n  withStyles(styles, { withTheme: true })(map),\n);\n","import React from \"react\";\nimport { connect } from \"@cerebral/react\";\nimport { state } from \"cerebral/tags\";\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  ResponsiveContainer,\n  Tooltip,\n} from \"recharts\";\nimport _ from \"lodash\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({});\n\nclass Graph extends React.Component {\n  render() {\n    var rawData;\n    if (this.props.selectedUnit && this.props.date && this.props.hour) {\n      rawData = this.props.oada[this.props.connection_id].bookmarks.isoblue[\n        \"device-index\"\n      ][this.props.selectedUnit][\"day-index\"][this.props.date][\"hour-index\"][\n        this.props.hour\n      ];\n    } else {\n      // this should not happen\n      return null;\n    }\n\n    var data = [];\n    var chart;\n    if (this.props.measurement === \"Latency\" && rawData) {\n      _.forEach(Object.values(rawData.heartbeats || {}), value => {\n        value.latency = value.recTime - value.genTime;\n        value.time = new Date(value.genTime * 1000).toLocaleTimeString(\n          \"en-US\",\n          { hour: \"numeric\", minute: \"numeric\" },\n        );\n        data.push(value);\n      });\n\n      chart = (\n        <LineChart\n          data={data}\n          margin={{ top: 20, right: 30, left: 0, bottom: 80 }}\n        >\n          <Line\n            type=\"step\"\n            isAnimationActive={false}\n            dataKey={\"latency\"}\n            stroke=\"#8884d8\"\n          />\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n          <XAxis\n            dataKey={\"time\"}\n            label={{ value: \"Time\", position: \"insideBottom\", dy: 20 }}\n          />\n          <YAxis\n            dataKey={\"latency\"}\n            label={{\n              value: \"Latency (sec)\",\n              position: \"insideLeft\",\n              angle: -90,\n            }}\n          />\n          <Tooltip />\n        </LineChart>\n      );\n    } else if (this.props.measurement === \"Wifi RSSI\" && rawData) {\n      _.forEach(Object.values(rawData.heartbeats || {}), value => {\n        _.forEach(value.interfaces, connection => {\n          if (connection.type === \"wifi\") {\n            connection.time = new Date(value.genTime * 1000).toLocaleTimeString(\n              \"en-US\",\n              { hour: \"numeric\", minute: \"numeric\" },\n            );\n            data.push(connection);\n          }\n        });\n      });\n\n      chart = (\n        <LineChart\n          data={data}\n          margin={{ top: 20, right: 30, left: 0, bottom: 80 }}\n        >\n          <Line\n            type=\"step\"\n            isAnimationActive={false}\n            dataKey={\"rssi\"}\n            stroke=\"#8884d8\"\n          />\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n          <XAxis dataKey={\"time\"} />\n          <YAxis\n            dataKey={\"rssi\"}\n            label={{\n              value: \"WiFi RSSI (dB)\",\n              position: \"insideLeft\",\n              angle: -90,\n            }}\n          />\n          <Tooltip />\n        </LineChart>\n      );\n    } else if (this.props.measurement === \"Cellular RSSI\" && rawData) {\n      _.forEach(Object.values(rawData.heartbeats || {}), value => {\n        _.forEach(value.interfaces, connection => {\n          if (connection.type === \"cellular\") {\n            connection.time = new Date(value.genTime * 1000).toLocaleTimeString(\n              \"en-US\",\n              { hour: \"numeric\", minute: \"numeric\" },\n            );\n            data.push(connection);\n          }\n        });\n      });\n\n      chart = (\n        <LineChart\n          data={data}\n          margin={{ top: 20, right: 30, left: 0, bottom: 80 }}\n        >\n          <Line\n            type=\"step\"\n            isAnimationActive={false}\n            dataKey={\"rssi\"}\n            stroke=\"#8884d8\"\n          />\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n          <XAxis dataKey={\"time\"} />\n          <YAxis\n            dataKey={\"rssi\"}\n            label={{\n              value: \"Cellular RSSI (dB)\",\n              position: \"insideLeft\",\n              angle: -90,\n            }}\n          />\n          <Tooltip />\n        </LineChart>\n      );\n    } else {\n      chart = (\n        <LineChart margin={{ top: 20, right: 30, left: 0, bottom: 80 }} />\n      );\n    }\n\n    return (\n      <ResponsiveContainer width={\"100%\"} height={\"100%\"}>\n        {chart}\n      </ResponsiveContainer>\n    );\n  }\n}\n\nexport default connect(\n  {\n    connection_id: state`data.connection_id`,\n    date: state`diagnostics.date`,\n    hour: state`diagnostics.hour`,\n    selectedUnit: state`diagnostics.selectedUnit`,\n    measurement: state`diagnostics.measurement`,\n    oada: state`oada`,\n    data: state`data`,\n  },\n  withStyles(styles, { withTheme: true })(Graph),\n);\n","import React from \"react\";\nimport { connect } from \"@cerebral/react\";\nimport { state } from \"cerebral/tags\";\nimport LoadingOverlay from \"react-loading-overlay\";\n\nimport Map from \"./Map/\";\nimport Graph from \"./Graph/\";\n\nclass Visualization extends React.Component {\n  render() {\n    var graphic;\n    if (this.props.mode === \"map\") {\n      graphic = <Map />;\n    } else {\n      graphic = <Graph />;\n    }\n    return graphic;\n  }\n}\n\nexport default connect(\n  {\n    mode: state`diagnostics.mode`,\n  },\n  Visualization,\n);\n","import React from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport SyncIcon from \"@material-ui/icons/Sync\";\nimport SyncProblemIcon from \"@material-ui/icons/SyncProblem\";\nimport SyncDisabledIcon from \"@material-ui/icons/SyncDisabled\";\n\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\n\nconst styles = theme => ({\n  list: {\n    width: \"90%\",\n    backgroundColor: theme.palette.background.paper,\n    //position: 'relative',\n    overflow: \"auto\",\n    height: 300,\n    margin: 1.5 * theme.spacing.unit,\n  },\n  textField: {\n    margin: 1.5 * theme.spacing.unit,\n  },\n  healthy: { color: \"#008000\" },\n  sick: { color: \"#ffbf00\" },\n  down: { color: \"#ff0000\" },\n});\n\nclass Summary extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    // create unit list\n    var units;\n    if (Object.keys(this.props.snapshots).length > 0) {\n      units = (\n        <List className={classes.list} component=\"nav\">\n          {Object.keys(this.props.snapshots).map(unit => (\n            <ListItem\n              button\n              key={`-${unit}`}\n              onClick={() => this.props.selectUnit({ unit: unit })}\n            >\n              <ListItemText primary={unit} />\n              <ListItemIcon>\n                {(() => {\n                  switch (this.props.snapshots[unit].health) {\n                    case \"Healthy\":\n                      return <SyncIcon className={classes.healthy} />;\n                    case \"Sick\":\n                      return <SyncProblemIcon className={classes.sick} />;\n                    case \"Down\":\n                      return <SyncDisabledIcon />;\n                    default:\n                      return <SyncDisabledIcon />;\n                  }\n                })()}\n              </ListItemIcon>\n            </ListItem>\n          ))}\n        </List>\n      );\n    } else {\n      units = <List className={classes.list} component=\"nav\" />;\n    }\n\n    // wrapper for unit list\n    return (\n      <List>\n        <ListItem>\n          <ListItemText align=\"center\" primary={\"My ISOBlues:\"} />\n        </ListItem>\n        {units}\n        <Divider />\n      </List>\n    );\n  }\n}\n\nexport default connect(\n  {\n    snapshots: state`snapshots`,\n    selectUnit: signal`diagnostics.selectUnit`,\n  },\n  withStyles(styles)(Summary),\n);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\n\nconst styles = theme => ({});\n\nclass Diagnostics extends React.Component {\n  render() {\n    const visualizing = (\n      <ListItem>\n        <ListItemText align=\"center\">\n          <Button onClick={() => this.props.toggleMode({})} variant=\"contained\">\n            {this.props.mode === \"map\" ? \"Show Statistics\" : \"Show Map\"}\n          </Button>\n        </ListItemText>\n      </ListItem>\n    );\n\n    var measurements;\n    if (this.props.mode === \"map\") {\n      measurements = [\"GPS\"];\n    } else {\n      measurements = [\"Latency\", \"Wifi RSSI\", \"Cellular RSSI\"];\n    }\n    const measurementSelect = (\n      <Select\n        value={this.props.measurement}\n        renderValue={value => `${value}`}\n        onChange={value =>\n          this.props.setMeasurement({ measurement: value.target.value })\n        }\n      >\n        {measurements.map(measurement => (\n          <MenuItem key={measurement} value={measurement}>\n            {measurement}\n          </MenuItem>\n        ))}\n      </Select>\n    );\n\n    const dateSelect = (\n      <Select\n        value={this.props.date}\n        renderValue={value => `${value}`}\n        onChange={value => this.props.setDate({ date: value.target.value })}\n      >\n        {Object.keys(\n          this.props.oada[this.props.connection_id].bookmarks.isoblue[\n          \"device-index\"\n          ][this.props.selectedUnit][\"day-index\"],\n        ).map(date => (\n          <MenuItem key={date} value={date}>\n            {date}\n          </MenuItem>\n        ))}\n        ;\n      </Select>\n    );\n\n    const hourSelect = (\n      <Select\n        value={this.props.hour}\n        renderValue={value => `${value}`}\n        onChange={value => this.props.setHour({ hour: value.target.value })}\n      >\n        {Object.keys(\n          this.props.oada[this.props.connection_id].bookmarks.isoblue[\n          \"device-index\"\n          ][this.props.selectedUnit][\"day-index\"][this.props.date][\n          \"hour-index\"\n          ],\n        ).map(hour => (\n          <MenuItem key={hour} value={hour}>\n            {hour}\n          </MenuItem>\n        ))}\n        ;\n      </Select>\n    );\n\n    return (\n      <List>\n        <ListItem>\n          <ListItemText align=\"center\" primary={\"Selected Unit:\"} />\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\" primary={this.props.selectedUnit} />\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText align=\"center\" primary=\"ISOBlue Status:\" />\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\" primary={\"Health:\"} />\n          <ListItemText\n            align=\"center\"\n            primary={this.props.snapshots[this.props.selectedUnit].health}\n          />\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\" primary={\"Last Report:\"} />\n          <ListItemText\n            align=\"center\"\n            primary={\n              this.props.snapshots[this.props.selectedUnit].lastReport === \"NA\"\n                ? \"NA\"\n                : this.props.snapshots[this.props.selectedUnit].lastReport +\n                \" min\"\n            }\n          />\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText align=\"center\" primary={\"Available Data:\"} />\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\">{measurementSelect}</ListItemText>\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\">{dateSelect}</ListItemText>\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\">{hourSelect}</ListItemText>\n        </ListItem>\n        {visualizing}\n        <Divider />\n        <ListItem>\n          <ListItemText align=\"center\">\n            <Button\n              variant=\"contained\"\n              onClick={() => this.props.unselectUnit({})}\n            >\n              Back to Main\n            </Button>\n          </ListItemText>\n        </ListItem>\n      </List>\n    );\n  }\n}\n\nexport default connect(\n  {\n    date: state`diagnostics.date`,\n    hour: state`diagnostics.hour`,\n    measurement: state`diagnostics.measurement`,\n    selectedUnit: state`diagnostics.selectedUnit`,\n    snapshots: state`snapshots`,\n    data: state`data`,\n    mode: state`diagnostics.mode`,\n    oada: state`oada`,\n    connection_id: state`data.connection_id`,\n\n    selectUnit: signal`diagnostics.selectUnit`,\n    unselectUnit: signal`diagnostics.unselectUnit`,\n    setDate: signal`diagnostics.setDate`,\n    setHour: signal`diagnostics.setHour`,\n    setMeasurement: signal`diagnostics.setMeasurement`,\n    toggleMode: signal`diagnostics.toggleMode`,\n  },\n  withStyles(styles)(Diagnostics),\n);\n","import React from \"react\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\n\nimport Summary from \"./Summary/\";\nimport Diagnostics from \"./Diagnostics/\";\n\nconst styles = theme => ({\n  drawerPaper: {\n    position: \"relative\",\n    width: 240,\n    backgroundColor: \"#eeeeee\",\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\nclass DrawerContent extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    var content;\n    if (this.props.selectedUnit) {\n      content = <Diagnostics />;\n    } else {\n      content = <Summary />;\n    }\n\n    return (\n      <Drawer\n        open={this.props.drawerOpen}\n        onClose={this.props.toggleDrawerOpen}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.toolbar} />\n        {content}\n      </Drawer>\n    );\n  }\n}\n\nexport default connect(\n  {\n    selectedUnit: state`diagnostics.selectedUnit`,\n    drawerOpen: state`session.drawerOpen`,\n\n    toggleDrawerOpen: signal`session.toggleDrawerOpen`,\n  },\n  withStyles(styles)(DrawerContent),\n);\n","import React from 'react';\nimport { connect } from '@cerebral/react';\nimport { signal } from 'cerebral/tags';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\n\nimport AppBarContent from '../AppBarContent/';\nimport Visualization from '../Visualization/';\nimport DrawerContent from '../DrawerContent/index.js';\n\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    height: '100vh',\n    zIndex: 1,\n    overflow: 'hidden',\n    position: 'relative',\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  content: {\n    flexGrow: 1,\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\nclass App extends React.Component {\n\n  componentWillMount() {\n    this.props.init({});\n  }\n \n  render() {\n\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position='absolute' className={classes.appBar}>\n          <AppBarContent/>\n        </AppBar>\n        <DrawerContent />\n        <main className={classes.content}>\n          <div className={classes.toolbar}/>\n          <Visualization/>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default connect (\n  {\n    init: signal`init`\n  },\n  withStyles(styles, { withTheme: true })(App)\n);\n\n","import { sequence } from \"cerebral\";\nimport { state } from \"cerebral/tags\";\nimport { toggle } from \"cerebral/operators\";\n\nexport const toggleDrawerOpen = sequence(\"toggleDrawerOpen\", [\n  toggle(state`session.drawerOpen`),\n]);\n","import { Module } from 'cerebral';\nimport * as signals from './sequences'\n\nexport default Module({\n  state: {\n    drawerOpen: true,\n  },\n  signals,\n});\n\n\n","import { sequence } from \"cerebral\";\nimport { state } from \"cerebral/tags\";\nimport { set, debounce } from \"cerebral/operators\";\nimport _ from \"lodash\";\n\nexport const storeUserLocation = sequence(\"storeUserLocation\", [\n  ({ state, props }) =>\n    state.set(\"map.userLocation\", { lat: props.lat, lng: props.lng }),\n  set(state`map.userLocationAvailable`, true),\n]);\n\nexport const centerOnUser = sequence(\"centerOnUser\", [\n  set(state`map.targetCenter`, { lat: 40.428641, lng: -86.913783 }),\n  debounce(1),\n  {\n    continue: [set(state`map.targetCenter`, state`map.userLocation`)],\n    discard: [],\n  },\n]);\n\nexport const centerOnUnit = sequence(\"centerOnUnit\", [\n  set(state`map.targetCenter`, { lat: 40.428641, lng: -86.913783 }),\n  debounce(1),\n  {\n    continue: [\n      ({ state, props }) => {\n        const conn_id = state.get(\"data.connection_id\");\n        let unit = state.get(`diagnostics.selectedUnit`);\n        let date = state.get(`diagnostics.date`);\n        let hour = state.get(`diagnostics.hour`);\n        if (unit && date && hour) {\n          const gps_list =\n            state.get(\n              `oada.${conn_id}.bookmarks.isoblue.device-index.${unit}.day-index.${date}.hour-index.${hour}.gps`,\n            ) || {};\n          const last = _.max(Object.keys(gps_list));\n          if (last) {\n            const unitLocation = gps_list[last];\n            if (unitLocation.lat && unitLocation.lng) {\n              state.set(`map.targetCenter`, unitLocation);\n            }\n          }\n        }\n      },\n      //set(state`map.targetCenter`, state`snapshots.${state`diagnostics.selectedUnit`}.location`),\n    ],\n    discard: [],\n  },\n]);\n","import { sequence } from \"cerebral\";\nimport { state, props } from \"cerebral/tags\";\nimport { set } from \"cerebral/operators\";\nimport _ from \"lodash\";\n\nfunction getUnitStatus(state, props) { }\n\nexport const updateSnapshot = sequence(\"updateSnapshot\", [\n  //    ({ state, props }) => ({\n  //\n  //    }\n]);\n\nexport const createSnapshots = sequence(\"createSnapshots\", [\n  ({ state, props }) => ({\n    units: _.reduce(\n      Object.keys(\n        state.get(`oada.${props.connection_id}.bookmarks.isoblue.device-index`),\n      ),\n      (acc, unit, unitkey) => {\n        // iterate over all the ISOBlue units\n        var unitData = state.get(\n          `oada.${\n          props.connection_id\n          }.bookmarks.isoblue.device-index.${unit}.day-index`,\n        );\n        //var health, location, connection, lastReport;\n        var lastDate = Object.keys(unitData || {}).sort((a, b) => {\n          return new Date(b) - new Date(a);\n        })[0];\n        var lastTime = _.max(\n          Object.keys(unitData[lastDate][\"hour-index\"] || {}),\n        );\n\n        var lastGPS = _.max(\n          Object.keys(unitData[lastDate][\"hour-index\"][lastTime].gps || {}),\n        );\n        var lastHeartbeat = _.max(\n          Object.keys(\n            unitData[lastDate][\"hour-index\"][lastTime].heartbeats || {},\n          ),\n        );\n\n        // get messages\n        const msg_gps = lastGPS\n          ? unitData[lastDate][\"hour-index\"][lastTime][\"gps\"][lastGPS]\n          : null;\n        const msg_hb = lastHeartbeat\n          ? unitData[lastDate][\"hour-index\"][lastTime][\"heartbeats\"][\n          lastHeartbeat\n          ]\n          : null;\n\n        if (msg_gps && msg_hb) {\n          var lastReport = Math.round(\n            (Math.round(new Date().getTime() / 1000) -\n              _.max([lastHeartbeat, lastGPS])) /\n            60,\n          );\n          var latency = msg_hb.recTime - msg_hb.genTime;\n          var health = null;\n          if (lastReport < 2) {\n            if (latency < 20) {\n              health = \"Healthy\";\n            } else {\n              health = \"Sick\";\n            }\n          } else if (lastReport < 10) {\n            health = \"Sick\";\n          } else {\n            health = \"Down\";\n          }\n\n          var connection = null;\n\n          acc[unit] = {\n            health,\n            connection,\n            location: msg_gps,\n            lastReport,\n            lastHeartbeatTime: lastHeartbeat,\n          };\n        } else {\n          acc[unit] = {\n            health: \"Down\",\n            connection: \"NA\",\n            location: null,\n            lastReport: \"NA\",\n            lastHeartbeatTime: lastHeartbeat,\n          };\n        }\n        return acc;\n      },\n      {},\n    ),\n  }),\n  set(state`snapshots`, props`units`),\n]);\n","import { sequence } from \"cerebral\";\nimport { state, props } from \"cerebral/tags\";\nimport { set } from \"cerebral/operators\";\nimport Promise from \"bluebird\";\nimport _ from \"lodash\";\nimport oada from \"@oada/cerebral-module/sequences\";\nimport * as snapshots from \"../snapshots/sequences\";\n\nvar masterTree = {\n  bookmarks: {\n    _type: \"applications/vnd.oada.bookmarks.1+json\",\n    _rev: \"0-0\",\n    isoblue: {\n      _type: \"applications/vnd.oada.isoblue.1+json\",\n      _rev: \"0-0\",\n      \"device-index\": {\n        \"*\": {\n          _type: \"applications/vnd.oada.isoblue.device.1+json\",\n          _rev: \"0-0\",\n          \"day-index\": {\n            \"*\": {\n              _type: \"applications/vnd.oada.isoblue.day.1+json\",\n              _rev: \"0-0\",\n              \"hour-index\": {\n                \"*\": {\n                  _type: \"applications/vnd.oada.isoblue.hour.1+json\",\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nvar dayTree = {\n  bookmarks: {\n    _type: \"applications/vnd.oada.bookmarks.1+json\",\n    _rev: \"0-0\",\n    isoblue: {\n      _type: \"applications/vnd.oada.isoblue.1+json\",\n      _rev: \"0-0\",\n      \"device-index\": {\n        \"*\": {\n          _type: \"applications/vnd.oada.isoblue.device.1+json\",\n          _rev: \"0-0\",\n          \"day-index\": {\n            \"*\": {\n              _type: \"applications/vnd.oada.isoblue.day.1+json\",\n              _rev: \"0-0\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nfunction setRequestLastHour({ state, props }) {\n  return Promise.map(\n    Object.keys(\n      state.get(`oada.${props.connection_id}.bookmarks.isoblue.device-index`) ||\n      {},\n    ),\n    device => {\n      var deviceData = state.get(\n        `oada.${\n        props.connection_id\n        }.bookmarks.isoblue.device-index.${device}.day-index`,\n      );\n      var lastDate = Object.keys(deviceData || {}).sort((a, b) => {\n        return new Date(b) - new Date(a);\n      })[0];\n      let lastHour = _.max(\n        Object.keys(deviceData[lastDate][\"hour-index\"] || {}),\n      );\n      return {\n        path: `/bookmarks/isoblue/device-index/${device}/day-index/${lastDate}/hour-index/${lastHour}`,\n        watch: { signals: [\"snapshots.createSnapshots\"] },\n        tree: masterTree,\n      };\n    },\n  ).then(requests => {\n    return { requests: requests };\n  });\n}\n\n/* Called when the device list was modified */\nexport const handleDeviceUpdate = sequence(\"data.handleDeviceUpdate\", [\n  set(state`data.ready`, false),\n  setRequestLastHour,\n  oada.get,\n  set(state`data.ready`, true),\n]);\n\n/* Initial sequence. Only called at startup. */\nexport const init = sequence(\"data.init\", [\n  set(state`data.ready`, false),\n  // connect to server\n  oada.connect,\n  set(state`data.connection_id`, props`connection_id`),\n\n  // get devices\n  ({ state, props }) => ({\n    requests: [\n      {\n        path: \"/bookmarks/isoblue\",\n        tree: dayTree,\n        watch: { signals: [\"data.handleDeviceUpdate\"] },\n      },\n    ],\n  }),\n  oada.get,\n\n  // get most recent data\n  setRequestLastHour,\n  oada.get,\n  set(state`data.ready`, true),\n]);\n\n/* Set request to OADA server based on currently selected device, date, and hour */\nexport const getHour = sequence(\"data.getHour\", [\n  ({ state, props }) => ({\n    requests: [\n      {\n        connection_id: state.get(\"data.connection_id\"),\n        path: `/bookmarks/isoblue/device-index/${state.get(\n          `diagnostics.selectedUnit`,\n        )}/day-index/${state.get(`diagnostics.date`)}/hour-index/${state.get(\n          `diagnostics.hour`,\n        )}`,\n        tree: masterTree,\n      },\n    ],\n  }),\n  oada.get,\n]);\n","import { sequence } from \"cerebral\";\nimport { state, props } from \"cerebral/tags\";\nimport { set, when } from \"cerebral/operators\";\nimport _ from \"lodash\";\nimport * as map from \"../map/sequences\";\nimport * as data from \"../data/sequences\";\n\nexport const setDate = sequence(\"setDate\", [\n  set(state`diagnostics.date`, props`date`),\n  ({ state, props }) =>\n    state.set(\n      \"diagnostics.hour\",\n      _.max(\n        Object.keys(\n          state.get(\n            `oada.${state.get(\n              \"data.connection_id\",\n            )}.bookmarks.isoblue.device-index.${state.get(\n              \"diagnostics.selectedUnit\",\n            )}.day-index.${state.get(\"diagnostics.date\")}.hour-index`,\n          ),\n        ),\n      ),\n    ),\n  data.getHour,\n  map.centerOnUnit,\n]);\n\nexport const setHour = sequence(\"setHour\", [\n  set(state`diagnostics.hour`, props`hour`),\n  data.getHour,\n  map.centerOnUnit,\n]);\n\nexport const setMeasurement = sequence(\"setMeasurement\", [\n  ({ state, props }) => state.set(\"diagnostics.measurement\", props.measurement),\n]);\n\n/* Set the selected unit, default date, and hour */\nexport const selectUnit = sequence(\"selectUnit\", [\n  ({ state, props }) => ({ connection_id: state.get(\"data.connection_id\") }),\n  set(state`diagnostics.selectedUnit`, props`unit`),\n\n  // set default date and hour\n  ({ state, props }) => {\n    const date = Object.keys(\n      state.get(\n        `oada.${props.connection_id}.bookmarks.isoblue.device-index.${\n        props.unit\n        }.day-index`,\n      ),\n    ).sort((a, b) => {\n      return new Date(b) - new Date(a);\n    })[0];\n\n    const hour = _.max(\n      Object.keys(\n        state.get(\n          `oada.${props.connection_id}.bookmarks.isoblue.device-index.${\n          props.unit\n          }.day-index.${date}.hour-index`,\n        ),\n      ),\n    );\n\n    state.set(\"diagnostics.date\", date);\n    state.set(\"diagnostics.hour\", hour);\n  },\n\n  // center the map\n  map.centerOnUnit,\n]);\n\nexport const unselectUnit = sequence(\"unselectUnit\", [\n  set(state`diagnostics.selectedUnit`, null),\n  set(state`diagnostics.date`, null),\n  set(state`diagnostics.hour`, null),\n]);\n\n/* Toggle map view and graph view */\nexport const toggleMode = sequence(\"toggleMode\", [\n  when(state`diagnostics.mode`, value => value === \"map\"),\n  {\n    true: [\n      set(state`diagnostics.mode`, \"graph\"),\n      set(state`diagnostics.measurement`, \"Latency\"),\n    ],\n    false: [\n      set(state`diagnostics.mode`, \"map\"),\n      set(state`diagnostics.measurement`, \"GPS\"),\n    ],\n  },\n]);\n","import { Module } from 'cerebral';\nimport * as signals from './sequences';\n\nexport default Module({\n  state: {\n    hour: null,\n    measurement: 'GPS',\n    selectedUnit: null,\n    date: null,\n    mode: \"map\",\n  },\n  signals,\n});\n","import { Module } from 'cerebral';\nimport * as signals from './sequences';\n\nexport default Module({\n\n  state: {\n    targetCenter: { lat: 40.428641, lng: -86.913783 },\n    userLocation: { lat: 40.428641, lng: -86.913783 },\n    userLocationAvailable: false,\n  },\n\n  signals,\n\n});\n","import { Module } from \"cerebral\";\nimport * as signals from \"./sequences\";\n\nexport default Module({\n  //state: stateTree,\n  //state: {},\n\n  signals,\n});\n","import { Module } from 'cerebral';\nimport * as signals from './sequences'\n\nexport default Module({\n  state: {\n  },\n  signals,\n});\n\n\n","import { sequence } from \"cerebral\";\n\nimport * as snapshots from \"../snapshots/sequences\";\nimport * as data from \"../data/sequences\";\n\nconst _DEV_DOMAIN = \"https://128.46.71.115\";\n//const _LOCALHOST_REDIRECT = \"http://localhost:8000/oauth2/redirect.html\";\n//const _OPENATK_DOMAIN = \"https://oada.openatk.com\";\nconst _OPENATK_REDIRECT = \"https://openatk.com/ISOBlueApp/oauth2/redirect.html\";\n\n/* localhost */\n//let _CURRENT_DOMAIN = _DEV_DOMAIN;\n//let _CURRENT_REDIRECT = _LOCALHOST_REDIRECT;\n\n/* OpenATK.com */\nlet _CURRENT_DOMAIN = _DEV_DOMAIN;\nlet _CURRENT_REDIRECT = _OPENATK_REDIRECT;\n\nlet _METADATA =\n  \"eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHBzOi8vb3BlbmF0ay5jb20vSVNPQmx1ZUFwcC9vYXV0aDIvcmVkaXJlY3QuaHRtbCIsImh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9vYXV0aDIvcmVkaXJlY3QuaHRtbCJdLCJ0b2tlbl9lbmRwb2ludF9hdXRoX21ldGhvZCI6InVybjppZXRmOnBhcmFtczpvYXV0aDpjbGllbnQtYXNzZXJ0aW9uLXR5cGU6and0LWJlYXJlciIsImdyYW50X3R5cGVzIjpbImF1dGhvcml6YXRpb25fY29kZSJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImNvZGUiLCJpZF90b2tlbiIsImlkX3Rva2VuIHRva2VuIiwiY29kZSBpZF90b2tlbiIsImNvZGUgdG9rZW4iLCJjb2RlIGlkX3Rva2VuIHRva2VuIl0sImNsaWVudF9uYW1lIjoiSVNPQmx1ZSBIZWFsdGggTW9uaXRvciIsImNsaWVudF91cmkiOiJodHRwOi8vb2FkYS5vcGVuYXRrLmNvbS9JU09CbHVlQXBwIiwiY29udGFjdHMiOlsiU2FtIE5vZWwgPHNhbm9lbEBwdXJkdWUuZWR1PiJdLCJqd2tzIjp7ImtleXMiOlt7Imt0eSI6IlJTQSIsIm4iOiJ6YXVaRkJ1TWRsdjFrWWp6VWI0cS1fM200c21GeG5mdzRTWW9hSHE3Y2k4U2N0WTN4ajdyZEFIeWtRcG5RVnJqNktPOG1hSHYtMEJ2VzVNaGNnaXZrdVlzLXpIRXZmWUJlVkJuY3ZIZ09rSlBiYzkxQ3dfaXdPWTdFSFdCOGhNN1ZpTFFWY19EdjBoOG5KeWJCdmhMMDRDSFF0N0NwTXRWWUc2Zm9KWGMzZHE1MmpOUWJCSElaNW03VnoxS3R5em9MY3A4TzJtaGFMcDQ1VXIzQ18xZUd0djhuNU56OWJXX0JoNVhGWWJEeHY3Qm5oWk5JdzFHQ2JqakF3bXRibm5MN0dnZjRDeTYwd1JIbVI0dm9lMjFPSWpvQVNxMmpaMDN4MTJtWHM3SFBJM1lCNHkyOXd2Wk13MmdMek9kVG9ycnFPLXRsbW4xYm9Qa1dLSkpTWG9BdnciLCJlIjoiQVFBQiJ9XX0sInNvZnR3YXJlX2lkIjoiNzY1ZjFlZjctMzExNy00NjhhLTgwYjMtMDExYzQ1MjhkMGExIiwicmVnaXN0cmF0aW9uX3Byb3ZpZGVyIjoiaHR0cHM6Ly9pZGVudGl0eS5vYWRhLWRldi5jb20iLCJpYXQiOjE1NDcxNDYxOTF9.seH7eMsR1218IgEEbiq3T5ASGQAr7vqvy54_Yu8-6TIoAoVfslG-dSYWE2dXZ_P65kElqCKZLizVxyR1732vcFnOdzp6jE_pgpLg-eWZfVnIvNQdGK8Dh-5t1gVbPs1ME-j_GMCb2Un-mpDS8LAw4Nig_r-monjKyKbcPBN6gc4\";\n\n//let _METADATA = \"eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHBzOi8vb3BlbmF0ay5jb20vVGhlUm9ja0FwcC9vYXV0aDIvcmVkaXJlY3QuaHRtbCIsImh0dHBzOi8vamFmaWVjaHQuZ2l0aHViLmlvL3JvY2thcHBfMS9vYXV0aDIvcmVkaXJlY3QuaHRtbCIsImh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9vYXV0aDIvcmVkaXJlY3QuaHRtbCJdLCJ0b2tlbl9lbmRwb2ludF9hdXRoX21ldGhvZCI6InVybjppZXRmOnBhcmFtczpvYXV0aDpjbGllbnQtYXNzZXJ0aW9uLXR5cGU6and0LWJlYXJlciIsImdyYW50X3R5cGVzIjpbImF1dGhvcml6YXRpb25fY29kZSJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImNvZGUiLCJpZF90b2tlbiIsImlkX3Rva2VuIHRva2VuIiwiY29kZSBpZF90b2tlbiIsImNvZGUgdG9rZW4iLCJjb2RlIGlkX3Rva2VuIHRva2VuIl0sImNsaWVudF9uYW1lIjoiT3BlbkFUSyIsImNsaWVudF91cmkiOiJodHRwOi8vb3BlbmF0ay5jb20iLCJjb250YWN0cyI6WyJKZWZmIEZpZWNodGVyIDxqYWZpZWNodEBwdXJkdWUuZWR1PiJdLCJqd2tzIjp7ImtleXMiOlt7Imt0eSI6IlJTQSIsIm4iOiJ6YXVaRkJ1TWRsdjFrWWp6VWI0cS1fM200c21GeG5mdzRTWW9hSHE3Y2k4U2N0WTN4ajdyZEFIeWtRcG5RVnJqNktPOG1hSHYtMEJ2VzVNaGNnaXZrdVlzLXpIRXZmWUJlVkJuY3ZIZ09rSlBiYzkxQ3dfaXdPWTdFSFdCOGhNN1ZpTFFWY19EdjBoOG5KeWJCdmhMMDRDSFF0N0NwTXRWWUc2Zm9KWGMzZHE1MmpOUWJCSElaNW03VnoxS3R5em9MY3A4TzJtaGFMcDQ1VXIzQ18xZUd0djhuNU56OWJXX0JoNVhGWWJEeHY3Qm5oWk5JdzFHQ2JqakF3bXRibm5MN0dnZjRDeTYwd1JIbVI0dm9lMjFPSWpvQVNxMmpaMDN4MTJtWHM3SFBJM1lCNHkyOXd2Wk13MmdMek9kVG9ycnFPLXRsbW4xYm9Qa1dLSkpTWG9BdnciLCJlIjoiQVFBQiJ9XX0sInNvZnR3YXJlX2lkIjoiNmExNDFjODgtMDdhZC00M2M4LWIyMjEtYTU0MDkzMGJjMzFmIiwicmVnaXN0cmF0aW9uX3Byb3ZpZGVyIjoiaHR0cHM6Ly9pZGVudGl0eS5vYWRhLWRldi5jb20iLCJpYXQiOjE1MzQyNzk0MjJ9.hf9lLNxSY75R4MOXaUjgYZaYQqNunrUQhKV068Yk2azluGpKoBnDr8Ljn1U4Cdg39LBHzwARnL97TC3drjNCqKl-WU2-DLH5xY6wLgve7iR28ZllntFf_RXmFc5vJnYf0l6MPv7ukCJz0XBrXmBu7X1siSBpg8Rz4aIqelrLM28\";\n\nexport const init = sequence(\"init\", [\n  () => ({\n    domain: _CURRENT_DOMAIN,\n    options: {\n      redirect: _CURRENT_REDIRECT,\n      metadata: _METADATA,\n      scope: \"oada.isoblue:all\",\n    },\n  }),\n  data.init,\n  snapshots.createSnapshots,\n]);\n","import { Module } from 'cerebral';\n\nimport session from '../session/';\nimport diagnostics from '../diagnostics/';\nimport map from '../map/';\nimport data from '../data/';\nimport snapshots from '../snapshots/';\nimport oadaModule from '@oada/cerebral-module'\nimport oadaProvider from '@oada/cerebral-provider'\nimport * as signals from './sequences';\n\nexport default Module({\n  modules: {\n    session,\n    oada: oadaModule,\n    diagnostics,\n    map,\n    data,\n    snapshots,\n  },\n  signals,\n  providers: {\n    oada: oadaProvider\n  }\n});\n\n","import { Controller } from \"cerebral\";\nimport root from \"./modules/root\";\nimport Devtools from \"cerebral/devtools\";\n\nexport default Controller(root, {\n  devtools:\n    process.env.NODE_ENV === \"production\"\n      ? null\n      : Devtools({ host: \"localhost:8787\" }),\n  //devtools: null,\n});\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport App from './components/App/';\n\nimport { Container } from '@cerebral/react';\nimport controller from './controller';\n\n\nconst theme = createMuiTheme({\n  pallete: {\n    primary: {\n      light: '#718792',\n      main: '#455a64',\n      dark: '#1c313a',\n      contrastText: '#ffffff',\n    },\n    secondary: {\n      light: '#896a60',\n      main: '#5b3f36',\n      dark: '#301810',\n      contrastText: '#ffffff',\n    },\n  },\n});\n\n\nrender (\n  <Container controller={controller}>\n    <MuiThemeProvider theme={theme}>\n      <App/> \n    </MuiThemeProvider>\n  </Container>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}