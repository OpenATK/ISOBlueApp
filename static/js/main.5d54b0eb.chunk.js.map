{"version":3,"sources":["components/AppBarContent/index.js","components/Visualization/Map/Lines/index.js","components/Visualization/Map/Markers/index.js","components/Visualization/Map/index.js","components/Visualization/Graph/index.js","components/Visualization/index.js","components/DrawerContent/Summary/index.js","components/DrawerContent/Diagnostics/index.js","components/DrawerContent/index.js","components/ConnectDialog/index.js","components/App/index.js","modules/session/sequences.js","modules/session/index.js","modules/map/sequences.js","modules/data/sequences.js","modules/diagnostics/sequences.js","modules/diagnostics/index.js","modules/map/index.js","modules/data/index.js","modules/snapshots/sequences.js","modules/snapshots/index.js","modules/connection/sequences.js","modules/connection/index.js","modules/root/sequences.js","modules/root/index.js","controller.js","index.js"],"names":["AppBarContent","userLocationButton","_this","this","classes","props","userLocationAvailable","react_default","a","createElement","IconButton_default","onClick","centerOnUser","MyLocation_default","className","icon","Toolbar_default","color","aria-label","toggleDrawerOpen","Menu_default","Typography_default","variant","flex","React","Component","connect","state","_templateObject","signal","_templateObject2","_templateObject3","withStyles","theme","_icon","Object","defineProperty","breakpoints","up","width","spacing","unit","height","marginRight","down","Lines","conn_id","connection_id","ready","dataLines","oada","bookmarks","hasOwnProperty","devices","isoblue","selectedUnit","date","hour","gps_data","e","console","error","points","_","forEach","instance","lat","lng","push","positions","unit_resource","location","date_list","keys","length","last_date","maxBy","o","Date","hour_list","current_hour","max","last_hour","remove","n","current_time_sec","Math","round","getTime","undefined","prev_gps_data","current_gps_data","map","posobj","Polyline","key","Lines_templateObject","Lines_templateObject2","Lines_templateObject3","_templateObject4","_templateObject5","_templateObject6","withTheme","Markers","unitMarkers","snapshots","tempGPS","CircleMarker","ref","center","fillColor","health","fillOpacity","radius","zIndexOffset","selectUnit","Tooltip","direction","offset","Markers_templateObject","Markers_templateObject2","refs","leafletElement","locate","currentMarker","Marker","position","userLocation","Map","dragging","targetCenter","zoom","onlocationfound","storeUserLocation","latlng","style","TileLayer","url","attribution","Map_Markers","Map_Lines","Map_templateObject","Map_templateObject2","Map_templateObject3","Map_templateObject4","Map_templateObject5","display","Graph","rawData","chart","data","measurement","values","heartbeats","value","latency","recTime","genTime","time","toLocaleTimeString","minute","es6","margin","top","right","left","bottom","type","isAnimationActive","dataKey","stroke","strokeDasharray","label","dy","angle","interfaces","connection","Graph_templateObject","Graph_templateObject2","Graph_templateObject3","Graph_templateObject4","Graph_templateObject5","Graph_templateObject6","_templateObject7","Visualization","mode","Visualization_Map","Visualization_Graph","Visualization_templateObject","Summary","units","List_default","list","component","ListItem_default","button","concat","ListItemText_default","primary","ListItemIcon_default","Sync_default","healthy","SyncProblem_default","sick","SyncDisabled_default","align","Divider_default","Summary_templateObject","Summary_templateObject2","backgroundColor","palette","background","paper","overflow","textField","Diagnostics","measurements","Button_default","toggleMode","measurementSelect","Select_default","renderValue","onChange","setMeasurement","target","MenuItem_default","dateSelect","setDate","tzOffsetMinutes","getTimezoneOffset","genTimeLabel","hhmm","split","localMinutes","parseInt","msg","localMM","floor","toString","padStart","hourSelect","setHour","lastReport","lastLocationReport","unselectUnit","Diagnostics_templateObject","Diagnostics_templateObject2","Diagnostics_templateObject3","Diagnostics_templateObject4","Diagnostics_templateObject5","Diagnostics_templateObject6","Diagnostics_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","DrawerContent","content","DrawerContent_Diagnostics","DrawerContent_Summary","Drawer_default","open","drawerOpen","onClose","drawerPaper","toolbar","DrawerContent_templateObject","DrawerContent_templateObject2","DrawerContent_templateObject3","mixins","oadaDomainText","ConnectDialog_templateObject","ConnectDialog_templateObject2","submitClicked","ConnectDialog_templateObject3","oadaDomainChanged","ConnectDialog_templateObject4","_React$Component","ConnectDialog","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","Dialog_default","index_es","id","autoFocus","fullwidth","App","init","root","AppBar_default","appBar","components_AppBarContent","components_DrawerContent","components_Visualization","components_ConnectDialog","App_templateObject","flexGrow","zIndex","drawer","sequence","toggle","sequences_templateObject","Module","dataReady","signals","_ref","set","map_sequences_templateObject","sequences_templateObject2","debounce","continue","sequences_templateObject3","sequences_templateObject4","discard","centerOnUnit","_ref2","get","gps_list","last","unitLocation","masterTree","_type","_rev","device-index","*","day-index","hour-index","dayTree","setRequestLastHour","requests","device_name","device_data","path","watch","tree","handleDeviceUpdate","data_sequences_templateObject","data_sequences_templateObject2","getDevices","data_sequences_templateObject3","data_sequences_templateObject4","sequences_templateObject5","sequences_templateObject6","sequences_templateObject7","getHour","_ref3","diagnostics_sequences_templateObject","diagnostics_sequences_templateObject2","diagnostics_sequences_templateObject3","diagnostics_sequences_templateObject4","diagnostics_sequences_templateObject5","diagnostics_sequences_templateObject6","_ref4","sort","b","diagnostics_sequences_templateObject7","sequences_templateObject8","sequences_templateObject9","when","sequences_templateObject10","true","sequences_templateObject11","sequences_templateObject12","false","sequences_templateObject13","sequences_templateObject14","createSnapshots","reduce","acc","unitkey","unitLocationData","lastDate","lastHour","lastGPS","msg_gps","lastHeartbeatTime","snapshots_sequences_templateObject","snapshots_sequences_templateObject2","signOut","connection_sequences_templateObject","connection_sequences_templateObject2","connection_sequences_templateObject3","connection_sequences_templateObject4","connection_sequences_templateObject5","updateOadaDomain","connection_sequences_templateObject6","connection_sequences_templateObject7","domain","options","redirect","metadata","scope","connection_sequences_templateObject8","connection_sequences_templateObject9","connection_sequences_templateObject10","connection_sequences_templateObject11","connection_sequences_templateObject12","setConnection","connection_sequences_templateObject13","connection_sequences_templateObject14","dialog_open","oada_domain_text","oada_domain","providers","oadaProvider","modules","session","oadaModule","diagnostics","Controller","devtools","createMuiTheme","typography","useNextVariants","render","_cerebral_react","controller","core_styles","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.5d54b0eb.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n//import TextField from '@material-ui/core/TextField';\nimport MyLocationIcon from \"@material-ui/icons/MyLocation\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\n\nconst styles = theme => ({\n  flex: {\n    flex: 1,\n  },\n  icon: {\n    color: \"#FFFFFF\",\n    [theme.breakpoints.up(\"xs\")]: {\n      width: 5 * theme.spacing.unit,\n      height: 5 * theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      width: 4 * theme.spacing.unit,\n      height: 4 * theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n    },\n  },\n});\n\nclass AppBarContent extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    var userLocationButton;\n    if (this.props.userLocationAvailable) {\n      userLocationButton = (\n        <IconButton onClick={() => this.props.centerOnUser({})}>\n          <MyLocationIcon className={classes.icon} />\n        </IconButton>\n      );\n    } else {\n      userLocationButton = null;\n    }\n\n    return (\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"Open Drawer\"\n          onClick={() => this.props.toggleDrawerOpen({})}\n        >\n          <MenuIcon className={classes.icon} />\n        </IconButton>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n          ISOBlueApp [1.1.2]\n        </Typography>\n        {userLocationButton}\n      </Toolbar>\n    );\n  }\n}\n\nexport default connect(\n  {\n    userLocationAvailable: state`map.userLocationAvailable`,\n\n    centerOnUser: signal`map.centerOnUser`,\n    toggleDrawerOpen: signal`session.toggleDrawerOpen`,\n  },\n  withStyles(styles)(AppBarContent),\n);\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { connect } from \"@cerebral/react\";\nimport { state } from \"cerebral/tags\";\nimport uuid from \"uuid\";\n//import Leaflet from 'leaflet';\nimport { Polyline } from \"react-leaflet\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({});\n\nclass Lines extends React.Component {\n  render() {\n    // get connection id\n    const conn_id = this.props.connection_id;\n\n    // do not render lines if data is not ready\n    if (!this.props.ready) return null;\n\n    var dataLines = [];\n\n    if (!this.props.oada[conn_id].bookmarks.hasOwnProperty(\"isoblue\")) {\n      return null;\n    }\n\n    const devices =\n      this.props.oada[conn_id].bookmarks.isoblue[\"device-index\"] || {};\n\n    // Unit is selected\n    if (this.props.selectedUnit && this.props.date && this.props.hour) {\n      // ensure that the target resource actually exists\n      var gps_data = null;\n      try {\n        gps_data =\n          devices[this.props.selectedUnit][\"location\"][\"day-index\"][\n            this.props.date\n          ][\"hour-index\"][this.props.hour][\"sec-index\"];\n      } catch (e) {\n        console.error(\"hmm\");\n        return null;\n      }\n\n      // make a line\n      var points = [];\n      _.forEach(gps_data, instance => {\n        if (\n          instance.hasOwnProperty(\"lat\") &&\n          instance.hasOwnProperty(\"lng\") &&\n          instance.lat &&\n          instance.lng\n        ) {\n          points.push([instance.lat, instance.lng]);\n        }\n      });\n\n      // add line\n      dataLines.push({ unit: this.props.selectedUnit, positions: points });\n    }\n\n    // None of the units is selected\n    else {\n      _.forEach(devices, (unit_resource, unit) => {\n        // get the most recent date\n        if (!unit_resource.hasOwnProperty(\"location\")) return;\n        if (!unit_resource.location.hasOwnProperty(\"day-index\")) return;\n        const date_list = Object.keys(unit_resource[\"location\"][\"day-index\"]);\n        if (date_list.length === 0) return;\n        const last_date = _.maxBy(date_list, function(o) {\n          return new Date(o);\n        });\n\n        // get hours\n        if (\n          !unit_resource[\"location\"][\"day-index\"][last_date].hasOwnProperty(\n            \"hour-index\",\n          )\n        )\n          return;\n        const hour_list = Object.keys(\n          unit_resource[\"location\"][\"day-index\"][last_date][\"hour-index\"],\n        );\n\n        const current_hour = _.max(hour_list);\n        const last_hour = _.max(\n          _.remove(hour_list, n => {\n            return n !== current_hour;\n          }),\n        );\n        var current_time_sec = Math.round(new Date().getTime() / 1000);\n        var positions = [];\n\n        if (\n          last_hour !== undefined &&\n          unit_resource[\"location\"][\"day-index\"][last_date][\"hour-index\"][\n            last_hour\n          ].hasOwnProperty(\"sec-index\")\n        ) {\n          const prev_gps_data =\n            unit_resource[\"location\"][\"day-index\"][last_date][\"hour-index\"][\n              last_hour\n            ][\"sec-index\"];\n          var prev_gps_ts = Object.keys(prev_gps_data || {});\n          prev_gps_ts.forEach(o => {\n            if (\n              current_time_sec - o <= 15 * 60 &&\n              prev_gps_data[o].hasOwnProperty(\"lat\") &&\n              prev_gps_data[o].hasOwnProperty(\"lng\") &&\n              prev_gps_data[o].lat &&\n              prev_gps_data[o].lng\n            ) {\n              positions.push([prev_gps_data[o].lat, prev_gps_data[o].lng]);\n            }\n          });\n        }\n\n        if (\n          unit_resource[\"location\"][\"day-index\"][last_date][\"hour-index\"][\n            current_hour\n          ].hasOwnProperty(\"sec-index\")\n        ) {\n          const current_gps_data =\n            unit_resource[\"location\"][\"day-index\"][last_date][\"hour-index\"][\n              current_hour\n            ][\"sec-index\"];\n          var current_gps_ts = Object.keys(current_gps_data || {});\n          current_gps_ts.forEach(o => {\n            if (\n              current_time_sec - o <= 15 * 60 &&\n              current_gps_data[o].hasOwnProperty(\"lat\") &&\n              current_gps_data[o].hasOwnProperty(\"lng\") &&\n              current_gps_data[o].lat &&\n              current_gps_data[o].lng\n            ) {\n              positions.push([\n                current_gps_data[o].lat,\n                current_gps_data[o].lng,\n              ]);\n            }\n          });\n        }\n\n        // FIXME: currentGPS and lastGPS are not guaranteed to be sorted\n        dataLines.push({ unit, positions });\n      });\n    }\n\n    return (\n      <div>\n        {dataLines.map(posobj => (\n          <Polyline\n            key={posobj.unit}\n            positions={posobj.positions}\n            color=\"#ffffff\"\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  {\n    connection_id: state`data.connection_id`,\n    ready: state`data.ready`,\n    oada: state`oada`,\n    date: state`diagnostics.date`,\n    hour: state`diagnostics.hour`,\n    selectedUnit: state`diagnostics.selectedUnit`,\n  },\n  withStyles(styles, { withTheme: true })(Lines),\n);\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport { CircleMarker, Tooltip } from \"react-leaflet\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({});\n\nclass Markers extends React.Component {\n  render() {\n    const unitMarkers = [];\n    _.forEach(Object.keys(this.props.snapshots) || {}, unit => {\n      var tempGPS = this.props.snapshots[unit].location;\n      if (\n        tempGPS &&\n        tempGPS.hasOwnProperty(\"lat\") &&\n        tempGPS.hasOwnProperty(\"lng\") &&\n        tempGPS.lat &&\n        tempGPS.lng\n      ) {\n        unitMarkers.push(\n          <CircleMarker\n            ref={unit => {\n              this.unit = unit;\n            }}\n            key={unit}\n            center={[\n              this.props.snapshots[unit].location.lat,\n              this.props.snapshots[unit].location.lng,\n            ]}\n            color={\"#ffffff\"}\n            fillColor={(() => {\n              switch (this.props.snapshots[unit].health) {\n                case \"Healthy\":\n                  return \"#008000\";\n                case \"Sick\":\n                  return \"#ffbf00\";\n                case \"Down\":\n                  return \"#707070\";\n                default:\n                  return \"#707070\";\n              }\n            })()}\n            fillOpacity={1}\n            radius={12}\n            zIndexOffset={1}\n            onClick={e => this.props.selectUnit({ unit: unit })}\n          >\n            <Tooltip direction=\"top\" offset={[0, -10]}>\n              <b>Unit: {unit}</b>\n              <br />\n              <center>\n                <b>{this.props.snapshots[unit].health}</b>\n              </center>\n            </Tooltip>\n          </CircleMarker>,\n        );\n      }\n    });\n\n    return <div>{unitMarkers}</div>;\n  }\n}\n\nexport default connect(\n  {\n    snapshots: state`snapshots`,\n    selectUnit: signal`diagnostics.selectUnit`,\n  },\n  withStyles(styles, { withTheme: true })(Markers),\n);\n","import React from \"react\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport { Map, Marker, TileLayer } from \"react-leaflet\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport \"./Map.css\";\nimport Lines from \"./Lines/\";\nimport Markers from \"./Markers/\";\n\nconst styles = theme => ({\n  map: {\n    position: \"relative\",\n    display: \"flex\",\n    width: \"100%\",\n    height: \"calc(100% - 56px)\",\n  },\n});\n\nconst mapTiles =\n  \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\";\nconst attrib =\n  \"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\";\n\nclass map extends React.Component {\n  componentDidMount() {\n    this.refs.map.leafletElement.locate();\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    const currentMarker = [];\n    if (this.props.userLocationAvailable) {\n      currentMarker.push(\n        <Marker\n          key={\"user\"}\n          position={[this.props.userLocation.lat, this.props.userLocation.lng]}\n        >\n          zIndexOffset={1}\n        </Marker>,\n      );\n    }\n\n    return (\n      <div className={classes.map}>\n        <Map\n          dragging={true}\n          center={[this.props.targetCenter.lat, this.props.targetCenter.lng]}\n          ref=\"map\"\n          zoom={18}\n          onlocationfound={e =>\n            this.props.storeUserLocation({\n              lat: e.latlng.lat,\n              lng: e.latlng.lng,\n            })\n          }\n          style={{ height: \"100%\", width: \"100%\", position: \"relative\" }}\n        >\n          <TileLayer url={mapTiles} attribution={attrib} />\n          <Markers />\n          <Lines />\n          {currentMarker}\n        </Map>\n      </div>\n    );\n  }\n}\n\nmap.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default connect(\n  {\n    // states\n    targetCenter: state`map.targetCenter`,\n    userLocation: state`map.userLocation`,\n    userLocationAvailable: state`map.userLocationAvailable`,\n    // signals\n    storeUserLocation: signal`map.storeUserLocation`,\n    selectUnit: signal`diagnostics.selectUnit`,\n  },\n  withStyles(styles, { withTheme: true })(map),\n);\n","import React from \"react\";\nimport { connect } from \"@cerebral/react\";\nimport { state } from \"cerebral/tags\";\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  ResponsiveContainer,\n  Tooltip,\n} from \"recharts\";\nimport _ from \"lodash\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({});\n\nclass Graph extends React.Component {\n  render() {\n    var rawData;\n    if (this.props.selectedUnit && this.props.date && this.props.hour) {\n      rawData = this.props.oada[this.props.connection_id].bookmarks.isoblue[\n        \"device-index\"\n      ][this.props.selectedUnit][\"day-index\"][this.props.date][\"hour-index\"][\n        this.props.hour\n      ];\n    } else {\n      // this should not happen\n      return null;\n    }\n\n    var data = [];\n    var chart;\n    if (this.props.measurement === \"Latency\" && rawData) {\n      _.forEach(Object.values(rawData.heartbeats || {}), value => {\n        value.latency = value.recTime - value.genTime;\n        value.time = new Date(value.genTime * 1000).toLocaleTimeString(\n          \"en-US\",\n          { hour: \"numeric\", minute: \"numeric\" },\n        );\n        data.push(value);\n      });\n\n      chart = (\n        <LineChart\n          data={data}\n          margin={{ top: 20, right: 30, left: 0, bottom: 80 }}\n        >\n          <Line\n            type=\"step\"\n            isAnimationActive={false}\n            dataKey={\"latency\"}\n            stroke=\"#8884d8\"\n          />\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n          <XAxis\n            dataKey={\"time\"}\n            label={{ value: \"Time\", position: \"insideBottom\", dy: 20 }}\n          />\n          <YAxis\n            dataKey={\"latency\"}\n            label={{\n              value: \"Latency (sec)\",\n              position: \"insideLeft\",\n              angle: -90,\n            }}\n          />\n          <Tooltip />\n        </LineChart>\n      );\n    } else if (this.props.measurement === \"Wifi RSSI\" && rawData) {\n      _.forEach(Object.values(rawData.heartbeats || {}), value => {\n        _.forEach(value.interfaces, connection => {\n          if (connection.type === \"wifi\") {\n            connection.time = new Date(value.genTime * 1000).toLocaleTimeString(\n              \"en-US\",\n              { hour: \"numeric\", minute: \"numeric\" },\n            );\n            data.push(connection);\n          }\n        });\n      });\n\n      chart = (\n        <LineChart\n          data={data}\n          margin={{ top: 20, right: 30, left: 0, bottom: 80 }}\n        >\n          <Line\n            type=\"step\"\n            isAnimationActive={false}\n            dataKey={\"rssi\"}\n            stroke=\"#8884d8\"\n          />\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n          <XAxis dataKey={\"time\"} />\n          <YAxis\n            dataKey={\"rssi\"}\n            label={{\n              value: \"WiFi RSSI (dB)\",\n              position: \"insideLeft\",\n              angle: -90,\n            }}\n          />\n          <Tooltip />\n        </LineChart>\n      );\n    } else if (this.props.measurement === \"Cellular RSSI\" && rawData) {\n      _.forEach(Object.values(rawData.heartbeats || {}), value => {\n        _.forEach(value.interfaces, connection => {\n          if (connection.type === \"cellular\") {\n            connection.time = new Date(value.genTime * 1000).toLocaleTimeString(\n              \"en-US\",\n              { hour: \"numeric\", minute: \"numeric\" },\n            );\n            data.push(connection);\n          }\n        });\n      });\n\n      chart = (\n        <LineChart\n          data={data}\n          margin={{ top: 20, right: 30, left: 0, bottom: 80 }}\n        >\n          <Line\n            type=\"step\"\n            isAnimationActive={false}\n            dataKey={\"rssi\"}\n            stroke=\"#8884d8\"\n          />\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n          <XAxis dataKey={\"time\"} />\n          <YAxis\n            dataKey={\"rssi\"}\n            label={{\n              value: \"Cellular RSSI (dB)\",\n              position: \"insideLeft\",\n              angle: -90,\n            }}\n          />\n          <Tooltip />\n        </LineChart>\n      );\n    } else {\n      chart = (\n        <LineChart margin={{ top: 20, right: 30, left: 0, bottom: 80 }} />\n      );\n    }\n\n    return (\n      <ResponsiveContainer width={\"100%\"} height={\"100%\"}>\n        {chart}\n      </ResponsiveContainer>\n    );\n  }\n}\n\nexport default connect(\n  {\n    connection_id: state`data.connection_id`,\n    date: state`diagnostics.date`,\n    hour: state`diagnostics.hour`,\n    selectedUnit: state`diagnostics.selectedUnit`,\n    measurement: state`diagnostics.measurement`,\n    oada: state`oada`,\n    data: state`data`,\n  },\n  withStyles(styles, { withTheme: true })(Graph),\n);\n","import React from \"react\";\nimport { connect } from \"@cerebral/react\";\nimport { state } from \"cerebral/tags\";\n\nimport Map from \"./Map/\";\nimport Graph from \"./Graph/\";\n\nclass Visualization extends React.Component {\n  render() {\n    var graphic;\n    if (this.props.mode === \"map\") {\n      graphic = <Map />;\n    } else {\n      graphic = <Graph />;\n    }\n\n    return graphic;\n  }\n}\n\nexport default connect(\n  {\n    mode: state`diagnostics.mode`,\n  },\n  Visualization,\n);\n","import React from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport SyncIcon from \"@material-ui/icons/Sync\";\nimport SyncProblemIcon from \"@material-ui/icons/SyncProblem\";\nimport SyncDisabledIcon from \"@material-ui/icons/SyncDisabled\";\n\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\n\nconst styles = theme => ({\n  list: {\n    width: \"90%\",\n    backgroundColor: theme.palette.background.paper,\n    //position: 'relative',\n    overflow: \"auto\",\n    height: 300,\n    margin: 1.5 * theme.spacing.unit,\n  },\n  textField: {\n    margin: 1.5 * theme.spacing.unit,\n  },\n  healthy: { color: \"#008000\" },\n  sick: { color: \"#ffbf00\" },\n  down: { color: \"#ff0000\" },\n});\n\nclass Summary extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    // create unit list\n    var units;\n    if (Object.keys(this.props.health || {}).length > 0) {\n      units = (\n        <List className={classes.list} component=\"nav\">\n          {Object.keys(this.props.health).map(unit => (\n            <ListItem\n              button\n              key={`-${unit}`}\n              onClick={() => this.props.selectUnit({ unit: unit })}\n            >\n              <ListItemText primary={unit} />\n              <ListItemIcon>\n                {(() => {\n                  switch (this.props.health[unit]) {\n                    case \"Healthy\":\n                      return <SyncIcon className={classes.healthy} />;\n                    case \"Sick\":\n                      return <SyncProblemIcon className={classes.sick} />;\n                    case \"Down\":\n                      return <SyncDisabledIcon />;\n                    default:\n                      return <SyncDisabledIcon />;\n                  }\n                })()}\n              </ListItemIcon>\n            </ListItem>\n          ))}\n        </List>\n      );\n    } else {\n      units = <List className={classes.list} component=\"nav\" />;\n    }\n\n    // wrapper for unit list\n    return (\n      <List>\n        <ListItem>\n          <ListItemText align=\"center\" primary={\"My ISOBlues:\"} />\n        </ListItem>\n        {units}\n        <Divider />\n      </List>\n    );\n  }\n}\n\nexport default connect(\n  {\n    health: state`health`,\n    selectUnit: signal`diagnostics.selectUnit`,\n  },\n  withStyles(styles)(Summary),\n);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\n\nconst styles = theme => ({});\n\nclass Diagnostics extends React.Component {\n  render() {\n    const visualizing = (\n      <ListItem>\n        <ListItemText align=\"center\">\n          <Button onClick={() => this.props.toggleMode({})} variant=\"contained\">\n            {this.props.mode === \"map\" ? \"Show Statistics\" : \"Show Map\"}\n          </Button>\n        </ListItemText>\n      </ListItem>\n    );\n\n    var measurements;\n    if (this.props.mode === \"map\") {\n      measurements = [\"GPS\"];\n    } else {\n      measurements = [\"Latency\", \"Wifi RSSI\", \"Cellular RSSI\"];\n    }\n    const measurementSelect = (\n      <Select\n        value={this.props.measurement}\n        renderValue={value => `${value}`}\n        onChange={value =>\n          this.props.setMeasurement({ measurement: value.target.value })\n        }\n      >\n        {measurements.map(measurement => (\n          <MenuItem key={measurement} value={measurement}>\n            {measurement}\n          </MenuItem>\n        ))}\n      </Select>\n    );\n\n    const dateSelect = (\n      <Select\n        value={this.props.date}\n        renderValue={value => `${value}`}\n        onChange={value => this.props.setDate({ date: value.target.value })}\n      >\n        {Object.keys(\n          this.props.oada[this.props.connection_id].bookmarks.isoblue[\n            \"device-index\"\n          ][this.props.selectedUnit][\"location\"][\"day-index\"],\n        ).map(date => (\n          <MenuItem key={date} value={date}>\n            {date}\n          </MenuItem>\n        ))}\n        ;\n      </Select>\n    );\n\n    // Get timezone offset\n    const tzOffsetMinutes = new Date().getTimezoneOffset();\n    const genTimeLabel = hour => {\n      // UTC -> Local time zone conversion\n      // Assume hour has format hh:mm\n      const hhmm = hour.split(\":\");\n      const utcMinutes = 60 * parseInt(hhmm[0]) + parseInt(hhmm[1]);\n      var localMinutes = utcMinutes - tzOffsetMinutes;\n      var msg = \"\";\n      if (localMinutes < 0) {\n        localMinutes += 1440;\n        msg = \" (-1 day)\";\n      } else if (localMinutes > 1440) {\n        localMinutes -= 1440;\n        msg = \" (+1 day)\";\n      }\n      const localHH = Math.floor(localMinutes / 60);\n      const localMM = localMinutes % 60;\n      return (\n        localHH.toString().padStart(2, \"0\") +\n        \":\" +\n        localMM.toString().padStart(2, \"0\") +\n        msg\n      );\n    };\n\n    const hourSelect = (\n      <Select\n        value={this.props.hour}\n        renderValue={value => `${genTimeLabel(value)}`}\n        onChange={value => this.props.setHour({ hour: value.target.value })}\n      >\n        {Object.keys(\n          this.props.oada[this.props.connection_id].bookmarks.isoblue[\n            \"device-index\"\n          ][this.props.selectedUnit][\"location\"][\"day-index\"][this.props.date][\n            \"hour-index\"\n          ],\n        ).map(hour => {\n          return (\n            <MenuItem key={hour} value={hour}>\n              {genTimeLabel(hour)}\n            </MenuItem>\n          );\n        })}\n        ;\n      </Select>\n    );\n\n    return (\n      <List>\n        <ListItem>\n          <ListItemText align=\"center\" primary={\"Selected Unit:\"} />\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\" primary={this.props.selectedUnit} />\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText align=\"center\" primary=\"ISOBlue Status:\" />\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\" primary={\"Health:\"} />\n          <ListItemText\n            align=\"center\"\n            primary={this.props.snapshots[this.props.selectedUnit].health}\n          />\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\" primary={\"Last Report:\"} />\n          <ListItemText\n            align=\"center\"\n            primary={\n              this.props.snapshots[this.props.selectedUnit].lastReport === \"NA\"\n                ? \"NA\"\n                : this.props.snapshots[this.props.selectedUnit]\n                    .lastLocationReport + \" min\"\n            }\n          />\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText align=\"center\" primary={\"Available Data:\"} />\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\">{measurementSelect}</ListItemText>\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\">{dateSelect}</ListItemText>\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\">{hourSelect}</ListItemText>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText align=\"center\">\n            <Button\n              variant=\"contained\"\n              onClick={() => this.props.unselectUnit({})}\n            >\n              Back to Main\n            </Button>\n          </ListItemText>\n        </ListItem>\n      </List>\n    );\n  }\n}\n\nexport default connect(\n  {\n    date: state`diagnostics.date`,\n    hour: state`diagnostics.hour`,\n    measurement: state`diagnostics.measurement`,\n    selectedUnit: state`diagnostics.selectedUnit`,\n    snapshots: state`snapshots`,\n    data: state`data`,\n    mode: state`diagnostics.mode`,\n    oada: state`oada`,\n    connection_id: state`data.connection_id`,\n\n    selectUnit: signal`diagnostics.selectUnit`,\n    unselectUnit: signal`diagnostics.unselectUnit`,\n    setDate: signal`diagnostics.setDate`,\n    setHour: signal`diagnostics.setHour`,\n    setMeasurement: signal`diagnostics.setMeasurement`,\n    toggleMode: signal`diagnostics.toggleMode`,\n  },\n  withStyles(styles)(Diagnostics),\n);\n","import React from \"react\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\n\nimport Summary from \"./Summary/\";\nimport Diagnostics from \"./Diagnostics/\";\n\nconst styles = theme => ({\n  drawerPaper: {\n    position: \"relative\",\n    width: 240,\n    backgroundColor: \"#eeeeee\",\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\nclass DrawerContent extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    var content;\n    if (this.props.selectedUnit) {\n      content = <Diagnostics />;\n    } else {\n      content = <Summary />;\n    }\n\n    return (\n      <Drawer\n        open={this.props.drawerOpen}\n        onClose={() => this.props.toggleDrawerOpen({})}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.toolbar} />\n        {content}\n      </Drawer>\n    );\n  }\n}\n\nexport default connect(\n  {\n    selectedUnit: state`diagnostics.selectedUnit`,\n    drawerOpen: state`session.drawerOpen`,\n\n    toggleDrawerOpen: signal`session.toggleDrawerOpen`,\n  },\n  withStyles(styles)(DrawerContent),\n);\n","import React from \"react\";\nimport { connect } from \"@cerebral/react\";\nimport {\n  TextField,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Button from \"@material-ui/core/Button\";\nimport { state, signal } from \"cerebral/tags\";\n\nexport default connect(\n  {\n    oadaDomainText: state`connection.oada_domain_text`,\n    open: state`connection.dialog_open`,\n\n    submitClicked: signal`connection.setConnection`,\n    oadaDomainChanged: signal`connection.updateOadaDomain`,\n  },\n\n  class ConnectDialog extends React.Component {\n    render() {\n      return (\n        <Dialog open={this.props.open} className={\"connection-dialog\"}>\n          <DialogTitle id=\"form-dialog-title\">\n            Connect to OADA Server\n          </DialogTitle>\n          <DialogContent>Please enter the domain of OADA server.</DialogContent>\n          <DialogContent>\n            <TextField\n              autoFocus\n              label=\"Domain\"\n              value={this.props.oadaDomainText}\n              onChange={e =>\n                this.props.oadaDomainChanged({ value: e.target.value })\n              }\n              margin=\"dense\"\n              fullwidth=\"true\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={() => {\n                this.props.open = false;\n              }}\n              color=\"secondary\"\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={() => {\n                this.props.submitClicked({});\n              }}\n              color=\"secondary\"\n            >\n              Submit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      );\n    }\n  },\n);\n","import React from \"react\";\nimport { connect } from \"@cerebral/react\";\nimport { signal } from \"cerebral/tags\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\n\nimport AppBarContent from \"../AppBarContent/\";\nimport Visualization from \"../Visualization/\";\nimport DrawerContent from \"../DrawerContent/index.js\";\nimport ConnectDialog from \"../ConnectDialog/index.js\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    height: \"100vh\",\n    zIndex: 1,\n    overflow: \"hidden\",\n    position: \"relative\",\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  content: {\n    flexGrow: 1,\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\nclass App extends React.Component {\n  componentWillMount() {\n    this.props.init({});\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"absolute\" className={classes.appBar}>\n          <AppBarContent />\n        </AppBar>\n        <DrawerContent />\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Visualization />\n        </main>\n        <ConnectDialog />\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  {\n    init: signal`init`,\n  },\n  withStyles(styles, { withTheme: true })(App),\n);\n","import { sequence } from \"cerebral\";\nimport { state } from \"cerebral/tags\";\nimport { toggle } from \"cerebral/operators\";\n\nexport const toggleDrawerOpen = sequence(\"toggleDrawerOpen\", [\n  toggle(state`session.drawerOpen`),\n]);\n","import { Module } from \"cerebral\";\nimport * as signals from \"./sequences\";\n\nexport default Module({\n  state: {\n    drawerOpen: false,\n    dataReady: false,\n  },\n  signals,\n});\n","import { sequence } from \"cerebral\";\nimport { state } from \"cerebral/tags\";\nimport { set, debounce } from \"cerebral/operators\";\nimport _ from \"lodash\";\n\nexport const storeUserLocation = sequence(\"storeUserLocation\", [\n  ({ state, props }) =>\n    state.set(\"map.userLocation\", { lat: props.lat, lng: props.lng }),\n  set(state`map.userLocationAvailable`, true),\n]);\n\nexport const centerOnUser = sequence(\"centerOnUser\", [\n  set(state`map.targetCenter`, { lat: 40.428641, lng: -86.913783 }),\n  debounce(1),\n  {\n    continue: [set(state`map.targetCenter`, state`map.userLocation`)],\n    discard: [],\n  },\n]);\n\nexport const centerOnUnit = sequence(\"centerOnUnit\", [\n  ({ state, props }) => {\n    const conn_id = state.get(\"data.connection_id\");\n    let unit = state.get(`diagnostics.selectedUnit`);\n    let date = state.get(`diagnostics.date`);\n    let hour = state.get(`diagnostics.hour`);\n    if (unit && date && hour) {\n      const gps_list =\n        state.get(\n          `oada.${conn_id}.bookmarks.isoblue.device-index.${unit}.location.day-index.${date}.hour-index.${hour}.sec-index`,\n        ) || {};\n      const last = _.max(Object.keys(gps_list));\n      if (last) {\n        const unitLocation = gps_list[last];\n        if (unitLocation.lat && unitLocation.lng) {\n          state.set(`map.targetCenter`, unitLocation);\n        }\n      }\n    }\n  },\n]);\n","import { sequence } from \"cerebral\";\nimport { state, props } from \"cerebral/tags\";\nimport { set } from \"cerebral/operators\";\nimport _ from \"lodash\";\nimport oada from \"@oada/cerebral-module/sequences\";\n\nvar masterTree = {\n  bookmarks: {\n    _type: \"application/vnd.oada.bookmarks.1+json\",\n    _rev: 0,\n    isoblue: {\n      _type: \"application/vnd.oada.isoblue.1+json\",\n      _rev: 0,\n      \"device-index\": {\n        \"*\": {\n          _type: \"application/vnd.oada.isoblue.device.1+json\",\n          _rev: 0,\n          \"*\": {\n            _type: \"application/vnd.oada.isoblue.dataset.1+json\",\n            _rev: 0,\n            \"day-index\": {\n              \"*\": {\n                _type: \"application/vnd.oada.isoblue.day.1+json\",\n                _rev: 0,\n                \"hour-index\": {\n                  \"*\": {\n                    _type: \"application/vnd.oada.isoblue.hour.1+json\",\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nvar dayTree = {\n  bookmarks: {\n    _type: \"applications/vnd.oada.bookmarks.1+json\",\n    _rev: 0,\n    isoblue: {\n      _type: \"applications/vnd.oada.isoblue.1+json\",\n      _rev: 0,\n      \"device-index\": {\n        \"*\": {\n          _type: \"applications/vnd.oada.isoblue.device.1+json\",\n          _rev: 0,\n          \"*\": {\n            _type: \"application/vnd.oada.isoblue.dataset.1+json\",\n            _rev: 0,\n            \"day-index\": {\n              \"*\": {\n                _type: \"applications/vnd.oada.isoblue.day.1+json\",\n                _rev: 0,\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nvar deviceTree = {\n  bookmarks: {\n    _type: \"applications/vnd.oada.bookmarks.1+json\",\n    _rev: 0,\n    isoblue: {\n      _type: \"applications/vnd.oada.isoblue.1+json\",\n      _rev: 0,\n      \"device-index\": {\n        \"*\": {\n          _type: \"applications/vnd.oada.isoblue.device.1+json\",\n          _rev: 0,\n          \"*\": {\n            _type: \"application/vnd.oada.isoblue.dataset.1+json\",\n            _rev: 0,\n          },\n        },\n      },\n    },\n  },\n};\n\n/* Set requests */\nfunction setRequestLastHour({ state, props }) {\n  const devices = Object.keys(\n    state.get(`oada.${props.connection_id}.bookmarks.isoblue.device-index`) ||\n      {},\n  );\n\n  var requests = []; // OADA requests\n\n  devices.forEach(device_name => {\n    var device_data =\n      state.get(\n        `oada.${\n          props.connection_id\n        }.bookmarks.isoblue.device-index.${device_name}.location.day-index`,\n      ) || {};\n\n    // find the most recent day\n    const date_list = Object.keys(device_data);\n    if (date_list.length === 0) {\n      return;\n    }\n    const last_date = _.maxBy(date_list, function(o) {\n      return new Date(o);\n    });\n\n    //find the most recent hour\n    const last_hour = _.max(\n      Object.keys(device_data[last_date][\"hour-index\"] || {}),\n    );\n\n    // add request\n    requests.push({\n      path: `/bookmarks/isoblue/device-index/${device_name}/location/day-index/${last_date}/hour-index/${last_hour}`,\n      watch: { signals: [\"snapshots.createSnapshots\"] },\n      tree: masterTree,\n    });\n  });\n\n  return { requests };\n}\n\n/* Called when the device list was modified */\nexport const handleDeviceUpdate = sequence(\"data.handleDeviceUpdate\", [\n  set(state`data.ready`, false),\n  setRequestLastHour,\n  oada.get,\n  set(state`data.ready`, true),\n]);\n\n// Get devices and watch for changes\nexport const getDevices = sequence(\"data.getDevices\", [\n  // get devices\n  ({ state, props }) => ({\n    requests: [\n      {\n        path: \"/bookmarks/isoblue\",\n        tree: dayTree,\n        watch: { signals: [\"data.handleDeviceUpdate\"] },\n      },\n    ],\n  }),\n  oada.get,\n]);\n\n/* Initial sequence. Only called at startup. */\nexport const init = sequence(\"data.init\", [\n  set(state`data.ready`, false),\n  set(state`health`, {}),\n  // connect to server\n  set(state`data.connection_id`, props`connection_id`),\n\n  // get most recent data\n  getDevices,\n  setRequestLastHour,\n  oada.get,\n  set(state`data.ready`, true),\n]);\n\n/* Set request to OADA server based on currently selected device, date, and hour */\nexport const getHour = sequence(\"data.getHour\", [\n  ({ state, props }) => ({\n    requests: [\n      {\n        connection_id: state.get(\"data.connection_id\"),\n        path: `/bookmarks/isoblue/device-index/${state.get(\n          `diagnostics.selectedUnit`,\n        )}/location/day-index/${state.get(\n          `diagnostics.date`,\n        )}/hour-index/${state.get(`diagnostics.hour`)}`,\n        tree: masterTree,\n      },\n    ],\n  }),\n  oada.get,\n]);\n","import { sequence } from \"cerebral\";\nimport { state, props } from \"cerebral/tags\";\nimport { set, when } from \"cerebral/operators\";\nimport _ from \"lodash\";\nimport * as map from \"../map/sequences\";\nimport * as data from \"../data/sequences\";\n\nexport const setDate = sequence(\"setDate\", [\n  set(state`diagnostics.date`, props`date`),\n  ({ state, props }) =>\n    state.set(\n      \"diagnostics.hour\",\n      _.max(\n        Object.keys(\n          state.get(\n            `oada.${state.get(\n              \"data.connection_id\",\n            )}.bookmarks.isoblue.device-index.${state.get(\n              \"diagnostics.selectedUnit\",\n            )}.location.day-index.${state.get(\"diagnostics.date\")}.hour-index`,\n          ),\n        ),\n      ),\n    ),\n  data.getHour,\n  map.centerOnUnit,\n]);\n\nexport const setHour = sequence(\"setHour\", [\n  set(state`diagnostics.hour`, props`hour`),\n  data.getHour,\n  map.centerOnUnit,\n]);\n\nexport const setMeasurement = sequence(\"setMeasurement\", [\n  ({ state, props }) => state.set(\"diagnostics.measurement\", props.measurement),\n]);\n\n/* Set the selected unit, default date, and hour */\nexport const selectUnit = sequence(\"selectUnit\", [\n  ({ state, props }) => ({ connection_id: state.get(\"data.connection_id\") }),\n  set(state`diagnostics.selectedUnit`, props`unit`),\n\n  // set default date and hour\n  ({ state, props }) => {\n    const date = Object.keys(\n      state.get(\n        `oada.${props.connection_id}.bookmarks.isoblue.device-index.${\n          props.unit\n        }.location.day-index`,\n      ),\n    ).sort((a, b) => {\n      return new Date(b) - new Date(a);\n    })[0];\n\n    const hour = _.max(\n      Object.keys(\n        state.get(\n          `oada.${props.connection_id}.bookmarks.isoblue.device-index.${\n            props.unit\n          }.location.day-index.${date}.hour-index`,\n        ),\n      ),\n    );\n\n    state.set(\"diagnostics.date\", date);\n    state.set(\"diagnostics.hour\", hour);\n  },\n\n  // center the map\n  map.centerOnUnit,\n]);\n\nexport const unselectUnit = sequence(\"unselectUnit\", [\n  set(state`diagnostics.selectedUnit`, null),\n  set(state`diagnostics.date`, null),\n  set(state`diagnostics.hour`, null),\n]);\n\n/* Toggle map view and graph view */\nexport const toggleMode = sequence(\"toggleMode\", [\n  when(state`diagnostics.mode`, value => value === \"map\"),\n  {\n    true: [\n      set(state`diagnostics.mode`, \"graph\"),\n      set(state`diagnostics.measurement`, \"Latency\"),\n    ],\n    false: [\n      set(state`diagnostics.mode`, \"map\"),\n      set(state`diagnostics.measurement`, \"GPS\"),\n    ],\n  },\n]);\n","import { Module } from 'cerebral';\nimport * as signals from './sequences';\n\nexport default Module({\n  state: {\n    hour: null,\n    measurement: 'GPS',\n    selectedUnit: null,\n    date: null,\n    mode: \"map\",\n  },\n  signals,\n});\n","import { Module } from 'cerebral';\nimport * as signals from './sequences';\n\nexport default Module({\n\n  state: {\n    targetCenter: { lat: 40.428641, lng: -86.913783 },\n    userLocation: { lat: 40.428641, lng: -86.913783 },\n    userLocationAvailable: false,\n  },\n\n  signals,\n\n});\n","import { Module } from \"cerebral\";\nimport * as signals from \"./sequences\";\n\nexport default Module({\n  //state: stateTree,\n  //state: {},\n\n  signals,\n});\n","import { sequence } from \"cerebral\";\nimport { state, props } from \"cerebral/tags\";\nimport { set } from \"cerebral/operators\";\nimport _ from \"lodash\";\n\nexport const createSnapshots = sequence(\"createSnapshots\", [\n  ({ state, props }) => ({\n    units: _.reduce(\n      Object.keys(\n        state.get(\n          `oada.${props.connection_id}.bookmarks.isoblue.device-index`,\n        ) || {},\n      ),\n      (acc, unit, unitkey) => {\n        // iterate over all the ISOBlue units\n        var unitLocationData = state.get(\n          `oada.${\n            props.connection_id\n          }.bookmarks.isoblue.device-index.${unit}.location.day-index`,\n        );\n        //var health, location, connection, lastReport;\n        const lastDate = _.maxBy(Object.keys(unitLocationData || {}), function(\n          o,\n        ) {\n          return new Date(o);\n        });\n\n        if (!lastDate) return acc;\n        if (!unitLocationData[lastDate].hasOwnProperty(\"hour-index\"))\n          return acc;\n\n        const lastHour = _.max(\n          Object.keys(unitLocationData[lastDate][\"hour-index\"] || {}),\n        );\n\n        if (!lastHour) return acc;\n        var lastGPS =\n          _.max(\n            Object.keys(\n              unitLocationData[lastDate][\"hour-index\"][lastHour][\"sec-index\"] ||\n                {},\n            ),\n          ) || null;\n\n        // get messages\n        const msg_gps = lastGPS\n          ? unitLocationData[lastDate][\"hour-index\"][lastHour][\"sec-index\"][\n              lastGPS\n            ]\n          : null;\n        // const msg_hb = lastHeartbeat\n        //   ? unitData[lastDate][\"hour-index\"][lastTime][\"heartbeats\"][\n        //       lastHeartbeat\n        //     ]\n        //   : null;\n        if (msg_gps) {\n          var lastLocationReport = Math.round(\n            (Math.round(new Date().getTime() / 1000) - lastGPS) / 60,\n          );\n\n          var latency = null;\n          // if (\n          //   msg_hb.hasOwnProperty(\"recTime\") &&\n          //   msg_hb.hasOwnProperty(\"genTime\")\n          // ) {\n          //   latency = msg_hb.recTime - msg_hb.genTime;\n          // }\n\n          var health = null;\n          if (lastLocationReport < 2) {\n            if (latency < 20) {\n              health = \"Healthy\";\n            } else {\n              health = \"Sick\";\n            }\n          } else if (lastLocationReport < 10) {\n            health = \"Sick\";\n          } else {\n            health = \"Down\";\n          }\n\n          var location = null;\n          if (msg_gps.hasOwnProperty(\"lat\") && msg_gps.hasOwnProperty(\"lng\")) {\n            location = msg_gps;\n          }\n\n          var connection = null;\n\n          acc[unit] = {\n            health,\n            connection,\n            location,\n            lastLocationReport,\n            lastHeartbeatTime: lastLocationReport,\n          };\n          state.set(`health.${unit}`, health);\n        } else {\n          acc[unit] = {\n            health: \"Down\",\n            connection: null,\n            location: null,\n            lastReport: \"NA\",\n            lastHeartbeatTime: 60,\n          };\n          state.set(`health.${unit}`, \"Down\");\n        }\n        return acc;\n      },\n      {},\n    ),\n  }),\n  set(state`snapshots`, props`units`),\n]);\n","import { Module } from 'cerebral';\nimport * as signals from './sequences'\n\nexport default Module({\n  state: {\n  },\n  signals,\n});\n\n\n","/* cerebral imports */\nimport { state, props } from \"cerebral/tags\";\nimport { set } from \"cerebral/operators\";\nimport oada from \"@oada/cerebral-module/sequences\";\nimport * as data from \"../data/sequences\";\nimport * as snapshots from \"../snapshots/sequences\";\n\nconst _SCOPE = \"oada.isoblue:all\";\nconst _OPENATK_METADATA =\n  \"eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHBzOi8vb3BlbmF0ay5jb20vSVNPQmx1ZUFwcC9vYXV0aDIvcmVkaXJlY3QuaHRtbCIsImh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9vYXV0aDIvcmVkaXJlY3QuaHRtbCJdLCJ0b2tlbl9lbmRwb2ludF9hdXRoX21ldGhvZCI6InVybjppZXRmOnBhcmFtczpvYXV0aDpjbGllbnQtYXNzZXJ0aW9uLXR5cGU6and0LWJlYXJlciIsImdyYW50X3R5cGVzIjpbImF1dGhvcml6YXRpb25fY29kZSJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImNvZGUiLCJpZF90b2tlbiIsImlkX3Rva2VuIHRva2VuIiwiY29kZSBpZF90b2tlbiIsImNvZGUgdG9rZW4iLCJjb2RlIGlkX3Rva2VuIHRva2VuIl0sImNsaWVudF9uYW1lIjoiSVNPQmx1ZSBIZWFsdGggTW9uaXRvciIsImNsaWVudF91cmkiOiJodHRwOi8vb2FkYS5vcGVuYXRrLmNvbS9JU09CbHVlQXBwIiwiY29udGFjdHMiOlsiU2FtIE5vZWwgPHNhbm9lbEBwdXJkdWUuZWR1PiJdLCJqd2tzIjp7ImtleXMiOlt7Imt0eSI6IlJTQSIsIm4iOiJ6YXVaRkJ1TWRsdjFrWWp6VWI0cS1fM200c21GeG5mdzRTWW9hSHE3Y2k4U2N0WTN4ajdyZEFIeWtRcG5RVnJqNktPOG1hSHYtMEJ2VzVNaGNnaXZrdVlzLXpIRXZmWUJlVkJuY3ZIZ09rSlBiYzkxQ3dfaXdPWTdFSFdCOGhNN1ZpTFFWY19EdjBoOG5KeWJCdmhMMDRDSFF0N0NwTXRWWUc2Zm9KWGMzZHE1MmpOUWJCSElaNW03VnoxS3R5em9MY3A4TzJtaGFMcDQ1VXIzQ18xZUd0djhuNU56OWJXX0JoNVhGWWJEeHY3Qm5oWk5JdzFHQ2JqakF3bXRibm5MN0dnZjRDeTYwd1JIbVI0dm9lMjFPSWpvQVNxMmpaMDN4MTJtWHM3SFBJM1lCNHkyOXd2Wk13MmdMek9kVG9ycnFPLXRsbW4xYm9Qa1dLSkpTWG9BdnciLCJlIjoiQVFBQiJ9XX0sInNvZnR3YXJlX2lkIjoiNzY1ZjFlZjctMzExNy00NjhhLTgwYjMtMDExYzQ1MjhkMGExIiwicmVnaXN0cmF0aW9uX3Byb3ZpZGVyIjoiaHR0cHM6Ly9pZGVudGl0eS5vYWRhLWRldi5jb20iLCJpYXQiOjE1NDcxNDYxOTF9.seH7eMsR1218IgEEbiq3T5ASGQAr7vqvy54_Yu8-6TIoAoVfslG-dSYWE2dXZ_P65kElqCKZLizVxyR1732vcFnOdzp6jE_pgpLg-eWZfVnIvNQdGK8Dh-5t1gVbPs1ME-j_GMCb2Un-mpDS8LAw4Nig_r-monjKyKbcPBN6gc4\";\n\nconst _REDIRECT_OPENATK = \"https://openatk.com/ISOBlueApp/oauth2/redirect.html\"; // for production\nconst _REDIRECT_LOCALHOST = \"http://localhost:8000/oauth2/redirect.html\"; // for local test\n\nconst _CURRENT_METADATA = _OPENATK_METADATA;\nconst _CURRENT_REDIRECT =\n  process.env.NODE_ENV === \"production\"\n    ? _REDIRECT_OPENATK\n    : _REDIRECT_LOCALHOST;\n\nexport var signOut = [\n  set(state`Connections.oada_token`, \"\"),\n  set(state`Connections.oada_domain`, \"\"),\n  set(state`Connections.oada_fields_domain`, \"\"),\n  set(state`Connections.oada_domain_text`, \"\"),\n  set(state`Connections.oada_fields_domain_text`, \"\"),\n];\n\nexport var updateOadaDomain = [\n  set(state`connection.oada_domain_text`, props`value`),\n];\n\nexport var connect = [\n  ({ state }) => ({\n    domain: state.get(\"connection.oada_domain\"),\n    options: {\n      redirect: _CURRENT_REDIRECT,\n      metadata: _CURRENT_METADATA,\n      scope: _SCOPE,\n    },\n    //    connection_id: state.get(\"operations.connection_id\"),\n    //    signals: [\"fields.handleWatchUpdate\"],\n  }),\n  oada.connect,\n  set(state`data.connection_id`, props`connection_id`), // FIXME: remove this line\n  set(state`connection.connection_id`, props`connection_id`),\n  set(state`connection.dialog_open`, false),\n];\n\nexport var setConnection = [\n  set(state`connection.oada_domain`, state`connection.oada_domain_text`),\n  connect,\n  data.init,\n  snapshots.createSnapshots,\n];\n\nfunction clearConnection({ state, props }) {\n  const connection_id = state.get(\"connection.connection_id\");\n  /* cleaning up connections from oada state */\n  state.unset(\"oada.connections\");\n  /* cleaning up previous connection_id from oada state */\n  state.unset(\"oada.\" + connection_id);\n}\n","import { Module } from \"cerebral\";\nimport oadaProvider from \"@oada/cerebral-provider\";\nimport * as signals from \"./sequences\";\n\nlet _OADA_HOST = \"https://oada.openatk.com\";\nlet _CURRENT_HOST = _OADA_HOST;\n\nexport default Module({\n  state: {\n    dialog_open: true,\n    oada_domain_text: _CURRENT_HOST,\n    oada_domain: _CURRENT_HOST,\n  },\n  signals,\n  providers: {\n    oada: oadaProvider,\n  },\n});\n","import { sequence } from \"cerebral\";\n\nexport const init = sequence(\"init\", []);\n","import { Module } from \"cerebral\";\n\nimport session from \"../session/\";\nimport diagnostics from \"../diagnostics/\";\nimport map from \"../map/\";\nimport data from \"../data/\";\nimport snapshots from \"../snapshots/\";\nimport connection from \"../connection/\";\nimport oadaModule from \"@oada/cerebral-module\";\nimport oadaProvider from \"@oada/cerebral-provider\";\nimport * as signals from \"./sequences\";\n\nexport default Module({\n  modules: {\n    connection,\n    session,\n    oada: oadaModule,\n    diagnostics,\n    map,\n    data,\n    snapshots,\n  },\n  signals,\n  providers: {\n    oada: oadaProvider,\n  },\n});\n","import { Controller } from \"cerebral\";\nimport root from \"./modules/root\";\nimport Devtools from \"cerebral/devtools\";\n\nexport default Controller(root, {\n  devtools:\n    process.env.NODE_ENV === \"production\"\n      ? null\n      : Devtools({ host: \"localhost:8787\" }),\n  //devtools: null,\n});\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport App from \"./components/App/\";\n\nimport { Container } from \"@cerebral/react\";\nimport controller from \"./controller\";\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nrender(\n  <Container controller={controller}>\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  </Container>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}