{"version":3,"sources":["components/AppBarContent/index.js","components/Visualization/Map/Lines/index.js","components/Visualization/Map/Markers/index.js","components/Visualization/Map/index.js","components/Visualization/Graph/index.js","components/Visualization/index.js","components/DrawerContent/Summary/index.js","components/DrawerContent/Diagnostics/index.js","components/DrawerContent/index.js","components/App/index.js","modules/session/sequences.js","modules/session/index.js","modules/map/sequences.js","modules/snapshots/sequences.js","modules/data/sequences.js","modules/diagnostics/sequences.js","modules/diagnostics/index.js","modules/map/index.js","modules/data/index.js","modules/snapshots/index.js","modules/root/sequences.js","modules/root/index.js","controller.js","index.js"],"names":["AppBarContent","userLocationButton","_this","this","classes","props","userLocationAvailable","react_default","a","createElement","IconButton_default","onClick","centerOnUser","MyLocation_default","className","icon","Toolbar_default","color","aria-label","toggleDrawerOpen","Menu_default","Typography_default","variant","flex","React","Component","connect","state","_templateObject","signal","_templateObject2","_templateObject3","withStyles","theme","_icon","Object","defineProperty","breakpoints","up","width","spacing","unit","height","marginRight","down","Lines","conn_id","connection_id","ready","dataLines","devices","oada","bookmarks","isoblue","selectedUnit","date","hour","hasOwnProperty","gps_data","gps","points","_","forEach","instance","push","lat","lng","unit_resource","date_list","keys","length","last_date","maxBy","o","Date","hour_list","current_hour","max","last_hour","remove","n","current_time_sec","Math","round","getTime","positions","current_gps_data","undefined","prev_gps_data","map","Polyline","key","uuid","v4","Lines_templateObject","Lines_templateObject2","Lines_templateObject3","_templateObject4","_templateObject5","_templateObject6","withTheme","Markers","unitMarkers","snapshots","tempGPS","location","CircleMarker","ref","center","fillColor","health","fillOpacity","radius","zIndexOffset","e","selectUnit","Tooltip","direction","offset","Markers_templateObject","Markers_templateObject2","Markers_templateObject3","Markers_templateObject4","Markers_templateObject5","refs","leafletElement","locate","currentMarker","Marker","position","userLocation","Map","dragging","targetCenter","zoom","onlocationfound","storeUserLocation","latlng","TileLayer","url","attribution","Map_Markers","Map_Lines","Map_templateObject","Map_templateObject2","Map_templateObject3","Map_templateObject4","Map_templateObject5","display","Graph","rawData","chart","data","measurement","values","heartbeats","value","latency","recTime","genTime","time","toLocaleTimeString","minute","LineChart","margin","top","right","left","bottom","Line","type","isAnimationActive","dataKey","stroke","CartesianGrid","strokeDasharray","XAxis","label","dy","YAxis","angle","component_Tooltip","interfaces","connection","ResponsiveContainer","Graph_templateObject","Graph_templateObject2","Graph_templateObject3","Graph_templateObject4","Graph_templateObject5","Graph_templateObject6","_templateObject7","Visualization","mode","Visualization_Map","Visualization_Graph","Visualization_templateObject","Summary","units","List_default","list","component","ListItem_default","button","concat","ListItemText_default","primary","ListItemIcon_default","Sync_default","healthy","SyncProblem_default","sick","SyncDisabled_default","align","Divider_default","Summary_templateObject","Summary_templateObject2","backgroundColor","palette","background","paper","overflow","textField","Diagnostics","measurements","visualizing","Button_default","toggleMode","measurementSelect","Select_default","renderValue","onChange","setMeasurement","target","MenuItem_default","dateSelect","setDate","hourSelect","setHour","lastReport","unselectUnit","Diagnostics_templateObject","Diagnostics_templateObject2","Diagnostics_templateObject3","Diagnostics_templateObject4","Diagnostics_templateObject5","Diagnostics_templateObject6","Diagnostics_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","DrawerContent","content","DrawerContent_Diagnostics","DrawerContent_Summary","Drawer_default","open","drawerOpen","onClose","drawerPaper","toolbar","DrawerContent_templateObject","DrawerContent_templateObject2","DrawerContent_templateObject3","mixins","App","init","root","AppBar_default","appBar","components_AppBarContent","components_DrawerContent","components_Visualization","App_templateObject","flexGrow","zIndex","drawer","sequence","toggle","sequences_templateObject","Module","signals","_ref","set","map_sequences_templateObject","sequences_templateObject2","debounce","continue","sequences_templateObject3","sequences_templateObject4","discard","centerOnUnit","sequences_templateObject5","_ref2","get","gps_list","last","unitLocation","updateSnapshot","createSnapshots","reduce","acc","unitkey","unitData","lastDate","sort","b","lastTime","lastGPS","lastHeartbeat","console","log","msg_gps","msg_hb","lastHeartbeatTime","snapshots_sequences_templateObject","snapshots_sequences_templateObject2","masterTree","_type","_rev","device-index","*","day-index","hour-index","dayTree","setRequestLastHour","requests","device_name","device_data","path","watch","tree","handleDeviceUpdate","data_sequences_templateObject","data_sequences_templateObject2","data_sequences_templateObject3","data_sequences_templateObject4","data_sequences_templateObject5","sequences_templateObject6","sequences_templateObject7","getHour","_ref3","diagnostics_sequences_templateObject","diagnostics_sequences_templateObject2","diagnostics_sequences_templateObject3","diagnostics_sequences_templateObject4","diagnostics_sequences_templateObject5","diagnostics_sequences_templateObject6","_ref4","diagnostics_sequences_templateObject7","sequences_templateObject8","sequences_templateObject9","when","sequences_templateObject10","true","sequences_templateObject11","sequences_templateObject12","false","sequences_templateObject13","sequences_templateObject14","domain","options","redirect","metadata","scope","modules","session","oadaModule","diagnostics","providers","oadaProvider","Controller","devtools","createMuiTheme","pallete","light","main","dark","contrastText","secondary","render","_cerebral_react","controller","core_styles","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.b8b82946.chunk.js","sourcesContent":["import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\n//import TextField from '@material-ui/core/TextField';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport { connect } from '@cerebral/react';\nimport { state, signal } from 'cerebral/tags';\n\nconst styles = theme => ({\n  flex: {\n    flex: 1,\n  },\n  icon: {\n    color: '#FFFFFF',\n    [theme.breakpoints.up('xs')]: {\n      width: 5*theme.spacing.unit,\n      height: 5*theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n    },\n    [theme.breakpoints.down('xs')]: {\n      width: 4*theme.spacing.unit,\n      height: 4*theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n    },\n  },\n});\n\nclass AppBarContent extends React.Component {\n\n  render() {\n    const { classes } = this.props\n\n    var userLocationButton;\n    if (this.props.userLocationAvailable) {\n      userLocationButton = \n      <IconButton\n        onClick={() => this.props.centerOnUser({})}>\n        <MyLocationIcon className={classes.icon}/>\n      </IconButton>\n    } else {\n      userLocationButton = null;\n    }\n\n    return (\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"Open Drawer\"\n          onClick={this.props.toggleDrawerOpen}\n          >\n          <MenuIcon className={classes.icon}/>\n        </IconButton>\n        <Typography variant='title' color='inherit' className={classes.flex}>\n          ISOBlueApp [1.0.0]\n        </Typography>\n        {userLocationButton}\n      </Toolbar>\n    )\n  }\n}\n\nexport default connect({\n  userLocationAvailable: state`map.userLocationAvailable`,\n\n  centerOnUser: signal`map.centerOnUser`,  \n  toggleDrawerOpen: signal`session.toggleDrawerOpen`,\n\n  },\n  withStyles(styles)(AppBarContent)\n);\n\n\n\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { connect } from \"@cerebral/react\";\nimport { state } from \"cerebral/tags\";\nimport uuid from \"uuid\";\n//import Leaflet from 'leaflet';\nimport { Polyline } from \"react-leaflet\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({});\n\nclass Lines extends React.Component {\n  render() {\n    // get connection id\n    const conn_id = this.props.connection_id;\n\n    // do not render lines if data is not ready\n    if (!this.props.ready) return null;\n\n    var dataLines = [];\n\n    const devices =\n      this.props.oada[conn_id].bookmarks.isoblue[\"device-index\"] || {};\n\n    // Unit is selected\n    if (this.props.selectedUnit && this.props.date && this.props.hour) {\n      // ensure that the target resource actually exists\n      if (!devices.hasOwnProperty(this.props.selectedUnit)) return null;\n      if (!devices[this.props.selectedUnit].hasOwnProperty(\"day-index\"))\n        return null;\n      if (\n        !devices[this.props.selectedUnit][\"day-index\"].hasOwnProperty(\n          this.props.date,\n        )\n      )\n        return null;\n      if (\n        !devices[this.props.selectedUnit][\"day-index\"][\n          this.props.date\n        ].hasOwnProperty(\"hour-index\")\n      )\n        return null;\n      if (\n        !devices[this.props.selectedUnit][\"day-index\"][this.props.date][\n          \"hour-index\"\n        ].hasOwnProperty(this.props.hour)\n      )\n        return null;\n      if (\n        !devices[this.props.selectedUnit][\"day-index\"][this.props.date][\n          \"hour-index\"\n        ][this.props.hour].hasOwnProperty(\"gps\")\n      )\n        return null;\n\n      // get resource\n      const gps_data =\n        devices[this.props.selectedUnit][\"day-index\"][this.props.date][\n          \"hour-index\"\n        ][this.props.hour].gps;\n\n      // make a line\n      var points = [];\n      _.forEach(gps_data, instance => {\n        if (instance.hasOwnProperty(\"lat\") && instance.hasOwnProperty(\"lng\")) {\n          points.push([instance.lat, instance.lng]);\n        }\n      });\n\n      // add line\n      dataLines.push(points);\n    }\n\n    // None of the units is selected\n    else {\n      _.forEach(devices, (unit_resource, unit) => {\n        // get the most recent date\n        if (!unit_resource.hasOwnProperty(\"day-index\")) return;\n        const date_list = Object.keys(unit_resource[\"day-index\"]);\n        if (date_list.length == 0) return;\n        const last_date = _.maxBy(date_list, function(o) {\n          return new Date(o);\n        });\n\n        // get hours\n        if (!unit_resource[\"day-index\"][last_date].hasOwnProperty(\"hour-index\"))\n          return;\n        const hour_list = Object.keys(\n          unit_resource[\"day-index\"][last_date][\"hour-index\"],\n        );\n\n        const current_hour = _.max(hour_list);\n        const last_hour = _.max(\n          _.remove(hour_list, n => {\n            return n !== current_hour;\n          }),\n        );\n        var current_time_sec = Math.round(new Date().getTime() / 1000);\n        var positions = [];\n\n        if (\n          unit_resource[\"day-index\"][last_date][\"hour-index\"][\n            current_hour\n          ].hasOwnProperty(\"gps\")\n        ) {\n          const current_gps_data =\n            unit_resource[\"day-index\"][last_date][\"hour-index\"][current_hour]\n              .gps;\n          var current_gps_ts = Object.keys(current_gps_data || {});\n          current_gps_ts.forEach(o => {\n            if (\n              current_time_sec - o <= 15 * 60 &&\n              current_gps_data[o].hasOwnProperty(\"lat\") &&\n              current_gps_data[o].hasOwnProperty(\"lng\")\n            ) {\n              positions.push([\n                current_gps_data[o].lat,\n                current_gps_data[o].lng,\n              ]);\n            }\n          });\n        }\n\n        if (\n          last_hour != undefined &&\n          unit_resource[\"day-index\"][last_date][\"hour-index\"][\n            last_hour\n          ].hasOwnProperty(\"gps\")\n        ) {\n          const prev_gps_data =\n            unit_resource[\"day-index\"][last_date][\"hour-index\"][last_hour].gps;\n          var prev_gps_ts = Object.keys(prev_gps_data || {});\n          prev_gps_ts.forEach(o => {\n            if (\n              current_time_sec - o <= 15 * 60 &&\n              prev_gps_data[o].hasOwnProperty(\"lat\") &&\n              prev_gps_data[o].hasOwnProperty(\"lng\")\n            ) {\n              positions.push([prev_gps_data[o].lat, prev_gps_data[o].lng]);\n            }\n          });\n        }\n\n        // FIXME: currentGPS and lastGPS are not guaranteed to be sorted\n\n        dataLines.push(positions);\n      });\n    }\n\n    return (\n      <div>\n        {dataLines.map(positions => (\n          <Polyline key={uuid.v4()} positions={positions} color=\"#ffffff\" />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  {\n    connection_id: state`data.connection_id`,\n    ready: state`data.ready`,\n    oada: state`oada`,\n    date: state`diagnostics.date`,\n    hour: state`diagnostics.hour`,\n    selectedUnit: state`diagnostics.selectedUnit`,\n  },\n  withStyles(styles, { withTheme: true })(Lines),\n);\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport { CircleMarker, Tooltip } from \"react-leaflet\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({});\n\nclass Markers extends React.Component {\n  render() {\n    const unitMarkers = [];\n    _.forEach(Object.keys(this.props.snapshots) || {}, unit => {\n      var tempGPS = this.props.snapshots[unit].location;\n      if (tempGPS && tempGPS.lat && tempGPS.lng) {\n        unitMarkers.push(\n          <CircleMarker\n            ref={unit => {\n              this.unit = unit;\n            }}\n            key={unit}\n            center={[\n              this.props.snapshots[unit].location.lat,\n              this.props.snapshots[unit].location.lng,\n            ]}\n            color={\"#ffffff\"}\n            fillColor={(() => {\n              switch (this.props.snapshots[unit].health) {\n                case \"Healthy\":\n                  return \"#008000\";\n                case \"Sick\":\n                  return \"#ffbf00\";\n                case \"Down\":\n                  return \"#707070\";\n                default:\n                  return \"#707070\";\n              }\n            })()}\n            fillOpacity={1}\n            radius={12}\n            zIndexOffset={1}\n            onClick={e => this.props.selectUnit({ unit: unit })}\n          >\n            <Tooltip direction=\"top\" offset={[0, -10]}>\n              <b>Unit: {unit}</b>\n              <br />\n              <center>\n                <b>{this.props.snapshots[unit].health}</b>\n              </center>\n            </Tooltip>\n          </CircleMarker>,\n        );\n      }\n    });\n\n    return <div>{unitMarkers}</div>;\n  }\n}\n\nexport default connect(\n  {\n    snapshots: state`snapshots`,\n    date: state`diagnostics.date`,\n    hour: state`diagnostics.hour`,\n    selectedUnit: state`diagnostics.selectedUnit`,\n\n    selectUnit: signal`diagnostics.selectUnit`,\n  },\n  withStyles(styles, { withTheme: true })(Markers),\n);\n","import React from \"react\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport { Map, Marker, TileLayer } from \"react-leaflet\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport \"./Map.css\";\nimport Lines from \"./Lines/\";\nimport Markers from \"./Markers/\";\n\nconst styles = theme => ({\n  map: {\n    position: \"relative\",\n    display: \"flex\",\n    width: \"100%\",\n    height: \"calc(100% - 56px)\",\n  },\n});\n\nconst mapTiles =\n  \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\";\nconst attrib =\n  \"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\";\n\nclass map extends React.Component {\n  componentDidMount() {\n    this.refs.map.leafletElement.locate();\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    const currentMarker = [];\n    if (this.props.userLocationAvailable) {\n      currentMarker.push(\n        <Marker\n          key={\"user\"}\n          position={[this.props.userLocation.lat, this.props.userLocation.lng]}\n        >\n          zIndexOffset={1}\n        </Marker>,\n      );\n    }\n\n    return (\n      <div className={classes.map}>\n        <Map\n          dragging={true}\n          center={[this.props.targetCenter.lat, this.props.targetCenter.lng]}\n          ref=\"map\"\n          zoom={18}\n          onlocationfound={e =>\n            this.props.storeUserLocation({\n              lat: e.latlng.lat,\n              lng: e.latlng.lng,\n            })\n          }\n        >\n          <TileLayer url={mapTiles} attribution={attrib} />\n          <Markers />\n          <Lines />\n          {currentMarker}\n        </Map>\n      </div>\n    );\n  }\n}\n\nmap.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default connect(\n  {\n    // states\n    targetCenter: state`map.targetCenter`,\n    userLocation: state`map.userLocation`,\n    userLocationAvailable: state`map.userLocationAvailable`,\n    // signals\n    storeUserLocation: signal`map.storeUserLocation`,\n    selectUnit: signal`diagnostics.selectUnit`,\n  },\n  withStyles(styles, { withTheme: true })(map),\n);\n","import React from \"react\";\nimport { connect } from \"@cerebral/react\";\nimport { state } from \"cerebral/tags\";\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  ResponsiveContainer,\n  Tooltip,\n} from \"recharts\";\nimport _ from \"lodash\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({});\n\nclass Graph extends React.Component {\n  render() {\n    var rawData;\n    if (this.props.selectedUnit && this.props.date && this.props.hour) {\n      rawData = this.props.oada[this.props.connection_id].bookmarks.isoblue[\n        \"device-index\"\n      ][this.props.selectedUnit][\"day-index\"][this.props.date][\"hour-index\"][\n        this.props.hour\n      ];\n    } else {\n      // this should not happen\n      return null;\n    }\n\n    var data = [];\n    var chart;\n    if (this.props.measurement === \"Latency\" && rawData) {\n      _.forEach(Object.values(rawData.heartbeats || {}), value => {\n        value.latency = value.recTime - value.genTime;\n        value.time = new Date(value.genTime * 1000).toLocaleTimeString(\n          \"en-US\",\n          { hour: \"numeric\", minute: \"numeric\" },\n        );\n        data.push(value);\n      });\n\n      chart = (\n        <LineChart\n          data={data}\n          margin={{ top: 20, right: 30, left: 0, bottom: 80 }}\n        >\n          <Line\n            type=\"step\"\n            isAnimationActive={false}\n            dataKey={\"latency\"}\n            stroke=\"#8884d8\"\n          />\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n          <XAxis\n            dataKey={\"time\"}\n            label={{ value: \"Time\", position: \"insideBottom\", dy: 20 }}\n          />\n          <YAxis\n            dataKey={\"latency\"}\n            label={{\n              value: \"Latency (sec)\",\n              position: \"insideLeft\",\n              angle: -90,\n            }}\n          />\n          <Tooltip />\n        </LineChart>\n      );\n    } else if (this.props.measurement === \"Wifi RSSI\" && rawData) {\n      _.forEach(Object.values(rawData.heartbeats || {}), value => {\n        _.forEach(value.interfaces, connection => {\n          if (connection.type === \"wifi\") {\n            connection.time = new Date(value.genTime * 1000).toLocaleTimeString(\n              \"en-US\",\n              { hour: \"numeric\", minute: \"numeric\" },\n            );\n            data.push(connection);\n          }\n        });\n      });\n\n      chart = (\n        <LineChart\n          data={data}\n          margin={{ top: 20, right: 30, left: 0, bottom: 80 }}\n        >\n          <Line\n            type=\"step\"\n            isAnimationActive={false}\n            dataKey={\"rssi\"}\n            stroke=\"#8884d8\"\n          />\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n          <XAxis dataKey={\"time\"} />\n          <YAxis\n            dataKey={\"rssi\"}\n            label={{\n              value: \"WiFi RSSI (dB)\",\n              position: \"insideLeft\",\n              angle: -90,\n            }}\n          />\n          <Tooltip />\n        </LineChart>\n      );\n    } else if (this.props.measurement === \"Cellular RSSI\" && rawData) {\n      _.forEach(Object.values(rawData.heartbeats || {}), value => {\n        _.forEach(value.interfaces, connection => {\n          if (connection.type === \"cellular\") {\n            connection.time = new Date(value.genTime * 1000).toLocaleTimeString(\n              \"en-US\",\n              { hour: \"numeric\", minute: \"numeric\" },\n            );\n            data.push(connection);\n          }\n        });\n      });\n\n      chart = (\n        <LineChart\n          data={data}\n          margin={{ top: 20, right: 30, left: 0, bottom: 80 }}\n        >\n          <Line\n            type=\"step\"\n            isAnimationActive={false}\n            dataKey={\"rssi\"}\n            stroke=\"#8884d8\"\n          />\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n          <XAxis dataKey={\"time\"} />\n          <YAxis\n            dataKey={\"rssi\"}\n            label={{\n              value: \"Cellular RSSI (dB)\",\n              position: \"insideLeft\",\n              angle: -90,\n            }}\n          />\n          <Tooltip />\n        </LineChart>\n      );\n    } else {\n      chart = (\n        <LineChart margin={{ top: 20, right: 30, left: 0, bottom: 80 }} />\n      );\n    }\n\n    return (\n      <ResponsiveContainer width={\"100%\"} height={\"100%\"}>\n        {chart}\n      </ResponsiveContainer>\n    );\n  }\n}\n\nexport default connect(\n  {\n    connection_id: state`data.connection_id`,\n    date: state`diagnostics.date`,\n    hour: state`diagnostics.hour`,\n    selectedUnit: state`diagnostics.selectedUnit`,\n    measurement: state`diagnostics.measurement`,\n    oada: state`oada`,\n    data: state`data`,\n  },\n  withStyles(styles, { withTheme: true })(Graph),\n);\n","import React from \"react\";\nimport { connect } from \"@cerebral/react\";\nimport { state } from \"cerebral/tags\";\n\nimport Map from \"./Map/\";\nimport Graph from \"./Graph/\";\n\nclass Visualization extends React.Component {\n  render() {\n    var graphic;\n    if (this.props.mode === \"map\") {\n      graphic = <Map />;\n    } else {\n      graphic = <Graph />;\n    }\n\n    return graphic;\n  }\n}\n\nexport default connect(\n  {\n    mode: state`diagnostics.mode`,\n  },\n  Visualization,\n);\n","import React from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport SyncIcon from \"@material-ui/icons/Sync\";\nimport SyncProblemIcon from \"@material-ui/icons/SyncProblem\";\nimport SyncDisabledIcon from \"@material-ui/icons/SyncDisabled\";\n\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\n\nconst styles = theme => ({\n  list: {\n    width: \"90%\",\n    backgroundColor: theme.palette.background.paper,\n    //position: 'relative',\n    overflow: \"auto\",\n    height: 300,\n    margin: 1.5 * theme.spacing.unit,\n  },\n  textField: {\n    margin: 1.5 * theme.spacing.unit,\n  },\n  healthy: { color: \"#008000\" },\n  sick: { color: \"#ffbf00\" },\n  down: { color: \"#ff0000\" },\n});\n\nclass Summary extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    // create unit list\n    var units;\n    if (Object.keys(this.props.health).length > 0) {\n      units = (\n        <List className={classes.list} component=\"nav\">\n          {Object.keys(this.props.health).map(unit => (\n            <ListItem\n              button\n              key={`-${unit}`}\n              onClick={() => this.props.selectUnit({ unit: unit })}\n            >\n              <ListItemText primary={unit} />\n              <ListItemIcon>\n                {(() => {\n                  switch (this.props.health[unit]) {\n                    case \"Healthy\":\n                      return <SyncIcon className={classes.healthy} />;\n                    case \"Sick\":\n                      return <SyncProblemIcon className={classes.sick} />;\n                    case \"Down\":\n                      return <SyncDisabledIcon />;\n                    default:\n                      return <SyncDisabledIcon />;\n                  }\n                })()}\n              </ListItemIcon>\n            </ListItem>\n          ))}\n        </List>\n      );\n    } else {\n      units = <List className={classes.list} component=\"nav\" />;\n    }\n\n    // wrapper for unit list\n    return (\n      <List>\n        <ListItem>\n          <ListItemText align=\"center\" primary={\"My ISOBlues:\"} />\n        </ListItem>\n        {units}\n        <Divider />\n      </List>\n    );\n  }\n}\n\nexport default connect(\n  {\n    health: state`health`,\n    selectUnit: signal`diagnostics.selectUnit`,\n  },\n  withStyles(styles)(Summary),\n);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\n\nconst styles = theme => ({});\n\nclass Diagnostics extends React.Component {\n  render() {\n    const visualizing = (\n      <ListItem>\n        <ListItemText align=\"center\">\n          <Button onClick={() => this.props.toggleMode({})} variant=\"contained\">\n            {this.props.mode === \"map\" ? \"Show Statistics\" : \"Show Map\"}\n          </Button>\n        </ListItemText>\n      </ListItem>\n    );\n\n    var measurements;\n    if (this.props.mode === \"map\") {\n      measurements = [\"GPS\"];\n    } else {\n      measurements = [\"Latency\", \"Wifi RSSI\", \"Cellular RSSI\"];\n    }\n    const measurementSelect = (\n      <Select\n        value={this.props.measurement}\n        renderValue={value => `${value}`}\n        onChange={value =>\n          this.props.setMeasurement({ measurement: value.target.value })\n        }\n      >\n        {measurements.map(measurement => (\n          <MenuItem key={measurement} value={measurement}>\n            {measurement}\n          </MenuItem>\n        ))}\n      </Select>\n    );\n\n    const dateSelect = (\n      <Select\n        value={this.props.date}\n        renderValue={value => `${value}`}\n        onChange={value => this.props.setDate({ date: value.target.value })}\n      >\n        {Object.keys(\n          this.props.oada[this.props.connection_id].bookmarks.isoblue[\n          \"device-index\"\n          ][this.props.selectedUnit][\"day-index\"],\n        ).map(date => (\n          <MenuItem key={date} value={date}>\n            {date}\n          </MenuItem>\n        ))}\n        ;\n      </Select>\n    );\n\n    const hourSelect = (\n      <Select\n        value={this.props.hour}\n        renderValue={value => `${value}`}\n        onChange={value => this.props.setHour({ hour: value.target.value })}\n      >\n        {Object.keys(\n          this.props.oada[this.props.connection_id].bookmarks.isoblue[\n          \"device-index\"\n          ][this.props.selectedUnit][\"day-index\"][this.props.date][\n          \"hour-index\"\n          ],\n        ).map(hour => (\n          <MenuItem key={hour} value={hour}>\n            {hour}\n          </MenuItem>\n        ))}\n        ;\n      </Select>\n    );\n\n    return (\n      <List>\n        <ListItem>\n          <ListItemText align=\"center\" primary={\"Selected Unit:\"} />\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\" primary={this.props.selectedUnit} />\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText align=\"center\" primary=\"ISOBlue Status:\" />\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\" primary={\"Health:\"} />\n          <ListItemText\n            align=\"center\"\n            primary={this.props.snapshots[this.props.selectedUnit].health}\n          />\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\" primary={\"Last Report:\"} />\n          <ListItemText\n            align=\"center\"\n            primary={\n              this.props.snapshots[this.props.selectedUnit].lastReport === \"NA\"\n                ? \"NA\"\n                : this.props.snapshots[this.props.selectedUnit].lastReport +\n                \" min\"\n            }\n          />\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText align=\"center\" primary={\"Available Data:\"} />\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\">{measurementSelect}</ListItemText>\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\">{dateSelect}</ListItemText>\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\">{hourSelect}</ListItemText>\n        </ListItem>\n        {visualizing}\n        <Divider />\n        <ListItem>\n          <ListItemText align=\"center\">\n            <Button\n              variant=\"contained\"\n              onClick={() => this.props.unselectUnit({})}\n            >\n              Back to Main\n            </Button>\n          </ListItemText>\n        </ListItem>\n      </List>\n    );\n  }\n}\n\nexport default connect(\n  {\n    date: state`diagnostics.date`,\n    hour: state`diagnostics.hour`,\n    measurement: state`diagnostics.measurement`,\n    selectedUnit: state`diagnostics.selectedUnit`,\n    snapshots: state`snapshots`,\n    data: state`data`,\n    mode: state`diagnostics.mode`,\n    oada: state`oada`,\n    connection_id: state`data.connection_id`,\n\n    selectUnit: signal`diagnostics.selectUnit`,\n    unselectUnit: signal`diagnostics.unselectUnit`,\n    setDate: signal`diagnostics.setDate`,\n    setHour: signal`diagnostics.setHour`,\n    setMeasurement: signal`diagnostics.setMeasurement`,\n    toggleMode: signal`diagnostics.toggleMode`,\n  },\n  withStyles(styles)(Diagnostics),\n);\n","import React from \"react\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\n\nimport Summary from \"./Summary/\";\nimport Diagnostics from \"./Diagnostics/\";\n\nconst styles = theme => ({\n  drawerPaper: {\n    position: \"relative\",\n    width: 240,\n    backgroundColor: \"#eeeeee\",\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\nclass DrawerContent extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    var content;\n    if (this.props.selectedUnit) {\n      content = <Diagnostics />;\n    } else {\n      content = <Summary />;\n    }\n\n    return (\n      <Drawer\n        open={this.props.drawerOpen}\n        onClose={this.props.toggleDrawerOpen}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.toolbar} />\n        {content}\n      </Drawer>\n    );\n  }\n}\n\nexport default connect(\n  {\n    selectedUnit: state`diagnostics.selectedUnit`,\n    drawerOpen: state`session.drawerOpen`,\n\n    toggleDrawerOpen: signal`session.toggleDrawerOpen`,\n  },\n  withStyles(styles)(DrawerContent),\n);\n","import React from 'react';\nimport { connect } from '@cerebral/react';\nimport { signal } from 'cerebral/tags';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\n\nimport AppBarContent from '../AppBarContent/';\nimport Visualization from '../Visualization/';\nimport DrawerContent from '../DrawerContent/index.js';\n\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    height: '100vh',\n    zIndex: 1,\n    overflow: 'hidden',\n    position: 'relative',\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  content: {\n    flexGrow: 1,\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\nclass App extends React.Component {\n\n  componentWillMount() {\n    this.props.init({});\n  }\n \n  render() {\n\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position='absolute' className={classes.appBar}>\n          <AppBarContent/>\n        </AppBar>\n        <DrawerContent />\n        <main className={classes.content}>\n          <div className={classes.toolbar}/>\n          <Visualization/>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default connect (\n  {\n    init: signal`init`\n  },\n  withStyles(styles, { withTheme: true })(App)\n);\n\n","import { sequence } from \"cerebral\";\nimport { state } from \"cerebral/tags\";\nimport { toggle } from \"cerebral/operators\";\n\nexport const toggleDrawerOpen = sequence(\"toggleDrawerOpen\", [\n  toggle(state`session.drawerOpen`),\n]);\n","import { Module } from 'cerebral';\nimport * as signals from './sequences'\n\nexport default Module({\n  state: {\n    drawerOpen: true,\n  },\n  signals,\n});\n\n\n","import { sequence } from \"cerebral\";\nimport { state } from \"cerebral/tags\";\nimport { set, debounce } from \"cerebral/operators\";\nimport _ from \"lodash\";\n\nexport const storeUserLocation = sequence(\"storeUserLocation\", [\n  ({ state, props }) =>\n    state.set(\"map.userLocation\", { lat: props.lat, lng: props.lng }),\n  set(state`map.userLocationAvailable`, true),\n]);\n\nexport const centerOnUser = sequence(\"centerOnUser\", [\n  set(state`map.targetCenter`, { lat: 40.428641, lng: -86.913783 }),\n  debounce(1),\n  {\n    continue: [set(state`map.targetCenter`, state`map.userLocation`)],\n    discard: [],\n  },\n]);\n\nexport const centerOnUnit = sequence(\"centerOnUnit\", [\n  set(state`map.targetCenter`, { lat: 40.428641, lng: -86.913783 }),\n  debounce(1),\n  {\n    continue: [\n      ({ state, props }) => {\n        const conn_id = state.get(\"data.connection_id\");\n        let unit = state.get(`diagnostics.selectedUnit`);\n        let date = state.get(`diagnostics.date`);\n        let hour = state.get(`diagnostics.hour`);\n        if (unit && date && hour) {\n          const gps_list =\n            state.get(\n              `oada.${conn_id}.bookmarks.isoblue.device-index.${unit}.day-index.${date}.hour-index.${hour}.gps`,\n            ) || {};\n          const last = _.max(Object.keys(gps_list));\n          if (last) {\n            const unitLocation = gps_list[last];\n            if (unitLocation.lat && unitLocation.lng) {\n              state.set(`map.targetCenter`, unitLocation);\n            }\n          }\n        }\n      },\n      //set(state`map.targetCenter`, state`snapshots.${state`diagnostics.selectedUnit`}.location`),\n    ],\n    discard: [],\n  },\n]);\n","import { sequence } from \"cerebral\";\nimport { state, props } from \"cerebral/tags\";\nimport { set } from \"cerebral/operators\";\nimport _ from \"lodash\";\n\nfunction getUnitStatus(state, props) { }\n\nexport const updateSnapshot = sequence(\"updateSnapshot\", [\n  //    ({ state, props }) => ({\n  //\n  //    }\n]);\n\nexport const createSnapshots = sequence(\"createSnapshots\", [\n  ({ state, props }) => ({\n    units: _.reduce(\n      Object.keys(\n        state.get(`oada.${props.connection_id}.bookmarks.isoblue.device-index`),\n      ),\n      (acc, unit, unitkey) => {\n        // iterate over all the ISOBlue units\n        var unitData = state.get(\n          `oada.${\n          props.connection_id\n          }.bookmarks.isoblue.device-index.${unit}.day-index`,\n        );\n        //var health, location, connection, lastReport;\n        var lastDate = Object.keys(unitData || {}).sort((a, b) => {\n          return new Date(b) - new Date(a);\n        })[0];\n        var lastTime = _.max(\n          Object.keys(unitData[lastDate][\"hour-index\"] || {}),\n        );\n\n        var lastGPS = _.max(\n          Object.keys(unitData[lastDate][\"hour-index\"][lastTime].gps || {}),\n        );\n        var lastHeartbeat = _.max(\n          Object.keys(\n            unitData[lastDate][\"hour-index\"][lastTime].heartbeats || {},\n          ),\n        );\n\n        console.log(\n          \"unit \" +\n          unit +\n          \" lastDate \" +\n          lastDate +\n          \"lastTime \" +\n          lastTime +\n          \" lasthb \" +\n          lastHeartbeat +\n          \" lastgps \" +\n          lastGPS,\n        );\n\n        // get messages\n        const msg_gps = lastGPS\n          ? unitData[lastDate][\"hour-index\"][lastTime][\"gps\"][lastGPS]\n          : null;\n        const msg_hb = lastHeartbeat\n          ? unitData[lastDate][\"hour-index\"][lastTime][\"heartbeats\"][\n          lastHeartbeat\n          ]\n          : null;\n\n        if (msg_gps && msg_hb) {\n          var lastReport = Math.round(\n            (Math.round(new Date().getTime() / 1000) -\n              _.max([lastHeartbeat, lastGPS])) /\n            60,\n          );\n          var latency = msg_hb.recTime - msg_hb.genTime;\n          var health = null;\n          if (lastReport < 2) {\n            if (latency < 20) {\n              health = \"Healthy\";\n            } else {\n              health = \"Sick\";\n            }\n          } else if (lastReport < 10) {\n            health = \"Sick\";\n          } else {\n            health = \"Down\";\n          }\n\n          var connection = null;\n\n          acc[unit] = {\n            health,\n            connection,\n            location: msg_gps,\n            lastReport,\n            lastHeartbeatTime: lastHeartbeat,\n          };\n          state.set(`health.${unit}`, health);\n        } else {\n          acc[unit] = {\n            health: \"Down\",\n            connection: \"NA\",\n            location: null,\n            lastReport: \"NA\",\n            lastHeartbeatTime: lastHeartbeat,\n          };\n          state.set(`health.${unit}`, \"Down\");\n        }\n        return acc;\n      },\n      {},\n    ),\n  }),\n  set(state`snapshots`, props`units`),\n]);\n","import { sequence } from \"cerebral\";\nimport { state, props } from \"cerebral/tags\";\nimport { set } from \"cerebral/operators\";\nimport Promise from \"bluebird\";\nimport _ from \"lodash\";\nimport oada from \"@oada/cerebral-module/sequences\";\nimport * as snapshots from \"../snapshots/sequences\";\n\nvar masterTree = {\n  bookmarks: {\n    _type: \"applications/vnd.oada.bookmarks.1+json\",\n    _rev: \"0-0\",\n    isoblue: {\n      _type: \"applications/vnd.oada.isoblue.1+json\",\n      _rev: \"0-0\",\n      \"device-index\": {\n        \"*\": {\n          _type: \"applications/vnd.oada.isoblue.device.1+json\",\n          _rev: \"0-0\",\n          \"day-index\": {\n            \"*\": {\n              _type: \"applications/vnd.oada.isoblue.day.1+json\",\n              _rev: \"0-0\",\n              \"hour-index\": {\n                \"*\": {\n                  _type: \"applications/vnd.oada.isoblue.hour.1+json\",\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nvar dayTree = {\n  bookmarks: {\n    _type: \"applications/vnd.oada.bookmarks.1+json\",\n    _rev: \"0-0\",\n    isoblue: {\n      _type: \"applications/vnd.oada.isoblue.1+json\",\n      _rev: \"0-0\",\n      \"device-index\": {\n        \"*\": {\n          _type: \"applications/vnd.oada.isoblue.device.1+json\",\n          _rev: \"0-0\",\n          \"day-index\": {\n            \"*\": {\n              _type: \"applications/vnd.oada.isoblue.day.1+json\",\n              _rev: \"0-0\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\n/* Set requests */\nfunction setRequestLastHour({ state, props }) {\n  const devices = Object.keys(\n    state.get(`oada.${props.connection_id}.bookmarks.isoblue.device-index`) ||\n    {},\n  );\n\n  var requests = []; // OADA requests\n\n  devices.forEach(device_name => {\n    var device_data =\n      state.get(\n        `oada.${\n        props.connection_id\n        }.bookmarks.isoblue.device-index.${device_name}.day-index`,\n      ) || {};\n\n    // find the most recent day\n    const date_list = Object.keys(device_data);\n    if (date_list.length == 0) {\n      return;\n    }\n    const last_date = _.maxBy(date_list, function(o) {\n      return new Date(o);\n    });\n\n    //find the most recent hour\n    const last_hour = _.max(\n      Object.keys(device_data[last_date][\"hour-index\"] || {}),\n    );\n\n    // add request\n    requests.push({\n      path: `/bookmarks/isoblue/device-index/${device_name}/day-index/${last_date}/hour-index/${last_hour}`,\n      watch: { signals: [\"snapshots.createSnapshots\"] },\n      tree: masterTree,\n    });\n  });\n\n  return { requests };\n}\n\n/* Called when the device list was modified */\nexport const handleDeviceUpdate = sequence(\"data.handleDeviceUpdate\", [\n  set(state`data.ready`, false),\n  setRequestLastHour,\n  oada.get,\n  set(state`data.ready`, true),\n]);\n\n/* Initial sequence. Only called at startup. */\nexport const init = sequence(\"data.init\", [\n  set(state`data.ready`, false),\n  set(state`health`, {}),\n  // connect to server\n  oada.connect,\n  set(state`data.connection_id`, props`connection_id`),\n\n  // get devices\n  ({ state, props }) => ({\n    requests: [\n      {\n        path: \"/bookmarks/isoblue\",\n        tree: dayTree,\n        watch: { signals: [\"data.handleDeviceUpdate\"] },\n      },\n    ],\n  }),\n  oada.get,\n\n  // get most recent data\n  setRequestLastHour,\n  oada.get,\n  set(state`data.ready`, true),\n]);\n\n/* Set request to OADA server based on currently selected device, date, and hour */\nexport const getHour = sequence(\"data.getHour\", [\n  ({ state, props }) => ({\n    requests: [\n      {\n        connection_id: state.get(\"data.connection_id\"),\n        path: `/bookmarks/isoblue/device-index/${state.get(\n          `diagnostics.selectedUnit`,\n        )}/day-index/${state.get(`diagnostics.date`)}/hour-index/${state.get(\n          `diagnostics.hour`,\n        )}`,\n        tree: masterTree,\n      },\n    ],\n  }),\n  oada.get,\n]);\n","import { sequence } from \"cerebral\";\nimport { state, props } from \"cerebral/tags\";\nimport { set, when } from \"cerebral/operators\";\nimport _ from \"lodash\";\nimport * as map from \"../map/sequences\";\nimport * as data from \"../data/sequences\";\n\nexport const setDate = sequence(\"setDate\", [\n  set(state`diagnostics.date`, props`date`),\n  ({ state, props }) =>\n    state.set(\n      \"diagnostics.hour\",\n      _.max(\n        Object.keys(\n          state.get(\n            `oada.${state.get(\n              \"data.connection_id\",\n            )}.bookmarks.isoblue.device-index.${state.get(\n              \"diagnostics.selectedUnit\",\n            )}.day-index.${state.get(\"diagnostics.date\")}.hour-index`,\n          ),\n        ),\n      ),\n    ),\n  data.getHour,\n  map.centerOnUnit,\n]);\n\nexport const setHour = sequence(\"setHour\", [\n  set(state`diagnostics.hour`, props`hour`),\n  data.getHour,\n  map.centerOnUnit,\n]);\n\nexport const setMeasurement = sequence(\"setMeasurement\", [\n  ({ state, props }) => state.set(\"diagnostics.measurement\", props.measurement),\n]);\n\n/* Set the selected unit, default date, and hour */\nexport const selectUnit = sequence(\"selectUnit\", [\n  ({ state, props }) => ({ connection_id: state.get(\"data.connection_id\") }),\n  set(state`diagnostics.selectedUnit`, props`unit`),\n\n  // set default date and hour\n  ({ state, props }) => {\n    const date = Object.keys(\n      state.get(\n        `oada.${props.connection_id}.bookmarks.isoblue.device-index.${\n        props.unit\n        }.day-index`,\n      ),\n    ).sort((a, b) => {\n      return new Date(b) - new Date(a);\n    })[0];\n\n    const hour = _.max(\n      Object.keys(\n        state.get(\n          `oada.${props.connection_id}.bookmarks.isoblue.device-index.${\n          props.unit\n          }.day-index.${date}.hour-index`,\n        ),\n      ),\n    );\n\n    state.set(\"diagnostics.date\", date);\n    state.set(\"diagnostics.hour\", hour);\n  },\n\n  // center the map\n  map.centerOnUnit,\n]);\n\nexport const unselectUnit = sequence(\"unselectUnit\", [\n  set(state`diagnostics.selectedUnit`, null),\n  set(state`diagnostics.date`, null),\n  set(state`diagnostics.hour`, null),\n]);\n\n/* Toggle map view and graph view */\nexport const toggleMode = sequence(\"toggleMode\", [\n  when(state`diagnostics.mode`, value => value === \"map\"),\n  {\n    true: [\n      set(state`diagnostics.mode`, \"graph\"),\n      set(state`diagnostics.measurement`, \"Latency\"),\n    ],\n    false: [\n      set(state`diagnostics.mode`, \"map\"),\n      set(state`diagnostics.measurement`, \"GPS\"),\n    ],\n  },\n]);\n","import { Module } from 'cerebral';\nimport * as signals from './sequences';\n\nexport default Module({\n  state: {\n    hour: null,\n    measurement: 'GPS',\n    selectedUnit: null,\n    date: null,\n    mode: \"map\",\n  },\n  signals,\n});\n","import { Module } from 'cerebral';\nimport * as signals from './sequences';\n\nexport default Module({\n\n  state: {\n    targetCenter: { lat: 40.428641, lng: -86.913783 },\n    userLocation: { lat: 40.428641, lng: -86.913783 },\n    userLocationAvailable: false,\n  },\n\n  signals,\n\n});\n","import { Module } from \"cerebral\";\nimport * as signals from \"./sequences\";\n\nexport default Module({\n  //state: stateTree,\n  //state: {},\n\n  signals,\n});\n","import { Module } from 'cerebral';\nimport * as signals from './sequences'\n\nexport default Module({\n  state: {\n  },\n  signals,\n});\n\n\n","import { sequence } from \"cerebral\";\n\nimport * as snapshots from \"../snapshots/sequences\";\nimport * as data from \"../data/sequences\";\n\nconst _DEV_DOMAIN = \"https://128.46.71.115\";\nconst _LOCALHOST_REDIRECT = \"http://localhost:8000/oauth2/redirect.html\";\n//const _OPENATK_DOMAIN = \"https://oada.openatk.com\";\nconst _OPENATK_REDIRECT = \"https://openatk.com/ISOBlueApp/oauth2/redirect.html\";\n\n/* localhost */\n//let _CURRENT_DOMAIN = _DEV_DOMAIN;\n//let _CURRENT_REDIRECT = _LOCALHOST_REDIRECT;\n\n/* OpenATK.com */\nlet _CURRENT_DOMAIN = _DEV_DOMAIN;\nlet _CURRENT_REDIRECT = _OPENATK_REDIRECT;\n\nlet _METADATA =\n  \"eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHBzOi8vb3BlbmF0ay5jb20vSVNPQmx1ZUFwcC9vYXV0aDIvcmVkaXJlY3QuaHRtbCIsImh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9vYXV0aDIvcmVkaXJlY3QuaHRtbCJdLCJ0b2tlbl9lbmRwb2ludF9hdXRoX21ldGhvZCI6InVybjppZXRmOnBhcmFtczpvYXV0aDpjbGllbnQtYXNzZXJ0aW9uLXR5cGU6and0LWJlYXJlciIsImdyYW50X3R5cGVzIjpbImF1dGhvcml6YXRpb25fY29kZSJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImNvZGUiLCJpZF90b2tlbiIsImlkX3Rva2VuIHRva2VuIiwiY29kZSBpZF90b2tlbiIsImNvZGUgdG9rZW4iLCJjb2RlIGlkX3Rva2VuIHRva2VuIl0sImNsaWVudF9uYW1lIjoiSVNPQmx1ZSBIZWFsdGggTW9uaXRvciIsImNsaWVudF91cmkiOiJodHRwOi8vb2FkYS5vcGVuYXRrLmNvbS9JU09CbHVlQXBwIiwiY29udGFjdHMiOlsiU2FtIE5vZWwgPHNhbm9lbEBwdXJkdWUuZWR1PiJdLCJqd2tzIjp7ImtleXMiOlt7Imt0eSI6IlJTQSIsIm4iOiJ6YXVaRkJ1TWRsdjFrWWp6VWI0cS1fM200c21GeG5mdzRTWW9hSHE3Y2k4U2N0WTN4ajdyZEFIeWtRcG5RVnJqNktPOG1hSHYtMEJ2VzVNaGNnaXZrdVlzLXpIRXZmWUJlVkJuY3ZIZ09rSlBiYzkxQ3dfaXdPWTdFSFdCOGhNN1ZpTFFWY19EdjBoOG5KeWJCdmhMMDRDSFF0N0NwTXRWWUc2Zm9KWGMzZHE1MmpOUWJCSElaNW03VnoxS3R5em9MY3A4TzJtaGFMcDQ1VXIzQ18xZUd0djhuNU56OWJXX0JoNVhGWWJEeHY3Qm5oWk5JdzFHQ2JqakF3bXRibm5MN0dnZjRDeTYwd1JIbVI0dm9lMjFPSWpvQVNxMmpaMDN4MTJtWHM3SFBJM1lCNHkyOXd2Wk13MmdMek9kVG9ycnFPLXRsbW4xYm9Qa1dLSkpTWG9BdnciLCJlIjoiQVFBQiJ9XX0sInNvZnR3YXJlX2lkIjoiNzY1ZjFlZjctMzExNy00NjhhLTgwYjMtMDExYzQ1MjhkMGExIiwicmVnaXN0cmF0aW9uX3Byb3ZpZGVyIjoiaHR0cHM6Ly9pZGVudGl0eS5vYWRhLWRldi5jb20iLCJpYXQiOjE1NDcxNDYxOTF9.seH7eMsR1218IgEEbiq3T5ASGQAr7vqvy54_Yu8-6TIoAoVfslG-dSYWE2dXZ_P65kElqCKZLizVxyR1732vcFnOdzp6jE_pgpLg-eWZfVnIvNQdGK8Dh-5t1gVbPs1ME-j_GMCb2Un-mpDS8LAw4Nig_r-monjKyKbcPBN6gc4\";\n\n//let _METADATA = \"eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHBzOi8vb3BlbmF0ay5jb20vVGhlUm9ja0FwcC9vYXV0aDIvcmVkaXJlY3QuaHRtbCIsImh0dHBzOi8vamFmaWVjaHQuZ2l0aHViLmlvL3JvY2thcHBfMS9vYXV0aDIvcmVkaXJlY3QuaHRtbCIsImh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9vYXV0aDIvcmVkaXJlY3QuaHRtbCJdLCJ0b2tlbl9lbmRwb2ludF9hdXRoX21ldGhvZCI6InVybjppZXRmOnBhcmFtczpvYXV0aDpjbGllbnQtYXNzZXJ0aW9uLXR5cGU6and0LWJlYXJlciIsImdyYW50X3R5cGVzIjpbImF1dGhvcml6YXRpb25fY29kZSJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImNvZGUiLCJpZF90b2tlbiIsImlkX3Rva2VuIHRva2VuIiwiY29kZSBpZF90b2tlbiIsImNvZGUgdG9rZW4iLCJjb2RlIGlkX3Rva2VuIHRva2VuIl0sImNsaWVudF9uYW1lIjoiT3BlbkFUSyIsImNsaWVudF91cmkiOiJodHRwOi8vb3BlbmF0ay5jb20iLCJjb250YWN0cyI6WyJKZWZmIEZpZWNodGVyIDxqYWZpZWNodEBwdXJkdWUuZWR1PiJdLCJqd2tzIjp7ImtleXMiOlt7Imt0eSI6IlJTQSIsIm4iOiJ6YXVaRkJ1TWRsdjFrWWp6VWI0cS1fM200c21GeG5mdzRTWW9hSHE3Y2k4U2N0WTN4ajdyZEFIeWtRcG5RVnJqNktPOG1hSHYtMEJ2VzVNaGNnaXZrdVlzLXpIRXZmWUJlVkJuY3ZIZ09rSlBiYzkxQ3dfaXdPWTdFSFdCOGhNN1ZpTFFWY19EdjBoOG5KeWJCdmhMMDRDSFF0N0NwTXRWWUc2Zm9KWGMzZHE1MmpOUWJCSElaNW03VnoxS3R5em9MY3A4TzJtaGFMcDQ1VXIzQ18xZUd0djhuNU56OWJXX0JoNVhGWWJEeHY3Qm5oWk5JdzFHQ2JqakF3bXRibm5MN0dnZjRDeTYwd1JIbVI0dm9lMjFPSWpvQVNxMmpaMDN4MTJtWHM3SFBJM1lCNHkyOXd2Wk13MmdMek9kVG9ycnFPLXRsbW4xYm9Qa1dLSkpTWG9BdnciLCJlIjoiQVFBQiJ9XX0sInNvZnR3YXJlX2lkIjoiNmExNDFjODgtMDdhZC00M2M4LWIyMjEtYTU0MDkzMGJjMzFmIiwicmVnaXN0cmF0aW9uX3Byb3ZpZGVyIjoiaHR0cHM6Ly9pZGVudGl0eS5vYWRhLWRldi5jb20iLCJpYXQiOjE1MzQyNzk0MjJ9.hf9lLNxSY75R4MOXaUjgYZaYQqNunrUQhKV068Yk2azluGpKoBnDr8Ljn1U4Cdg39LBHzwARnL97TC3drjNCqKl-WU2-DLH5xY6wLgve7iR28ZllntFf_RXmFc5vJnYf0l6MPv7ukCJz0XBrXmBu7X1siSBpg8Rz4aIqelrLM28\";\n\nexport const init = sequence(\"init\", [\n  () => ({\n    domain: _CURRENT_DOMAIN,\n    options: {\n      redirect: _CURRENT_REDIRECT,\n      metadata: _METADATA,\n      scope: \"oada.isoblue:all\",\n    },\n  }),\n  data.init,\n  snapshots.createSnapshots,\n]);\n","import { Module } from 'cerebral';\n\nimport session from '../session/';\nimport diagnostics from '../diagnostics/';\nimport map from '../map/';\nimport data from '../data/';\nimport snapshots from '../snapshots/';\nimport oadaModule from '@oada/cerebral-module'\nimport oadaProvider from '@oada/cerebral-provider'\nimport * as signals from './sequences';\n\nexport default Module({\n  modules: {\n    session,\n    oada: oadaModule,\n    diagnostics,\n    map,\n    data,\n    snapshots,\n  },\n  signals,\n  providers: {\n    oada: oadaProvider\n  }\n});\n\n","import { Controller } from \"cerebral\";\nimport root from \"./modules/root\";\nimport Devtools from \"cerebral/devtools\";\n\nexport default Controller(root, {\n  devtools:\n    process.env.NODE_ENV === \"production\"\n      ? null\n      : Devtools({ host: \"localhost:8787\" }),\n  //devtools: null,\n});\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport App from './components/App/';\n\nimport { Container } from '@cerebral/react';\nimport controller from './controller';\n\n\nconst theme = createMuiTheme({\n  pallete: {\n    primary: {\n      light: '#718792',\n      main: '#455a64',\n      dark: '#1c313a',\n      contrastText: '#ffffff',\n    },\n    secondary: {\n      light: '#896a60',\n      main: '#5b3f36',\n      dark: '#301810',\n      contrastText: '#ffffff',\n    },\n  },\n});\n\n\nrender (\n  <Container controller={controller}>\n    <MuiThemeProvider theme={theme}>\n      <App/> \n    </MuiThemeProvider>\n  </Container>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}