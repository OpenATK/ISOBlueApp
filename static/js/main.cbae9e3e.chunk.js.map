{"version":3,"sources":["components/AppBarContent/index.js","components/Visualization/Map/Lines/index.js","components/Visualization/Map/Markers/index.js","components/Visualization/Map/index.js","components/Visualization/Graph/index.js","components/Visualization/index.js","components/DrawerContent/Summary/index.js","components/DrawerContent/Diagnostics/index.js","components/DrawerContent/index.js","components/App/index.js","modules/session/sequences.js","modules/session/index.js","modules/map/sequences.js","modules/snapshots/sequences.js","modules/data/sequences.js","modules/diagnostics/sequences.js","modules/diagnostics/index.js","modules/map/index.js","modules/data/index.js","modules/snapshots/index.js","modules/root/sequences.js","modules/root/index.js","controller.js","index.js"],"names":["AppBarContent","userLocationButton","_this","this","classes","props","userLocationAvailable","react_default","a","createElement","IconButton_default","onClick","centerOnUser","MyLocation_default","className","icon","Toolbar_default","color","aria-label","toggleDrawerOpen","Menu_default","Typography_default","variant","flex","React","Component","connect","state","_templateObject","signal","_templateObject2","_templateObject3","withStyles","theme","_icon","Object","defineProperty","breakpoints","up","width","spacing","unit","height","marginRight","down","Lines","conn_id","data","connection_id","ready","devices","oada","bookmarks","isoblue","dataLines","_","forEach","unit_resource","days","selectedUnit","snapshots","health","positions","current_time_sec","Math","round","Date","getTime","date","keys","sort","b","hours","currentHour","max","lastHour","remove","n","currentGPS","gps","lastGPS","time","i","tempGPS","lat","lng","push","map","Polyline","key","uuid","v4","Lines_templateObject","Lines_templateObject2","Lines_templateObject3","_templateObject4","hour","_templateObject5","_templateObject6","withTheme","Markers","unitMarkers","CircleMarker","ref","center","fillColor","fillOpacity","radius","zIndexOffset","e","selectUnit","Tooltip","direction","offset","location","Markers_templateObject","Markers_templateObject2","Markers_templateObject3","Markers_templateObject4","Markers_templateObject5","Markers_templateObject6","refs","leafletElement","locate","currentMarker","Marker","position","userLocation","Map","dragging","targetCenter","zoom","onlocationfound","storeUserLocation","latlng","TileLayer","url","attribution","Map_Markers","Map_Lines","Map_templateObject","Map_templateObject2","Map_templateObject3","Map_templateObject4","Map_templateObject5","Map_templateObject6","display","Graph","rawData","chart","measurement","values","heartbeats","value","latency","recTime","genTime","toLocaleTimeString","minute","LineChart","margin","top","right","left","bottom","Line","type","isAnimationActive","dataKey","stroke","CartesianGrid","strokeDasharray","XAxis","YAxis","component_Tooltip","interfaces","connection","ResponsiveContainer","Graph_templateObject","Graph_templateObject2","Graph_templateObject3","Graph_templateObject4","Graph_templateObject5","Visualization","mode","Visualization_Map","Visualization_Graph","Visualization_templateObject","Summary","units","length","List_default","list","component","ListItem_default","button","concat","ListItemText_default","primary","ListItemIcon_default","Sync_default","healthy","SyncProblem_default","sick","SyncDisabled_default","align","Divider_default","Summary_templateObject","Summary_templateObject2","Summary_templateObject3","Summary_templateObject4","setDate","Summary_templateObject5","backgroundColor","palette","background","paper","overflow","textField","Diagnostics","measurements","visualizing","Button_default","toggleMode","measurementSelect","Select_default","renderValue","onChange","setMeasurement","target","MenuItem_default","dateSelect","hourSelect","setHour","lastReport","Diagnostics_templateObject","Diagnostics_templateObject2","Diagnostics_templateObject3","Diagnostics_templateObject4","Diagnostics_templateObject5","Diagnostics_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","DrawerContent","content","DrawerContent_Diagnostics","DrawerContent_Summary","Drawer_default","open","drawerOpen","onClose","drawerPaper","toolbar","DrawerContent_templateObject","DrawerContent_templateObject2","DrawerContent_templateObject3","mixins","App","init","root","AppBar_default","appBar","components_AppBarContent","components_DrawerContent","components_Visualization","App_templateObject","flexGrow","zIndex","drawer","sequence","toggle","sequences_templateObject","Module","signals","_ref","set","map_sequences_templateObject","sequences_templateObject2","debounce","continue","sequences_templateObject3","sequences_templateObject4","discard","centerOnUnit","sequences_templateObject5","_ref2","get","last","unitLocation","updateSnapshot","createSnapshots","reduce","acc","unitkey","unitData","lastDate","lastTime","lastHeartbeat","msg_gps","msg_hb","lastHeartbeatTime","snapshots_sequences_templateObject","snapshots_sequences_templateObject2","masterTree","_type","_rev","device-index","*","day-index","hour-index","dayTree","setRequestLastHour","Promise","device","deviceData","path","watch","tree","then","requests","handleDeviceUpdate","data_sequences_templateObject","data_sequences_templateObject2","data_sequences_templateObject3","data_sequences_templateObject4","getHour","_ref3","setDefaultDate","when","diagnostics_sequences_templateObject","true","false","_ref4","diagnostics_sequences_templateObject2","diagnostics_sequences_templateObject3","setDefaultHour","diagnostics_sequences_templateObject4","_ref5","_ref6","_ref7","diagnostics_sequences_templateObject5","sequences_templateObject6","sequences_templateObject7","sequences_templateObject8","sequences_templateObject9","sequences_templateObject10","sequences_templateObject11","sequences_templateObject12","_templateObject13","_templateObject14","_templateObject15","domain","options","redirect","metadata","scope","modules","session","oadaModule","diagnostics","providers","oadaProvider","Controller","devtools","createMuiTheme","pallete","light","main","dark","contrastText","secondary","render","_cerebral_react","controller","core_styles","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.cbae9e3e.chunk.js","sourcesContent":["import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\n//import TextField from '@material-ui/core/TextField';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport { connect } from '@cerebral/react';\nimport { state, signal } from 'cerebral/tags';\n\nconst styles = theme => ({\n  flex: {\n    flex: 1,\n  },\n  icon: {\n    color: '#FFFFFF',\n    [theme.breakpoints.up('xs')]: {\n      width: 5*theme.spacing.unit,\n      height: 5*theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n    },\n    [theme.breakpoints.down('xs')]: {\n      width: 4*theme.spacing.unit,\n      height: 4*theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n    },\n  },\n});\n\nclass AppBarContent extends React.Component {\n\n  render() {\n    const { classes } = this.props\n\n    var userLocationButton;\n    if (this.props.userLocationAvailable) {\n      userLocationButton = \n      <IconButton\n        onClick={() => this.props.centerOnUser({})}>\n        <MyLocationIcon className={classes.icon}/>\n      </IconButton>\n    } else {\n      userLocationButton = null;\n    }\n\n    return (\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"Open Drawer\"\n          onClick={this.props.toggleDrawerOpen}\n          >\n          <MenuIcon className={classes.icon}/>\n        </IconButton>\n        <Typography variant='title' color='inherit' className={classes.flex}>\n          ISOBlueApp [1.0.0]\n        </Typography>\n        {userLocationButton}\n      </Toolbar>\n    )\n  }\n}\n\nexport default connect({\n  userLocationAvailable: state`map.userLocationAvailable`,\n\n  centerOnUser: signal`map.centerOnUser`,  \n  toggleDrawerOpen: signal`session.toggleDrawerOpen`,\n\n  },\n  withStyles(styles)(AppBarContent)\n);\n\n\n\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { connect } from \"@cerebral/react\";\nimport { state } from \"cerebral/tags\";\nimport uuid from \"uuid\";\n//import Leaflet from 'leaflet';\nimport { Polyline } from \"react-leaflet\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({});\n\nclass Lines extends React.Component {\n  render() {\n    const conn_id = this.props.data.connection_id;\n    if (!this.props.data.ready) return null;\n    const devices =\n      this.props.oada[conn_id].bookmarks.isoblue[\"device-index\"] || {};\n    var dataLines = [];\n    _.forEach(devices, (unit_resource, unit) => {\n      const days = unit_resource[\"day-index\"];\n      // selected unit\n      if (unit === this.props.selectedUnit) {\n        /* var gps = this.props.data[this.props.selectedUnit][this.props.date][\n          this.props.hour\n        ].gps;\n        var positions = [];\n        _.forEach(gps, instance => {\n          if (instance.lat && instance.lng) {\n            positions.push([instance.lat, instance.lng]);\n          }\n        });\n        dataLines.push(positions);*/\n      }\n      // non-selected unit\n      else if (\n        this.props.snapshots[unit].health === \"Healthy\" ||\n        this.props.snapshots[unit].health === \"Sick\"\n      ) {\n        var positions = [];\n        var current_time_sec = Math.round(new Date().getTime() / 1000);\n        var date = Object.keys(days).sort((a, b) => {\n          return new Date(b) - new Date(a);\n        })[0];\n        var hours = Object.keys(days[date][\"hour-index\"]);\n        var currentHour = _.max(hours);\n        var lastHour = _.max(\n          _.remove(hours, n => {\n            return n !== currentHour;\n          }),\n        );\n\n        var currentGPS = Object.keys(\n          days[date][\"hour-index\"][currentHour].gps || {},\n        );\n        var lastGPS = lastHour\n          ? Object.keys(days[date][\"hour-index\"][lastHour].gps || {})\n          : [];\n\n        // FIXME: currentGPS and lastGPS are not guaranteed to be sorted\n\n        //Creates a polyline of last 15 mins of data from both the current and\n        //last hour of data\n        _.forEach(currentGPS, (time, i) => {\n          var tempGPS = days[date][\"hour-index\"][currentHour].gps[time];\n          if (\n            current_time_sec - time <= 15 * 60 &&\n            tempGPS.lat &&\n            tempGPS.lng\n          ) {\n            positions.push([tempGPS.lat, tempGPS.lng]);\n          }\n        });\n        _.forEach(lastGPS || [], time => {\n          var tempGPS = days[date][\"hour-index\"][lastHour].gps[time];\n          if (\n            current_time_sec - time <= 15 * 60 &&\n            tempGPS.lat &&\n            tempGPS.lng\n          ) {\n            positions.push([tempGPS.lat, tempGPS.lng]);\n          }\n        });\n\n        dataLines.push(positions);\n      }\n    });\n\n    return (\n      <div>\n        {dataLines.map(positions => (\n          <Polyline key={uuid.v4()} positions={positions} color=\"#ffffff\" />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  {\n    snapshots: state`snapshots`,\n    data: state`data`,\n    oada: state`oada`,\n    date: state`diagnostics.date`,\n    hour: state`diagnostics.hour`,\n    selectedUnit: state`diagnostics.selectedUnit`,\n  },\n  withStyles(styles, { withTheme: true })(Lines),\n);\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport { CircleMarker, Tooltip } from \"react-leaflet\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({});\n\nclass Markers extends React.Component {\n  render() {\n    const unitMarkers = [];\n    if (!this.props.selectedUnit) {\n      _.forEach(Object.keys(this.props.snapshots) || {}, unit => {\n        var tempGPS = this.props.snapshots[unit].location;\n        if (tempGPS && tempGPS.lat && tempGPS.lng) {\n          unitMarkers.push(\n            <CircleMarker\n              ref={unit => {\n                this.unit = unit;\n              }}\n              key={unit}\n              center={[\n                this.props.snapshots[unit].location.lat,\n                this.props.snapshots[unit].location.lng,\n              ]}\n              color={\"#ffffff\"}\n              fillColor={(() => {\n                switch (this.props.snapshots[unit].health) {\n                  case \"Healthy\":\n                    return \"#008000\";\n                  case \"Sick\":\n                    return \"#ffbf00\";\n                  case \"Down\":\n                    return \"#707070\";\n                  default:\n                    return \"#707070\";\n                }\n              })()}\n              fillOpacity={1}\n              radius={12}\n              zIndexOffset={1}\n              onClick={e => this.props.selectUnit({ unit: unit })}\n            >\n              <Tooltip direction=\"top\" offset={[0, -10]}>\n                <b>Unit: {unit}</b>\n                <br />\n                <center>\n                  <b>{this.props.snapshots[unit].health}</b>\n                </center>\n              </Tooltip>\n            </CircleMarker>,\n          );\n        }\n      });\n    } else {\n      let lastGPS = _.max(\n        Object.keys(\n          this.props.data[this.props.selectedUnit][this.props.date][\n            this.props.hour\n          ].gps || {},\n        ),\n      );\n      if (lastGPS) {\n        var tempGPS = this.props.data[this.props.selectedUnit][this.props.date][\n          this.props.hour\n        ].gps[lastGPS];\n        if (tempGPS.lat && tempGPS.lng) {\n          unitMarkers.push(\n            <CircleMarker\n              ref={this.props.selectedUnit}\n              key={this.props.selectedUnit}\n              center={[tempGPS.lat, tempGPS.lng]}\n              color={\"#ffffff\"}\n              fillColor={(() => {\n                switch (this.props.snapshots[this.props.selectedUnit].health) {\n                  case \"Healthy\":\n                    return \"#008000\";\n                  case \"Sick\":\n                    return \"#ffbf00\";\n                  case \"Down\":\n                    return \"#707070\";\n                  default:\n                    return \"#707070\";\n                }\n              })()}\n              fillOpacity={1}\n              radius={12}\n              zIndexOffset={-10}\n              onClick={e => this.props.selectUnit({})}\n            >\n              <Tooltip direction=\"top\" offset={[0, -10]}>\n                <b>Unit: {this.props.selectedUnit}</b>\n                <br />\n                <center>\n                  <b>{this.props.snapshots[this.props.selectedUnit].health}</b>\n                </center>\n              </Tooltip>\n            </CircleMarker>,\n          );\n        }\n      }\n    }\n\n    return <div>{unitMarkers}</div>;\n  }\n}\n\nexport default connect(\n  {\n    snapshots: state`snapshots`,\n    data: state`data`,\n    date: state`diagnostics.date`,\n    hour: state`diagnostics.hour`,\n    selectedUnit: state`diagnostics.selectedUnit`,\n\n    selectUnit: signal`diagnostics.selectUnit`,\n  },\n  withStyles(styles, { withTheme: true })(Markers),\n);\n","import React from \"react\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport { Map, Marker, TileLayer } from \"react-leaflet\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport \"./Map.css\";\nimport Lines from \"./Lines/\";\nimport Markers from \"./Markers/\";\n\nconst styles = theme => ({\n  map: {\n    position: \"relative\",\n    display: \"flex\",\n    width: \"100%\",\n    height: \"calc(100% - 56px)\",\n  },\n});\n\nconst mapTiles =\n  \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\";\nconst attrib =\n  \"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\";\n\nclass map extends React.Component {\n  componentDidMount() {\n    this.refs.map.leafletElement.locate();\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    const currentMarker = [];\n    if (this.props.userLocationAvailable) {\n      currentMarker.push(\n        <Marker\n          key={\"user\"}\n          position={[this.props.userLocation.lat, this.props.userLocation.lng]}\n        >\n          zIndexOffset={1}\n        </Marker>,\n      );\n    }\n\n    return (\n      <div className={classes.map}>\n        <Map\n          dragging={true}\n          center={[this.props.targetCenter.lat, this.props.targetCenter.lng]}\n          ref=\"map\"\n          zoom={18}\n          onlocationfound={e =>\n            this.props.storeUserLocation({\n              lat: e.latlng.lat,\n              lng: e.latlng.lng,\n            })\n          }\n        >\n          <TileLayer url={mapTiles} attribution={attrib} />\n          <Markers />\n          <Lines />\n          {currentMarker}\n        </Map>\n      </div>\n    );\n  }\n}\n\nmap.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default connect(\n  {\n    targetCenter: state`map.targetCenter`,\n    userLocation: state`map.userLocation`,\n    userLocationAvailable: state`map.userLocationAvailable`,\n    snapshots: state`snapshots`,\n\n    storeUserLocation: signal`map.storeUserLocation`,\n    selectUnit: signal`diagnostics.selectUnit`,\n  },\n  withStyles(styles, { withTheme: true })(map),\n);\n","import React from \"react\";\nimport { connect } from \"@cerebral/react\";\nimport { state } from \"cerebral/tags\";\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  ResponsiveContainer,\n  Tooltip,\n} from \"recharts\";\nimport _ from \"lodash\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({});\n\nclass Graph extends React.Component {\n  render() {\n    var rawData;\n    if (this.props.selectedUnit && this.props.date && this.props.hour) {\n      rawData = this.props.data[this.props.selectedUnit][this.props.date][\n        this.props.hour\n      ];\n    }\n\n    var data = [];\n    var chart;\n    if (this.props.measurement === \"Latency\" && rawData) {\n      _.forEach(Object.values(rawData.heartbeats || {}), value => {\n        value.latency = value.recTime - value.genTime;\n        value.time = new Date(value.genTime * 1000).toLocaleTimeString(\n          \"en-US\",\n          { hour: \"numeric\", minute: \"numeric\" },\n        );\n        data.push(value);\n      });\n\n      chart = (\n        <LineChart\n          data={data}\n          margin={{ top: 20, right: 30, left: 0, bottom: 80 }}\n        >\n          <Line\n            type=\"step\"\n            isAnimationActive={false}\n            dataKey={\"latency\"}\n            stroke=\"#8884d8\"\n          />\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n          <XAxis dataKey={\"time\"} />\n          <YAxis dataKey={\"latency\"} />\n          <Tooltip />\n        </LineChart>\n      );\n    } else if (this.props.measurement === \"Wifi RSSI\" && rawData) {\n      _.forEach(Object.values(rawData.heartbeats || {}), value => {\n        _.forEach(value.interfaces, connection => {\n          if (connection.type === \"wifi\") {\n            connection.time = new Date(value.genTime * 1000).toLocaleTimeString(\n              \"en-US\",\n              { hour: \"numeric\", minute: \"numeric\" },\n            );\n            data.push(connection);\n          }\n        });\n      });\n\n      chart = (\n        <LineChart\n          data={data}\n          margin={{ top: 20, right: 30, left: 0, bottom: 80 }}\n        >\n          <Line\n            type=\"step\"\n            isAnimationActive={false}\n            dataKey={\"rssi\"}\n            stroke=\"#8884d8\"\n          />\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n          <XAxis dataKey={\"time\"} />\n          <YAxis dataKey={\"rssi\"} />\n          <Tooltip />\n        </LineChart>\n      );\n    } else if (this.props.measurement === \"Cellular RSSI\" && rawData) {\n      _.forEach(Object.values(rawData.heartbeats || {}), value => {\n        _.forEach(value.interfaces, connection => {\n          if (connection.type === \"cellular\") {\n            connection.time = new Date(value.genTime * 1000).toLocaleTimeString(\n              \"en-US\",\n              { hour: \"numeric\", minute: \"numeric\" },\n            );\n            data.push(connection);\n          }\n        });\n      });\n\n      chart = (\n        <LineChart\n          data={data}\n          margin={{ top: 20, right: 30, left: 0, bottom: 80 }}\n        >\n          <Line\n            type=\"step\"\n            isAnimationActive={false}\n            dataKey={\"rssi\"}\n            stroke=\"#8884d8\"\n          />\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n          <XAxis dataKey={\"time\"} />\n          <YAxis dataKey={\"rssi\"} />\n          <Tooltip />\n        </LineChart>\n      );\n    } else {\n      chart = (\n        <LineChart margin={{ top: 20, right: 30, left: 0, bottom: 80 }} />\n      );\n    }\n\n    return (\n      <ResponsiveContainer width={\"100%\"} height={\"100%\"}>\n        {chart}\n      </ResponsiveContainer>\n    );\n  }\n}\n\nexport default connect(\n  {\n    date: state`diagnostics.date`,\n    hour: state`diagnostics.hour`,\n    selectedUnit: state`diagnostics.selectedUnit`,\n    measurement: state`diagnostics.measurement`,\n    data: state`data`,\n  },\n  withStyles(styles, { withTheme: true })(Graph),\n);\n","import React from \"react\";\nimport { connect } from \"@cerebral/react\";\nimport { state } from \"cerebral/tags\";\n\nimport Map from \"./Map/\";\nimport Graph from \"./Graph/\";\n\nclass Visualization extends React.Component {\n  render() {\n    var graphic;\n    if (this.props.mode === \"map\") {\n      graphic = <Map />;\n    } else {\n      graphic = <Graph />;\n    }\n\n    return graphic;\n  }\n}\n\nexport default connect(\n  {\n    mode: state`diagnostics.mode`,\n  },\n  Visualization,\n);\n","import React from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport SyncIcon from \"@material-ui/icons/Sync\";\nimport SyncProblemIcon from \"@material-ui/icons/SyncProblem\";\nimport SyncDisabledIcon from \"@material-ui/icons/SyncDisabled\";\n\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\n\nconst styles = theme => ({\n  list: {\n    width: \"90%\",\n    backgroundColor: theme.palette.background.paper,\n    //position: 'relative',\n    overflow: \"auto\",\n    height: 300,\n    margin: 1.5 * theme.spacing.unit,\n  },\n  textField: {\n    margin: 1.5 * theme.spacing.unit,\n  },\n  healthy: { color: \"#008000\" },\n  sick: { color: \"#ffbf00\" },\n  down: { color: \"#ff0000\" },\n});\n\nclass Summary extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    var units;\n    if (Object.keys(this.props.snapshots).length > 0) {\n      units = (\n        <List className={classes.list} component=\"nav\">\n          {Object.keys(this.props.snapshots).map(unit => (\n            <ListItem\n              button\n              key={`-${unit}`}\n              onClick={() => this.props.selectUnit({ unit: unit })}\n            >\n              <ListItemText primary={unit} />\n              <ListItemIcon>\n                {(() => {\n                  switch (this.props.snapshots[unit].health) {\n                    case \"Healthy\":\n                      return <SyncIcon className={classes.healthy} />;\n                    case \"Sick\":\n                      return <SyncProblemIcon className={classes.sick} />;\n                    case \"Down\":\n                      return <SyncDisabledIcon />;\n                    default:\n                      return <SyncDisabledIcon />;\n                  }\n                })()}\n              </ListItemIcon>\n            </ListItem>\n          ))}\n        </List>\n      );\n    } else {\n      units = <List className={classes.list} component=\"nav\" />;\n    }\n\n    return (\n      <List>\n        <ListItem>\n          <ListItemText align=\"center\" primary={\"My ISOBlues:\"} />\n        </ListItem>\n        {units}\n        <Divider />\n        {/*<ListItem>\n          <TextField\n            type=\"date\"\n            defaultValue={this.props.date}\n            className={classes.textField}\n            onChange={(e) => this.props.setDate({date: e.target.value})}\n          />\n        </ListItem>\n        <Divider/>*/}\n        {/*<ListItem>\n          <ListItemText\n            align=\"center\"\n            primary={\"Over the last:\"}/>\n        </ListItem>\n        <ListItem>\n          <ListItemText\n            align=\"center\">\n            <FormControl>\n            <Select \n              value={this.props.displayCutOffTime}\n              renderValue={value => `${value}`}\n              onChange={(value) => this.props.setCutOffTime({cutOffTime: value.target.value[0], displayCutOffTime: value.target.value[1]})}>\n              <MenuItem value={[1,\"1 hour\"]}>1 hour</MenuItem>\n              <MenuItem value={[8, \"8 hours\"]}>8 hours</MenuItem>\n              <MenuItem value={[24, \"24 hours\"]}>24 hours</MenuItem>\n              <MenuItem value={[168, \"1 week\"]}>1 week</MenuItem>\n              <MenuItem value={[720, \"1 month\"]}>1 month</MenuItem>\n              <MenuItem value={[4320, \"6 months\"]}>6 months</MenuItem>\n            </Select>\n            </FormControl>\n          </ListItemText>\n        </ListItem>\n        <Divider/>*/}\n        {/*<ListItem>\n          <ListItemText\n            align=\"center\"\n            primary={\"Account: Gary Grower\"}/>\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\">\n            <Button\n              variant=\"contained\">\n              Log Out\n            </Button>\n          </ListItemText>\n        </ListItem>*/}\n      </List>\n    );\n  }\n}\n\nexport default connect(\n  {\n    //displayCutOffTime: state`map.displayCutOffTime`,\n    data: state`data`,\n    snapshots: state`snapshots`,\n    date: state`session.date`,\n\n    //setCutOffTime: signal`map.setCutOffTime`,\n    selectUnit: signal`diagnostics.selectUnit`,\n    setDate: signal`session.setDate`,\n  },\n  withStyles(styles)(Summary),\n);\n\n//onChange={(value) => this.props.setCutOffTime({cutOffTime: value})}>\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\n\nconst styles = theme => ({});\n\nclass Diagnostics extends React.Component {\n  render() {\n    const visualizing = (\n      <ListItem>\n        <ListItemText align=\"center\">\n          <Button onClick={() => this.props.toggleMode({})} variant=\"contained\">\n            {this.props.mode === \"map\" ? \"Graphical Data\" : \"Map Data\"}\n          </Button>\n        </ListItemText>\n      </ListItem>\n    );\n\n    var measurements;\n    if (this.props.mode === \"map\") {\n      measurements = [\"GPS\"];\n    } else {\n      measurements = [\"Latency\", \"Wifi RSSI\", \"Cellular RSSI\"];\n    }\n    const measurementSelect = (\n      <Select\n        value={this.props.measurement}\n        renderValue={value => `${value}`}\n        onChange={value =>\n          this.props.setMeasurement({ measurement: value.target.value })\n        }\n      >\n        {measurements.map(measurement => (\n          <MenuItem key={measurement} value={measurement}>\n            {measurement}\n          </MenuItem>\n        ))}\n      </Select>\n    );\n\n    const dateSelect = (\n      <Select\n        value={this.props.date}\n        renderValue={value => `${value}`}\n        onChange={value => this.props.setDate({ date: value.target.value })}\n      >\n        {Object.keys(this.props.data[this.props.selectedUnit]).map(date => (\n          <MenuItem key={date} value={date}>\n            {date}\n          </MenuItem>\n        ))}\n        ;\n      </Select>\n    );\n\n    const hourSelect = (\n      <Select\n        value={this.props.hour}\n        renderValue={value => `${value}`}\n        onChange={value => this.props.setHour({ hour: value.target.value })}\n      >\n        {Object.keys(\n          this.props.data[this.props.selectedUnit][this.props.date],\n        ).map(hour => (\n          <MenuItem key={hour} value={hour}>\n            {hour}\n          </MenuItem>\n        ))}\n        ;\n      </Select>\n    );\n\n    return (\n      <List>\n        <ListItem>\n          <ListItemText align=\"center\" primary={\"Selected Unit:\"} />\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\" primary={this.props.selectedUnit} />\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText align=\"center\" primary=\"Live Snapshot:\" />\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\" primary={\"Quick Health:\"} />\n          <ListItemText\n            align=\"center\"\n            primary={this.props.snapshots[this.props.selectedUnit].health}\n          />\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\" primary={\"Last Report:\"} />\n          <ListItemText\n            align=\"center\"\n            primary={\n              this.props.snapshots[this.props.selectedUnit].lastReport === \"NA\"\n                ? \"NA\"\n                : this.props.snapshots[this.props.selectedUnit].lastReport +\n                  \" min\"\n            }\n          />\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText align=\"center\" primary={\"Available Data:\"} />\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\">{measurementSelect}</ListItemText>\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\">{dateSelect}</ListItemText>\n        </ListItem>\n        <ListItem>\n          <ListItemText align=\"center\">{hourSelect}</ListItemText>\n        </ListItem>\n        {visualizing}\n        <Divider />\n        <ListItem>\n          <ListItemText align=\"center\">\n            <Button\n              variant=\"contained\"\n              onClick={() => this.props.selectUnit({})}\n            >\n              Back to Main\n            </Button>\n          </ListItemText>\n        </ListItem>\n      </List>\n    );\n  }\n}\n\nexport default connect(\n  {\n    date: state`diagnostics.date`,\n    hour: state`diagnostics.hour`,\n    measurement: state`diagnostics.measurement`,\n    selectedUnit: state`diagnostics.selectedUnit`,\n    snapshots: state`snapshots`,\n    data: state`data`,\n    mode: state`diagnostics.mode`,\n\n    selectUnit: signal`diagnostics.selectUnit`,\n    setDate: signal`diagnostics.setDate`,\n    setHour: signal`diagnostics.setHour`,\n    setMeasurement: signal`diagnostics.setMeasurement`,\n    toggleMode: signal`diagnostics.toggleMode`,\n  },\n  withStyles(styles)(Diagnostics),\n);\n","import React from 'react';\nimport { connect } from '@cerebral/react';\nimport { state, signal } from 'cerebral/tags';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\n\nimport Summary from './Summary/';\nimport Diagnostics from './Diagnostics/';\n\nconst styles = theme => ({\n  drawerPaper: {\n    position: 'relative',\n    width: 240,\n    backgroundColor: '#eeeeee',\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\nclass DrawerContent extends React.Component {\n\n  render() {\n    const { classes } = this.props\n\n    var content; \n    if (this.props.selectedUnit) {\n      content = <Diagnostics/>\n    } else {\n      content = <Summary/>\n    }\n\n    return (\n      <Drawer\n        open={this.props.drawerOpen}\n        onClose={this.props.toggleDrawerOpen}\n        classes= {{\n          paper: classes.drawerPaper\n        }}>\n        <div className={classes.toolbar}/>\n        {content}\n      </Drawer>\n    );\n  }\n}\n\nexport default connect({\n  selectedUnit: state`diagnostics.selectedUnit`,\n  drawerOpen: state`session.drawerOpen`,\n\n  toggleDrawerOpen: signal`session.toggleDrawerOpen`,\n  },\n  withStyles(styles)(DrawerContent)\n);\n\n\n\n","import React from 'react';\nimport { connect } from '@cerebral/react';\nimport { signal } from 'cerebral/tags';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\n\nimport AppBarContent from '../AppBarContent/';\nimport Visualization from '../Visualization/';\nimport DrawerContent from '../DrawerContent/index.js';\n\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    height: '100vh',\n    zIndex: 1,\n    overflow: 'hidden',\n    position: 'relative',\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  content: {\n    flexGrow: 1,\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\nclass App extends React.Component {\n\n  componentWillMount() {\n    this.props.init({});\n  }\n \n  render() {\n\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position='absolute' className={classes.appBar}>\n          <AppBarContent/>\n        </AppBar>\n        <DrawerContent />\n        <main className={classes.content}>\n          <div className={classes.toolbar}/>\n          <Visualization/>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default connect (\n  {\n    init: signal`init`\n  },\n  withStyles(styles, { withTheme: true })(App)\n);\n\n","import { sequence } from \"cerebral\";\nimport { state } from \"cerebral/tags\";\nimport { toggle } from \"cerebral/operators\";\n\nexport const toggleDrawerOpen = sequence(\"toggleDrawerOpen\", [\n  toggle(state`session.drawerOpen`),\n]);\n","import { Module } from 'cerebral';\nimport * as signals from './sequences'\n\nexport default Module({\n  state: {\n    drawerOpen: true,\n  },\n  signals,\n});\n\n\n","import { sequence } from \"cerebral\";\nimport { state } from \"cerebral/tags\";\nimport { set, debounce } from \"cerebral/operators\";\nimport _ from \"lodash\";\n\nexport const storeUserLocation = sequence(\"storeUserLocation\", [\n  ({ state, props }) =>\n    state.set(\"map.userLocation\", { lat: props.lat, lng: props.lng }),\n  set(state`map.userLocationAvailable`, true),\n]);\n\nexport const centerOnUser = sequence(\"centerOnUser\", [\n  set(state`map.targetCenter`, { lat: 40.428641, lng: -86.913783 }),\n  debounce(1),\n  {\n    continue: [set(state`map.targetCenter`, state`map.userLocation`)],\n    discard: [],\n  },\n]);\n\nexport const centerOnUnit = sequence(\"centerOnUnit\", [\n  set(state`map.targetCenter`, { lat: 40.428641, lng: -86.913783 }),\n  debounce(1),\n  {\n    continue: [\n      ({ state, props }) => {\n        let unit = state.get(`diagnostics.selectedUnit`);\n        let date = state.get(`diagnostics.date`);\n        let hour = state.get(`diagnostics.hour`);\n        if (unit && date && hour) {\n          let last = _.max(\n            Object.keys(state.get(`data.${unit}.${date}.${hour}.gps`) || {}),\n          );\n          if (last) {\n            let unitLocation = state.get(\n              `data.${unit}.${date}.${hour}.gps.${last}`,\n            );\n            if (unitLocation.lat && unitLocation.lng) {\n              state.set(`map.targetCenter`, unitLocation);\n            }\n          }\n        }\n      },\n      //set(state`map.targetCenter`, state`snapshots.${state`diagnostics.selectedUnit`}.location`),\n    ],\n    discard: [],\n  },\n]);\n","import { sequence } from \"cerebral\";\nimport { state, props } from \"cerebral/tags\";\nimport { set } from \"cerebral/operators\";\nimport _ from \"lodash\";\n\nfunction getUnitStatus(state, props) { }\n\nexport const updateSnapshot = sequence(\"updateSnapshot\", [\n  //    ({ state, props }) => ({\n  //\n  //    }\n]);\n\nexport const createSnapshots = sequence(\"createSnapshots\", [\n  ({ state, props }) => ({\n    units: _.reduce(\n      Object.keys(\n        state.get(`oada.${props.connection_id}.bookmarks.isoblue.device-index`),\n      ),\n      (acc, unit, unitkey) => {\n        // iterate over all the ISOBlue units\n        var unitData = state.get(\n          `oada.${\n          props.connection_id\n          }.bookmarks.isoblue.device-index.${unit}.day-index`,\n        );\n        //var health, location, connection, lastReport;\n        var lastDate = Object.keys(unitData || {}).sort((a, b) => {\n          return new Date(b) - new Date(a);\n        })[0];\n        var lastTime = _.max(\n          Object.keys(unitData[lastDate][\"hour-index\"] || {}),\n        );\n\n        var lastGPS = _.max(\n          Object.keys(unitData[lastDate][\"hour-index\"][lastTime].gps || {}),\n        );\n        var lastHeartbeat = _.max(\n          Object.keys(\n            unitData[lastDate][\"hour-index\"][lastTime].heartbeats || {},\n          ),\n        );\n\n        // get messages\n        const msg_gps = lastGPS\n          ? unitData[lastDate][\"hour-index\"][lastTime][\"gps\"][lastGPS]\n          : null;\n        const msg_hb = lastHeartbeat\n          ? unitData[lastDate][\"hour-index\"][lastTime][\"heartbeats\"][\n          lastHeartbeat\n          ]\n          : null;\n\n        if (msg_gps && msg_hb) {\n          var lastReport = Math.round(\n            (Math.round(new Date().getTime() / 1000) -\n              _.max([lastHeartbeat, lastGPS])) /\n            60,\n          );\n          var latency = msg_hb.recTime - msg_hb.genTime;\n          var health = null;\n          if (lastReport < 2) {\n            if (latency < 20) {\n              health = \"Healthy\";\n            } else {\n              health = \"Sick\";\n            }\n          } else if (lastReport < 10) {\n            health = \"Sick\";\n          } else {\n            health = \"Down\";\n          }\n\n          var connection = null;\n\n          acc[unit] = {\n            health,\n            connection,\n            location: msg_gps,\n            lastReport,\n            lastHeartbeatTime: lastHeartbeat,\n          };\n        } else {\n          acc[unit] = {\n            health: \"Down\",\n            connection: \"NA\",\n            location: null,\n            lastReport: \"NA\",\n            lastHeartbeatTime: lastHeartbeat,\n          };\n        }\n        return acc;\n      },\n      {},\n    ),\n  }),\n  set(state`snapshots`, props`units`),\n]);\n","import { sequence } from \"cerebral\";\nimport { state, props } from \"cerebral/tags\";\nimport { set } from \"cerebral/operators\";\nimport Promise from \"bluebird\";\nimport _ from \"lodash\";\nimport oada from \"@oada/cerebral-module/sequences\";\nimport * as snapshots from \"../snapshots/sequences\";\n\nvar masterTree = {\n  bookmarks: {\n    _type: \"applications/vnd.oada.bookmarks.1+json\",\n    _rev: \"0-0\",\n    isoblue: {\n      _type: \"applications/vnd.oada.isoblue.1+json\",\n      _rev: \"0-0\",\n      \"device-index\": {\n        \"*\": {\n          _type: \"applications/vnd.oada.isoblue.device.1+json\",\n          _rev: \"0-0\",\n          \"day-index\": {\n            \"*\": {\n              _type: \"applications/vnd.oada.isoblue.day.1+json\",\n              _rev: \"0-0\",\n              \"hour-index\": {\n                \"*\": {\n                  _type: \"applications/vnd.oada.isoblue.hour.1+json\",\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nvar dayTree = {\n  bookmarks: {\n    _type: \"applications/vnd.oada.bookmarks.1+json\",\n    _rev: \"0-0\",\n    isoblue: {\n      _type: \"applications/vnd.oada.isoblue.1+json\",\n      _rev: \"0-0\",\n      \"device-index\": {\n        \"*\": {\n          _type: \"applications/vnd.oada.isoblue.device.1+json\",\n          _rev: \"0-0\",\n          \"day-index\": {\n            \"*\": {\n              _type: \"applications/vnd.oada.isoblue.day.1+json\",\n              _rev: \"0-0\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nfunction setRequestLastHour({ state, props }) {\n  return Promise.map(\n    Object.keys(\n      state.get(`oada.${props.connection_id}.bookmarks.isoblue.device-index`) ||\n      {},\n    ),\n    device => {\n      var deviceData = state.get(\n        `oada.${\n        props.connection_id\n        }.bookmarks.isoblue.device-index.${device}.day-index`,\n      );\n      var lastDate = Object.keys(deviceData || {}).sort((a, b) => {\n        return new Date(b) - new Date(a);\n      })[0];\n      let lastHour = _.max(\n        Object.keys(deviceData[lastDate][\"hour-index\"] || {}),\n      );\n      return {\n        path: `/bookmarks/isoblue/device-index/${device}/day-index/${lastDate}/hour-index/${lastHour}`,\n        watch: { signals: [\"snapshots.createSnapshots\"] },\n        tree: masterTree,\n      };\n    },\n  ).then(requests => {\n    return { requests: requests };\n  });\n}\n\nexport const handleDeviceUpdate = sequence(\"data.handleDeviceUpdate\", [\n  setRequestLastHour,\n  oada.get,\n]);\n\nexport const init = sequence(\"data.init\", [\n  set(state`data.ready`, false),\n  // connect to server\n  oada.connect,\n  set(state`data.connection_id`, props`connection_id`),\n\n  // get devices\n  ({ state, props }) => ({\n    requests: [\n      {\n        path: \"/bookmarks/isoblue\",\n        tree: dayTree,\n        watch: { signals: [\"data.handleDeviceUpdate\"] },\n      },\n    ],\n  }),\n  oada.get,\n\n  // get most recent data\n  setRequestLastHour,\n  oada.get,\n  set(state`data.ready`, true),\n]);\n\nexport const getHour = sequence(\"data.getHour\", [\n  ({ state, props }) => ({\n    requests: [\n      {\n        connection_id: state.get(\"data.connection_id\"),\n        path: `/bookmarks/isoblue/device-index/${state.get(\n          `diagnostics.selectedUnit`,\n        )}/day-index/${state.get(`diagnostics.date`)}/hour-index/${state.get(\n          `diagnostics.hour`,\n        )}`,\n        tree: masterTree,\n      },\n    ],\n  }),\n  oada.get,\n]);\n","import { sequence } from \"cerebral\";\nimport { state, props } from \"cerebral/tags\";\nimport { set, when } from \"cerebral/operators\";\nimport _ from \"lodash\";\nimport * as map from \"../map/sequences\";\nimport * as data from \"../data/sequences\";\n\nexport const setDefaultDate = sequence(\"setDefaultDate\", [\n  when(state`diagnostics.selectedUnit`),\n  {\n    true: [\n      ({ state, props }) =>\n        state.set(\n          \"diagnostics.date\",\n          Object.keys(\n            state.get(`data.${state.get(`diagnostics.selectedUnit`)}`),\n          ).sort((a, b) => {\n            return new Date(b) - new Date(a);\n          })[0],\n        ),\n    ],\n    false: [({ state, props }) => state.set(\"diagnostics.date\", null)],\n  },\n]);\n\nexport const setDate = sequence(\"setDate\", [\n  ({ state, props }) => state.set(`diagnostics.date`, props.date),\n  ({ state, props }) =>\n    state.set(\n      \"diagnostics.hour\",\n      _.max(\n        Object.keys(\n          state.get(\n            `data.${state.get(`diagnostics.selectedUnit`)}.${state.get(\n              `diagnostics.date`,\n            )}`,\n          ),\n        ),\n      ),\n    ),\n  data.getHour,\n  map.centerOnUnit,\n]);\n\nexport const setHour = sequence(\"setHour\", [\n  set(state`diagnostics.hour`, props`hour`),\n  data.getHour,\n  map.centerOnUnit,\n]);\n\nexport const setDefaultHour = sequence(\"setDefaultHour\", [\n  when(state`diagnostics.selectedUnit`),\n  {\n    true: [\n      ({ state, props }) =>\n        state.set(\n          \"diagnostics.hour\",\n          _.max(\n            Object.keys(\n              state.get(\n                `data.${state.get(`diagnostics.selectedUnit`)}.${state.get(\n                  `diagnostics.date`,\n                )}`,\n              ),\n            ),\n          ),\n        ),\n    ],\n    false: [({ state, props }) => state.set(\"diagnostics.hour\", null)],\n  },\n]);\n\nexport const setMeasurement = sequence(\"setMeasurement\", [\n  ({ state, props }) => state.set(\"diagnostics.measurement\", props.measurement),\n]);\n\nexport const selectUnit = sequence(\"selectUnit\", [\n  when(state`diagnostics.selectedUnit`),\n  {\n    true: [\n      set(state`diagnostics.selectedUnit`, null),\n      setDefaultDate,\n      setDefaultHour,\n      set(state`diagnostics.mode`, \"map\"),\n      set(state`diagnostics.measurement`, \"GPS\"),\n    ],\n    false: [\n      set(state`diagnostics.selectedUnit`, props`unit`),\n      setDefaultDate,\n      setDefaultHour,\n      map.centerOnUnit,\n    ],\n  },\n]);\n\nexport const toggleMode = sequence(\"toggleMode\", [\n  when(state`diagnostics.mode`, value => value === \"map\"),\n  {\n    true: [\n      set(state`diagnostics.mode`, \"graph\"),\n      set(state`diagnostics.measurement`, \"Latency\"),\n    ],\n    false: [\n      set(state`diagnostics.mode`, \"map\"),\n      set(state`diagnostics.measurement`, \"GPS\"),\n    ],\n  },\n]);\n","import { Module } from 'cerebral';\nimport * as signals from './sequences';\n\nexport default Module({\n  state: {\n    hour: null,\n    measurement: 'GPS',\n    selectedUnit: null,\n    date: null,\n    mode: \"map\",\n  },\n  signals,\n});\n","import { Module } from 'cerebral';\nimport * as signals from './sequences';\n\nexport default Module({\n\n  state: {\n    targetCenter: { lat: 40.428641, lng: -86.913783 },\n    userLocation: { lat: 40.428641, lng: -86.913783 },\n    userLocationAvailable: false,\n  },\n\n  signals,\n\n});\n","import { Module } from \"cerebral\";\nimport * as signals from \"./sequences\";\n\nexport default Module({\n  //state: stateTree,\n  //state: {},\n\n  signals,\n});\n","import { Module } from 'cerebral';\nimport * as signals from './sequences'\n\nexport default Module({\n  state: {\n  },\n  signals,\n});\n\n\n","import { sequence } from \"cerebral\";\n\nimport * as snapshots from \"../snapshots/sequences\";\nimport * as data from \"../data/sequences\";\n\nconst _DEV_DOMAIN = \"https://128.46.71.115\";\n//const _LOCALHOST_REDIRECT = \"http://localhost:8000/oauth2/redirect.html\";\n//const _OPENATK_DOMAIN = \"https://oada.openatk.com\";\nconst _OPENATK_REDIRECT = \"https://openatk.com/ISOBlueApp/oauth2/redirect.html\";\n\n/* localhost */\n//let _CURRENT_DOMAIN = _DEV_DOMAIN;\n//let _CURRENT_REDIRECT = _LOCALHOST_REDIRECT;\n\n/* OpenATK.com */\nlet _CURRENT_DOMAIN = _DEV_DOMAIN;\nlet _CURRENT_REDIRECT = _OPENATK_REDIRECT;\n\nlet _METADATA =\n  \"eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHBzOi8vb3BlbmF0ay5jb20vSVNPQmx1ZUFwcC9vYXV0aDIvcmVkaXJlY3QuaHRtbCIsImh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9vYXV0aDIvcmVkaXJlY3QuaHRtbCJdLCJ0b2tlbl9lbmRwb2ludF9hdXRoX21ldGhvZCI6InVybjppZXRmOnBhcmFtczpvYXV0aDpjbGllbnQtYXNzZXJ0aW9uLXR5cGU6and0LWJlYXJlciIsImdyYW50X3R5cGVzIjpbImF1dGhvcml6YXRpb25fY29kZSJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImNvZGUiLCJpZF90b2tlbiIsImlkX3Rva2VuIHRva2VuIiwiY29kZSBpZF90b2tlbiIsImNvZGUgdG9rZW4iLCJjb2RlIGlkX3Rva2VuIHRva2VuIl0sImNsaWVudF9uYW1lIjoiSVNPQmx1ZSBIZWFsdGggTW9uaXRvciIsImNsaWVudF91cmkiOiJodHRwOi8vb2FkYS5vcGVuYXRrLmNvbS9JU09CbHVlQXBwIiwiY29udGFjdHMiOlsiU2FtIE5vZWwgPHNhbm9lbEBwdXJkdWUuZWR1PiJdLCJqd2tzIjp7ImtleXMiOlt7Imt0eSI6IlJTQSIsIm4iOiJ6YXVaRkJ1TWRsdjFrWWp6VWI0cS1fM200c21GeG5mdzRTWW9hSHE3Y2k4U2N0WTN4ajdyZEFIeWtRcG5RVnJqNktPOG1hSHYtMEJ2VzVNaGNnaXZrdVlzLXpIRXZmWUJlVkJuY3ZIZ09rSlBiYzkxQ3dfaXdPWTdFSFdCOGhNN1ZpTFFWY19EdjBoOG5KeWJCdmhMMDRDSFF0N0NwTXRWWUc2Zm9KWGMzZHE1MmpOUWJCSElaNW03VnoxS3R5em9MY3A4TzJtaGFMcDQ1VXIzQ18xZUd0djhuNU56OWJXX0JoNVhGWWJEeHY3Qm5oWk5JdzFHQ2JqakF3bXRibm5MN0dnZjRDeTYwd1JIbVI0dm9lMjFPSWpvQVNxMmpaMDN4MTJtWHM3SFBJM1lCNHkyOXd2Wk13MmdMek9kVG9ycnFPLXRsbW4xYm9Qa1dLSkpTWG9BdnciLCJlIjoiQVFBQiJ9XX0sInNvZnR3YXJlX2lkIjoiNzY1ZjFlZjctMzExNy00NjhhLTgwYjMtMDExYzQ1MjhkMGExIiwicmVnaXN0cmF0aW9uX3Byb3ZpZGVyIjoiaHR0cHM6Ly9pZGVudGl0eS5vYWRhLWRldi5jb20iLCJpYXQiOjE1NDcxNDYxOTF9.seH7eMsR1218IgEEbiq3T5ASGQAr7vqvy54_Yu8-6TIoAoVfslG-dSYWE2dXZ_P65kElqCKZLizVxyR1732vcFnOdzp6jE_pgpLg-eWZfVnIvNQdGK8Dh-5t1gVbPs1ME-j_GMCb2Un-mpDS8LAw4Nig_r-monjKyKbcPBN6gc4\";\n\n//let _METADATA = \"eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHBzOi8vb3BlbmF0ay5jb20vVGhlUm9ja0FwcC9vYXV0aDIvcmVkaXJlY3QuaHRtbCIsImh0dHBzOi8vamFmaWVjaHQuZ2l0aHViLmlvL3JvY2thcHBfMS9vYXV0aDIvcmVkaXJlY3QuaHRtbCIsImh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9vYXV0aDIvcmVkaXJlY3QuaHRtbCJdLCJ0b2tlbl9lbmRwb2ludF9hdXRoX21ldGhvZCI6InVybjppZXRmOnBhcmFtczpvYXV0aDpjbGllbnQtYXNzZXJ0aW9uLXR5cGU6and0LWJlYXJlciIsImdyYW50X3R5cGVzIjpbImF1dGhvcml6YXRpb25fY29kZSJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImNvZGUiLCJpZF90b2tlbiIsImlkX3Rva2VuIHRva2VuIiwiY29kZSBpZF90b2tlbiIsImNvZGUgdG9rZW4iLCJjb2RlIGlkX3Rva2VuIHRva2VuIl0sImNsaWVudF9uYW1lIjoiT3BlbkFUSyIsImNsaWVudF91cmkiOiJodHRwOi8vb3BlbmF0ay5jb20iLCJjb250YWN0cyI6WyJKZWZmIEZpZWNodGVyIDxqYWZpZWNodEBwdXJkdWUuZWR1PiJdLCJqd2tzIjp7ImtleXMiOlt7Imt0eSI6IlJTQSIsIm4iOiJ6YXVaRkJ1TWRsdjFrWWp6VWI0cS1fM200c21GeG5mdzRTWW9hSHE3Y2k4U2N0WTN4ajdyZEFIeWtRcG5RVnJqNktPOG1hSHYtMEJ2VzVNaGNnaXZrdVlzLXpIRXZmWUJlVkJuY3ZIZ09rSlBiYzkxQ3dfaXdPWTdFSFdCOGhNN1ZpTFFWY19EdjBoOG5KeWJCdmhMMDRDSFF0N0NwTXRWWUc2Zm9KWGMzZHE1MmpOUWJCSElaNW03VnoxS3R5em9MY3A4TzJtaGFMcDQ1VXIzQ18xZUd0djhuNU56OWJXX0JoNVhGWWJEeHY3Qm5oWk5JdzFHQ2JqakF3bXRibm5MN0dnZjRDeTYwd1JIbVI0dm9lMjFPSWpvQVNxMmpaMDN4MTJtWHM3SFBJM1lCNHkyOXd2Wk13MmdMek9kVG9ycnFPLXRsbW4xYm9Qa1dLSkpTWG9BdnciLCJlIjoiQVFBQiJ9XX0sInNvZnR3YXJlX2lkIjoiNmExNDFjODgtMDdhZC00M2M4LWIyMjEtYTU0MDkzMGJjMzFmIiwicmVnaXN0cmF0aW9uX3Byb3ZpZGVyIjoiaHR0cHM6Ly9pZGVudGl0eS5vYWRhLWRldi5jb20iLCJpYXQiOjE1MzQyNzk0MjJ9.hf9lLNxSY75R4MOXaUjgYZaYQqNunrUQhKV068Yk2azluGpKoBnDr8Ljn1U4Cdg39LBHzwARnL97TC3drjNCqKl-WU2-DLH5xY6wLgve7iR28ZllntFf_RXmFc5vJnYf0l6MPv7ukCJz0XBrXmBu7X1siSBpg8Rz4aIqelrLM28\";\n\nexport const init = sequence(\"init\", [\n  () => ({\n    domain: _CURRENT_DOMAIN,\n    options: {\n      redirect: _CURRENT_REDIRECT,\n      metadata: _METADATA,\n      scope: \"oada.isoblue:all\",\n    },\n  }),\n  data.init,\n  snapshots.createSnapshots,\n]);\n","import { Module } from 'cerebral';\n\nimport session from '../session/';\nimport diagnostics from '../diagnostics/';\nimport map from '../map/';\nimport data from '../data/';\nimport snapshots from '../snapshots/';\nimport oadaModule from '@oada/cerebral-module'\nimport oadaProvider from '@oada/cerebral-provider'\nimport * as signals from './sequences';\n\nexport default Module({\n  modules: {\n    session,\n    oada: oadaModule,\n    diagnostics,\n    map,\n    data,\n    snapshots,\n  },\n  signals,\n  providers: {\n    oada: oadaProvider\n  }\n});\n\n","import { Controller } from \"cerebral\";\nimport root from \"./modules/root\";\nimport Devtools from \"cerebral/devtools\";\n\nexport default Controller(root, {\n  devtools:\n    process.env.NODE_ENV === \"production\"\n      ? null\n      : Devtools({ host: \"localhost:8787\" }),\n  //devtools: null,\n});\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport App from './components/App/';\n\nimport { Container } from '@cerebral/react';\nimport controller from './controller';\n\n\nconst theme = createMuiTheme({\n  pallete: {\n    primary: {\n      light: '#718792',\n      main: '#455a64',\n      dark: '#1c313a',\n      contrastText: '#ffffff',\n    },\n    secondary: {\n      light: '#896a60',\n      main: '#5b3f36',\n      dark: '#301810',\n      contrastText: '#ffffff',\n    },\n  },\n});\n\n\nrender (\n  <Container controller={controller}>\n    <MuiThemeProvider theme={theme}>\n      <App/> \n    </MuiThemeProvider>\n  </Container>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}