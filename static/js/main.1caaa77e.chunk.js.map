{"version":3,"sources":["components/AppBar.jsx","components/Drawer.jsx","components/Map.jsx","components/App.jsx","app/oadatrees.js","app/actions.js","app/sequences.js","app/state.js","app/index.js","serviceWorker.js","index.js"],"names":["Component","classes","this","props","Toolbar","IconButton","color","aria-label","onClick","toggleDrawer","className","icon","Typography","variant","flex","connectopmStatusIndicator","connection_id","React","connect","sequences","state","withStyles","theme","marginLeft","deviceDetails","selectedDevice","device","day","hour","days","Object","keys","oada","connection","bookmarks","isoblue","hours","daySelector","Select","value","renderValue","onChange","selectDay","target","map","date","MenuItem","key","tzOffsetMinutes","Date","getTimezoneOffset","genTimeLabel","hhmm","split","localMinutes","parseInt","msg","localMM","Math","floor","toString","padStart","hourSelector","selectHour","List","Divider","ListItem","ListItemText","align","primary","Button","unselectDevice","Drawer","open","drawer","onClose","paper","drawerPaper","toolbar","list","component","devices","button","selectDevice","ListItemIcon","ListItemSecondaryAction","Switch","edge","toggleDeviceSync","checked","sync","inputProps","position","width","backgroundColor","mixins","withTheme","DefaultIcon","L","iconUrl","shadowUrl","iconShadow","Marker","prototype","options","MapComponent","markers","forEach","location","lat","lng","push","CircleMarker","ref","center","fillColor","fillOpacity","radius","zIndexOffset","Tooltip","direction","offset","permanent","pts","data","time","console","log","Map","mapCenter","zoom","style","height","TileLayer","attribution","url","Polyline","positions","values","display","AppComponent","root","AppBar","appBar","content","App","flexGrow","zIndex","overflow","masterTree","_type","_rev","hourTree","dayTree","deviceTree","setDayListRequest","get","requests","path","tree","oadatrees","watch","signals","payload","setHourListRequest","setLocationDataRequest","getMostRecentDay","Error","day_index","date_list","length","_","maxBy","o","getMostRecentHour","hour_index","max","getMostRecentLocation","hour_dataset","latest_data_point","reduce","latest","data_point","updateDeviceListState","device_state","device_name","watchPath","initialize","domain","token","cache","set","actions","handleNewDevice","handleDeviceLocationUpdate","handleDayUpdate","toggle","when","true","false","components","app","on","getSequence","modules","oadaModule","providers","oadaProvider","devtools","DevTools","host","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1caaa77e.chunk.js","sourcesContent":["import React from \"react\";\nimport { state, sequences } from \"cerebral\";\nimport { connect } from \"@cerebral/react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Toolbar, Typography, IconButton, Grid } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SyncIcon from \"@material-ui/icons/Sync\";\n\nconst styles = theme => ({\n  flex: {\n    flex: 1,\n  },\n  connectopmStatusIndicator: {\n    marginLeft: \"auto\",\n  },\n});\n\nclass Component extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"Open Drawer\"\n          onClick={() => this.props.toggleDrawer()}\n        >\n          <MenuIcon className={classes.icon} />\n        </IconButton>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n          ISOBlueApp [2.0.0]\n        </Typography>\n        <div className={classes.connectopmStatusIndicator}>\n          <Typography variant=\"h6\" color=\"inherit\">\n            {this.props.connection_id ? \"Connected\" : \"Not Connected\"}\n          </Typography>\n        </div>\n      </Toolbar>\n    );\n  }\n}\n\nexport default connect(\n  {\n    toggleDrawer: sequences`toggleDrawer`,\n    connection_id: state`connection.connection_id`,\n  },\n  withStyles(styles)(Component),\n);\n","import React from \"react\";\nimport { state, sequences } from \"cerebral\";\nimport { connect } from \"@cerebral/react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  Toolbar,\n  Typography,\n  Drawer,\n  Divider,\n  Switch,\n  Select,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  MenuItem,\n  Button,\n} from \"@material-ui/core\";\nimport RouterIcon from \"@material-ui/icons/Router\";\n\nconst styles = theme => ({\n  drawerPaper: {\n    position: \"relative\",\n    width: 240,\n    backgroundColor: \"#eeeeee\",\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\nclass Component extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    let deviceDetails = <div />;\n    const selectedDevice = this.props.selectedDevice;\n    if (selectedDevice.device && selectedDevice.day && selectedDevice.hour) {\n      const days = Object.keys(\n        this.props.oada[this.props.connection.connection_id].bookmarks.isoblue[\n          \"device-index\"\n        ][selectedDevice.device][\"location\"][\"day-index\"] || {},\n      );\n      const hours = Object.keys(\n        this.props.oada[this.props.connection.connection_id].bookmarks.isoblue[\n          \"device-index\"\n        ][selectedDevice.device][\"location\"][\"day-index\"][selectedDevice.day][\n          \"hour-index\"\n        ] || {},\n      );\n      const daySelector = (\n        <Select\n          value={selectedDevice.day}\n          renderValue={value => `${value}`}\n          onChange={value => this.props.selectDay({ day: value.target.value })}\n        >\n          {days.map(date => (\n            <MenuItem key={date} value={date}>\n              {date}\n            </MenuItem>\n          ))}\n          ;\n        </Select>\n      );\n\n      // Get timezone offset\n      const tzOffsetMinutes = new Date().getTimezoneOffset();\n      const genTimeLabel = hour => {\n        // UTC -> Local time zone conversion\n        // Assume hour has format hh:mm\n        const hhmm = hour.split(\":\");\n        const utcMinutes = hhmm[1]\n          ? 60 * parseInt(hhmm[0]) + parseInt(hhmm[1])\n          : 60 * parseInt(hour);\n        var localMinutes = utcMinutes - tzOffsetMinutes;\n        var msg = \"\";\n        if (localMinutes < 0) {\n          localMinutes += 1440;\n          msg = \" (-1 day)\";\n        } else if (localMinutes > 1440) {\n          localMinutes -= 1440;\n          msg = \" (+1 day)\";\n        }\n        const localHH = Math.floor(localMinutes / 60);\n        const localMM = localMinutes % 60;\n        return (\n          localHH.toString().padStart(2, \"0\") +\n          \":\" +\n          localMM.toString().padStart(2, \"0\") +\n          msg\n        );\n      };\n\n      const hourSelector = (\n        <Select\n          value={selectedDevice.hour}\n          renderValue={value => `${genTimeLabel(value)}`}\n          onChange={value =>\n            this.props.selectHour({ hour: value.target.value })\n          }\n        >\n          {hours.map(hour => {\n            return (\n              <MenuItem key={hour} value={hour}>\n                {genTimeLabel(hour)}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      );\n\n      deviceDetails = (\n        <List>\n          <Divider />\n          <ListItem>\n            <ListItemText\n              align=\"center\"\n              primary={`Device: ${selectedDevice.device}`}\n            />\n          </ListItem>\n          <ListItem>\n            <ListItemText align=\"center\">{daySelector}</ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemText align=\"center\">{hourSelector}</ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemText align=\"center\">\n              <Button\n                variant=\"contained\"\n                onClick={() => this.props.unselectDevice({})}\n              >\n                Unselect Device\n              </Button>\n            </ListItemText>\n          </ListItem>\n        </List>\n      );\n    }\n\n    return (\n      <Drawer\n        open={this.props.drawer}\n        onClose={() => this.props.toggleDrawer()}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.toolbar} />\n        <List>\n          <ListItem>\n            <ListItemText align=\"center\" primary={\"Available Devices\"} />\n          </ListItem>\n\n          <List className={classes.list} component=\"nav\">\n            {Object.keys(this.props.devices || {}).map(device => (\n              <ListItem\n                button\n                key={`-${device}`}\n                onClick={() => this.props.selectDevice({ device })}\n              >\n                <ListItemIcon>\n                  <RouterIcon />\n                </ListItemIcon>\n                <ListItemText primary={device} />\n                <ListItemSecondaryAction>\n                  <Switch\n                    edge=\"end\"\n                    onChange={() => this.props.toggleDeviceSync({ device })}\n                    checked={this.props.devices[device].sync}\n                    inputProps={{ \"aria-labelledby\": \"switch-list-label-wifi\" }}\n                  />\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </List>\n\n          {deviceDetails}\n        </List>\n      </Drawer>\n    );\n  }\n}\n\nexport default connect(\n  {\n    drawer: state`components.drawer`,\n    toggleDrawer: sequences`toggleDrawer`,\n    devices: state`devices`,\n    selectedDevice: state`selectedDevice`,\n    selectDevice: sequences`selectDevice`,\n    selectHour: sequences`selectHour`,\n    selectDay: sequences`selectDay`,\n    unselectDevice: sequences`unselectDevice`,\n    toggleDeviceSync: sequences`toggleDeviceSync`,\n    connection: state`connection`,\n    oada: state`oada`,\n  },\n  withStyles(styles, { withTheme: true })(Component),\n);\n","import React from \"react\";\nimport { state, sequences } from \"cerebral\";\nimport { connect } from \"@cerebral/react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport {\n  Map,\n  TileLayer,\n  Marker,\n  Popup,\n  CircleMarker,\n  Tooltip,\n  Polyline,\n} from \"react-leaflet\";\nimport icon from \"leaflet/dist/images/marker-icon.png\";\nimport iconShadow from \"leaflet/dist/images/marker-shadow.png\";\n\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow,\n});\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\nconst styles = theme => ({\n  map: {\n    position: \"relative\",\n    display: \"flex\",\n    width: \"100%\",\n    height: \"calc(100% - 56px)\",\n  },\n});\n\nclass MapComponent extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    // Device Markers\n    let markers = [];\n    Object.keys(this.props.devices || {}).forEach(device => {\n      if (\n        this.props.devices[device].sync &&\n        this.props.devices[device].location.lat &&\n        this.props.devices[device].location.lng\n      ) {\n        markers.push(\n          <CircleMarker\n            ref={device => {\n              this.device = device;\n            }}\n            key={device}\n            center={[\n              this.props.devices[device].location.lat,\n              this.props.devices[device].location.lng,\n            ]}\n            color={\"#ffffff\"}\n            fillColor={\"#008000\"}\n            fillOpacity={1}\n            radius={12}\n            zIndexOffset={1}\n          >\n            <Tooltip direction=\"top\" offset={[0, -10]} permanent={true}>\n              <b>{device}</b>\n            </Tooltip>\n          </CircleMarker>,\n        );\n      }\n    });\n\n    // Track Line\n    const selectedDevice = this.props.selectedDevice;\n    let pts = {};\n    if (selectedDevice.device && selectedDevice.day && selectedDevice.hour) {\n      try {\n        const data =\n          this.props.oada[this.props.connection.connection_id].bookmarks\n            .isoblue[\"device-index\"][selectedDevice.device][\"location\"][\n            \"day-index\"\n          ][selectedDevice.day][\"hour-index\"][selectedDevice.hour][\n            \"sec-index\"\n          ] || {};\n        Object.keys(data).forEach(key => {\n          pts[data[key].time] = [data[key].lat, data[key].lng];\n        });\n      } catch {\n        console.log(\"failed to get location points.\");\n      }\n    }\n\n    return (\n      <div className={classes.map}>\n        <Map\n          center={[this.props.mapCenter.lat, this.props.mapCenter.lng]}\n          zoom={13}\n          style={{ height: \"100%\", width: \"100%\", position: \"relative\" }}\n        >\n          <TileLayer\n            attribution=\"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\"\n            url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n          />\n          {markers}\n\n          <div>\n            <Polyline\n              key={\"trackline\"}\n              positions={Object.values(pts) || []}\n              color=\"#ffffff\"\n            />\n          </div>\n        </Map>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  {\n    mapCenter: state`mapCenter`,\n    devices: state`devices`,\n    connection: state`connection`,\n    oada: state`oada`,\n    selectedDevice: state`selectedDevice`,\n  },\n  withStyles(styles, { withTheme: true })(MapComponent),\n);\n","import React from \"react\";\nimport { state, sequences } from \"cerebral\";\nimport { connect } from \"@cerebral/react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Typography } from \"@material-ui/core\";\n\n// Components\nimport AppBarComponent from \"./AppBar\";\nimport DrawerComponent from \"./Drawer\";\nimport Map from \"./Map\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    height: \"100vh\",\n    zIndex: 1,\n    overflow: \"hidden\",\n    position: \"relative\",\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  content: {\n    flexGrow: 1,\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\nclass AppComponent extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"absolute\" className={classes.appBar}>\n          <AppBarComponent />\n        </AppBar>\n        <DrawerComponent />\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Map />\n        </main>\n      </div>\n    );\n  }\n}\n\nconst App = connect(\n  {},\n  withStyles(styles, { withTheme: true })(AppComponent),\n);\n\nexport default App;\n","export const masterTree = {\n  bookmarks: {\n    _type: \"application/vnd.oada.bookmarks.1+json\",\n    _rev: 0,\n    isoblue: {\n      _type: \"application/vnd.oada.isoblue.1+json\",\n      _rev: 0,\n      \"device-index\": {\n        \"*\": {\n          _type: \"application/vnd.oada.isoblue.device.1+json\",\n          _rev: 0,\n          \"*\": {\n            _type: \"application/vnd.oada.isoblue.dataset.1+json\",\n            _rev: 0,\n            \"day-index\": {\n              \"*\": {\n                _type: \"application/vnd.oada.isoblue.day.1+json\",\n                _rev: 0,\n                \"hour-index\": {\n                  \"*\": {\n                    _type: \"application/vnd.oada.isoblue.hour.1+json\",\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const hourTree = {\n  bookmarks: {\n    _type: \"applications/vnd.oada.bookmarks.1+json\",\n    _rev: 0,\n    isoblue: {\n      _type: \"applications/vnd.oada.isoblue.1+json\",\n      _rev: 0,\n      \"device-index\": {\n        \"*\": {\n          _type: \"applications/vnd.oada.isoblue.device.1+json\",\n          _rev: 0,\n          \"*\": {\n            _type: \"application/vnd.oada.isoblue.dataset.1+json\",\n            _rev: 0,\n            \"day-index\": {\n              \"*\": {\n                _type: \"applications/vnd.oada.isoblue.day.1+json\",\n                _rev: 0,\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const dayTree = {\n  bookmarks: {\n    _type: \"applications/vnd.oada.bookmarks.1+json\",\n    _rev: 0,\n    isoblue: {\n      _type: \"applications/vnd.oada.isoblue.1+json\",\n      _rev: 0,\n      \"device-index\": {\n        \"*\": {\n          _type: \"applications/vnd.oada.isoblue.device.1+json\",\n          _rev: 0,\n          \"*\": {\n            _type: \"application/vnd.oada.isoblue.dataset.1+json\",\n            _rev: 0,\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const deviceTree = {\n  bookmarks: {\n    _type: \"applications/vnd.oada.bookmarks.1+json\",\n    _rev: 0,\n    isoblue: {\n      _type: \"applications/vnd.oada.isoblue.1+json\",\n      _rev: 0,\n      \"device-index\": {},\n    },\n  },\n};\n","import { state, props, sequences } from \"cerebral\";\nimport { set, when, toggle, unset } from \"cerebral/factories\";\nimport _ from \"lodash\";\nimport * as oadatrees from \"./oadatrees\";\n\nexport const initialize = () => {};\n\nexport const setConnectionArgs = () => {\n  return { domain: \"https://128.46.71.115\", token: \"abc\", cache: false };\n};\n\nexport const setDeviceListRequest = ({ get }) => {\n  return {\n    requests: [\n      {\n        path: \"/bookmarks/isoblue\",\n        tree: oadatrees.deviceTree,\n        watch: { signals: [\"handleNewDevice\"] },\n      },\n    ],\n  };\n};\n\nexport const setDayListRequest = ({ get }) => {\n  const device = get(props`device`);\n\n  return {\n    requests: [\n      {\n        path: `/bookmarks/isoblue/device-index/${device}/location`,\n        tree: oadatrees.dayTree,\n        watch: { signals: [\"handleDayUpdate\"], payload: { device } },\n      },\n    ],\n  };\n};\n\nexport const setHourListRequest = ({ get }) => {\n  const device = get(props`device`);\n  const day = get(props`day`);\n\n  return {\n    requests: [\n      {\n        path: `/bookmarks/isoblue/device-index/${device}/location/day-index/${day}`,\n        tree: oadatrees.hourTree,\n        //watch: { signals: [\"handleHourUpdate\"], payload: { device } },\n      },\n    ],\n  };\n};\n\nexport const setLocationDataRequest = ({ get }) => {\n  const device = get(props`device`);\n  const day = get(props`day`);\n  const hour = get(props`hour`);\n\n  return {\n    requests: [\n      {\n        path: `/bookmarks/isoblue/device-index/${device}/location/day-index/${day}/hour-index/${hour}`,\n        tree: oadatrees.masterTree,\n        watch: { signals: [\"handleDeviceLocationUpdate\"], payload: { device } },\n      },\n    ],\n  };\n};\n\nexport const getMostRecentDay = ({ get }) => {\n  const device = get(props`device`);\n  const connection_id = get(state`connection.connection_id`);\n  if (!device || !connection_id) {\n    throw new Error(\"Missing parameters\");\n  }\n\n  const day_index = get(\n    state`oada.${connection_id}.bookmarks.isoblue.device-index.${device}.location.day-index`,\n  );\n\n  // find the most recent day\n  const date_list = Object.keys(day_index);\n  if (date_list.length === 0) {\n    return {};\n  }\n  const last_date = _.maxBy(date_list, function(o) {\n    return new Date(o);\n  });\n  return { day: last_date };\n};\n\nexport const getMostRecentHour = ({ get }) => {\n  const device = get(props`device`);\n  const connection_id = get(state`connection.connection_id`);\n  const day = get(props`day`);\n  if (!device || !connection_id || !day) {\n    throw new Error(\"Missing parameters\");\n  }\n\n  const hour_index = get(\n    state`oada.${connection_id}.bookmarks.isoblue.device-index.${device}.location.day-index.${day}.hour-index`,\n  );\n\n  // find the most recent hour\n  const hour_list = Object.keys(hour_index);\n  if (hour_list.length === 0) {\n    return {};\n  }\n  const last_hour = _.max(Object.keys(hour_index || {}));\n  return { hour: last_hour };\n};\n\nexport const getMostRecentLocation = ({ get }) => {\n  const device = get(props`device`);\n  const connection_id = get(state`connection.connection_id`);\n  const day = get(props`day`);\n  const hour = get(props`hour`);\n  if (!device || !connection_id || !day || !hour) {\n    throw new Error(\"Missing parameters\");\n  }\n  const hour_dataset = get(\n    state`oada.${connection_id}.bookmarks.isoblue.device-index.${device}.location.day-index.${day}.hour-index.${hour}.sec-index`,\n  );\n\n  const latest_data_point = Object.values(hour_dataset || {}).reduce(\n    (latest, data_point) => {\n      return latest.time > data_point.time ? latest : data_point;\n    },\n    { time: 0, lat: 0, lng: 0 },\n  );\n\n  return { latest_data_point };\n};\n\nexport const updateDeviceListState = ({ get }) => {\n  const connection_id = get(state`connection.connection_id`);\n  const devices =\n    get(state`oada.${connection_id}.bookmarks.isoblue.device-index`) || {};\n  if (!connection_id) {\n    throw new Error(\"Missing parameters\");\n  }\n\n  let device_state = get(state`devices`);\n\n  for (const device_name in devices) {\n    if (!(device_name in device_state)) {\n      device_state[device_name] = {\n        sync: false,\n        watchPath: null,\n        location: { lat: null, lng: null },\n      };\n    }\n  }\n\n  return { devices: device_state };\n};\n","import { state, props } from \"cerebral\";\nimport { set, when, toggle, unset } from \"cerebral/factories\";\nimport oada from \"@oada/cerebral-module/sequences\";\nimport * as actions from \"./actions\";\nimport * as oadatrees from \"./oadatrees\";\n\nexport const initialize = actions.initialize;\n\nexport var connect = [\n  actions.setConnectionArgs,\n  oada.connect,\n  set(state`connection.connection_id`, props`connection_id`),\n\n  actions.setDeviceListRequest,\n  oada.get,\n  actions.updateDeviceListState,\n  set(state`devices`, props`devices`),\n];\n\nexport const handleNewDevice = [\n  actions.updateDeviceListState,\n  set(state`devices`, props`devices`),\n];\n\nexport const handleDeviceLocationUpdate = [\n  actions.getMostRecentDay,\n  actions.getMostRecentHour,\n  actions.getMostRecentLocation,\n  set(\n    state`devices.${props`device`}.location.lng`,\n    props`latest_data_point.lng`,\n  ),\n  set(\n    state`devices.${props`device`}.location.lat`,\n    props`latest_data_point.lat`,\n  ),\n];\n\nexport const handleDayUpdate = [\n  set(props`connection_id`, state`connection.connection_id`),\n  actions.getMostRecentDay,\n\n  actions.setHourListRequest,\n  oada.get,\n  actions.getMostRecentHour,\n\n  actions.setLocationDataRequest,\n  oada.get,\n  actions.getMostRecentLocation,\n  set(\n    state`devices.${props`device`}.location.lng`,\n    props`latest_data_point.lng`,\n  ),\n  set(\n    state`devices.${props`device`}.location.lat`,\n    props`latest_data_point.lat`,\n  ),\n];\n\nexport const toggleDrawer = toggle(state`components.drawer`);\n\nexport const selectDevice = [\n  set(props`connection_id`, state`connection.connection_id`),\n\n  actions.setDayListRequest,\n  oada.get,\n  actions.getMostRecentDay,\n\n  actions.setHourListRequest,\n  oada.get,\n  actions.getMostRecentHour,\n\n  actions.setLocationDataRequest,\n  oada.get,\n  actions.getMostRecentLocation,\n  set(\n    state`devices.${props`device`}.location.lng`,\n    props`latest_data_point.lng`,\n  ),\n  set(\n    state`devices.${props`device`}.location.lat`,\n    props`latest_data_point.lat`,\n  ),\n  set(state`devices.${props`device`}.sync`, true),\n  set(state`mapCenter.lat`, props`latest_data_point.lat`),\n  set(state`mapCenter.lng`, props`latest_data_point.lng`),\n  set(state`selectedDevice.device`, props`device`),\n  set(state`selectedDevice.day`, props`day`),\n  set(state`selectedDevice.hour`, props`hour`),\n];\n\nexport const unselectDevice = [\n  set(state`selectedDevice.device`, null),\n  set(state`selectedDevice.day`, null),\n  set(state`selectedDevice.hour`, null),\n];\n\nexport const selectDay = [\n  set(props`connection_id`, state`connection.connection_id`),\n  set(props`device`, state`selectedDevice.device`),\n  set(state`selectedDevice.day`, props`day`),\n  actions.setHourListRequest,\n  oada.get,\n];\nexport const selectHour = [\n  set(props`connection_id`, state`connection.connection_id`),\n  set(props`device`, state`selectedDevice.device`),\n  set(props`day`, state`selectedDevice.day`),\n  set(state`selectedDevice.hour`, props`hour`),\n  actions.setLocationDataRequest,\n  oada.get,\n];\n\nexport const toggleDeviceSync = [\n  when(state`devices.${props`device`}.sync`),\n  {\n    true: [set(state`devices.${props`device`}.sync`, false)],\n    false: [\n      set(props`connection_id`, state`connection.connection_id`),\n\n      actions.setDayListRequest,\n      oada.get,\n      actions.getMostRecentDay,\n\n      actions.setHourListRequest,\n      oada.get,\n      actions.getMostRecentHour,\n\n      actions.setLocationDataRequest,\n      oada.get,\n      actions.getMostRecentLocation,\n      set(\n        state`devices.${props`device`}.location.lng`,\n        props`latest_data_point.lng`,\n      ),\n      set(\n        state`devices.${props`device`}.location.lat`,\n        props`latest_data_point.lat`,\n      ),\n      set(state`devices.${props`device`}.sync`, true),\n    ],\n  },\n];\n","import { state } from \"cerebral\";\n\nexport default {\n  mapCenter: { lat: 40.428641, lng: -86.913783 },\n  connection: {},\n  devices: {},\n  components: { drawer: false },\n  selectedDevice: { device: null, day: null, hour: null },\n};\n","import App from \"cerebral\";\nimport * as sequences from \"./sequences\";\n//import * as providers from \"./providers\";\nimport state from \"./state\";\nimport DevTools from \"cerebral/devtools\";\nimport oadaProvider from \"@oada/cerebral-provider\";\nimport oadaModule from \"@oada/cerebral-module\";\n\nexport default App(\n  ({ app }) => {\n    app.on(\"initialized\", () => {\n      app.getSequence(\"connect\")();\n    });\n    return {\n      modules: {\n        oada: oadaModule,\n      },\n      state,\n      sequences,\n      providers: {\n        oada: oadaProvider,\n      },\n    };\n  },\n  {\n    devtools: DevTools({\n      host: \"localhost:8787\",\n    }),\n  },\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Container } from \"@cerebral/react\";\n//import \"./index.css\";\nimport ISOBlueAppComponent from \"./components/App\";\nimport app from \"./app\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Container app={app}>\n    <ISOBlueAppComponent />\n  </Container>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}