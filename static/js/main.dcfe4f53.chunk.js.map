{"version":3,"sources":["../../cerebral-module/sequences.js","../../cerebral-module/index.js","components/AppBar.jsx","components/Drawer.jsx","components/Map.jsx","components/App.jsx","app/oadatrees.js","app/actions.js","app/sequences.js","app/state.js","app/index.js","serviceWorker.js","index.js"],"names":["Object","defineProperty","exports","value","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_cerebral","require","_bluebird2","_interopRequireDefault","_url2","obj","__esModule","default","strings","raw","freeze","defineProperties","domainToConnectionId","domainUrl","parse","hostname","replace","connect","_ref","oada","path","props","connection_id","domain","options","cache","token","websocket","then","response","authorized","connection","catch","err","unauthorized","_ref2","store","get","state","set","_ref3","handleWatch","_ref4","change","type","oldState","_","cloneDeep","newState","merge","body","data","nullPath","split","join","unset","_ref5","requests","Error","map","request","i","complete","_cerebralPath","watch","conn","watches","signals","concat","arr","Array","isArray","arr2","length","from","_toConsumableArray","payload","url","headers","tree","_responseData","parts","partialPath","forEach","part","console","log","responses","put","_ref6","oadaDelete","_ref7","unwatch","delete","resetCache","_ref8","post","_ref10","location","disconnect","_ref9","_sequences2","_cerebralProvider2","connections","providers","sequences","Component","classes","this","Toolbar","IconButton","color","aria-label","onClick","toggleDrawer","className","icon","Typography","variant","flex","connectopmStatusIndicator","React","withStyles","theme","marginLeft","deviceDetails","selectedDevice","device","day","hour","days","keys","bookmarks","isoblue","hours","daySelector","Select","renderValue","onChange","selectDay","target","date","MenuItem","key","tzOffsetMinutes","Date","getTimezoneOffset","genTimeLabel","hhmm","localMinutes","parseInt","msg","localMM","Math","floor","toString","padStart","hourSelector","selectHour","List","Divider","ListItem","ListItemText","align","primary","Button","unselectDevice","Drawer","open","drawer","onClose","paper","drawerPaper","toolbar","list","component","devices","button","selectDevice","ListItemIcon","ListItemSecondaryAction","Switch","edge","toggleDeviceSync","checked","sync","inputProps","position","width","backgroundColor","mixins","withTheme","DefaultIcon","L","iconUrl","shadowUrl","iconShadow","Marker","prototype","MapComponent","markers","lat","lng","push","CircleMarker","ref","center","fillColor","fillOpacity","radius","zIndexOffset","Tooltip","direction","offset","permanent","pts","isNaN","time","Map","mapCenter","zoom","style","height","TileLayer","attribution","Polyline","positions","values","display","AppComponent","root","AppBar","appBar","content","Modal","aria-labelledby","aria-describedby","modalOverlay","App","flexGrow","zIndex","overflow","masterTree","_type","_rev","hourTree","dayTree","deviceTree","setDayListRequest","oadatrees","setHourListRequest","setLocationDataRequest","getMostRecentDay","day_index","date_list","maxBy","o","getMostRecentHour","hour_index","max","getMostRecentLocation","hour_dataset","latest_data_point","reduce","latest","data_point","updateDeviceListState","device_state","device_name","watchPath","initialize","actions","handleNewDevice","handleDeviceLocationUpdate","handleDayUpdate","toggle","when","true","false","components","app","on","getSequence","modules","oadaModule","oadaProvider","devtools","Boolean","window","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yGAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAGT,IAAIC,EAAkBC,EAAuB,CAAC,oBAAqB,IAAK,CAAC,oBAAqB,KAC1FC,EAAmBD,EAAuB,CAAC,oBAAqB,UAAW,CAAC,oBAAqB,WACjGE,EAAmBF,EAAuB,CAAC,oBAAqB,WAAY,CAAC,oBAAqB,YAClGG,EAAmBH,EAAuB,CAAC,QAAS,cAAe,CAAC,QAAS,eAC7EI,EAAmBJ,EAAuB,CAAC,cAAe,CAAC,eAC3DK,EAAmBL,EAAuB,CAAC,QAAS,IAAK,CAAC,QAAS,KACnEM,EAAmBN,EAAuB,CAAC,GAAI,IAAK,CAAC,GAAI,KAEzDO,EAAYC,EAAQ,GAMpBC,GAJaD,EAAQ,IAIRE,EAFDF,EAAQ,OAMpBG,EAAQD,EAFDF,EAAQ,KAInB,SAASE,EAAuBE,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEE,QAASF,GAIvF,SAASZ,EAAuBe,EAASC,GAAO,OAAOrB,OAAOsB,OAAOtB,OAAOuB,iBAAiBH,EAAS,CAAEC,IAAK,CAAElB,MAAOH,OAAOsB,OAAOD,OAIpI,SAASG,EAAqBC,GAE5B,OADaT,EAAMG,QAAQO,MAAMD,GAAWE,SAC9BC,QAAQ,MAAO,KAO/B,IAAIC,EAAU,CAAC,SAAUC,GACvB,IAAIC,EAAOD,EAAKC,KACZC,EAAOF,EAAKE,KACZC,EAAQH,EAAKG,MAEjB,OAAOF,EAAKF,QAAQ,CAClBK,cAAeD,EAAMC,eAAiBV,EAAqBS,EAAME,QACjEA,OAAQF,EAAME,OACdC,QAASH,EAAMG,QACfC,MAAOJ,EAAMI,MACbC,MAAOL,EAAMK,MACbC,UAAWN,EAAMM,YAChBC,MAAK,SAAUC,GAChB,OAAOT,EAAKU,WAAW,CACrBJ,MAAOG,EAASH,MAChBK,WAAYF,EACZP,cAAeD,EAAMC,eAAiBV,EAAqBS,EAAME,aAGlES,OAAM,SAAUC,GACjB,OAAOb,EAAKc,aAAa,QAE1B,CACDJ,WAAY,CAAC,SAAUK,GACrB,IAAIC,EAAQD,EAAMC,MACdC,EAAMF,EAAME,IAEZhB,GADOc,EAAMhB,KACLgB,EAAMd,OAEqD,MAAnEgB,GAAI,EAAIrC,EAAUsC,OAAO9C,EAAiB6B,EAAMC,iBAClDc,EAAMG,KAAI,EAAIvC,EAAUsC,OAAO9C,EAAiB6B,EAAMC,eAAgB,IAExEc,EAAMG,KAAI,EAAIvC,EAAUsC,OAAO5C,EAAkB2B,EAAMC,eAAgBD,EAAMK,OAC7EU,EAAMG,KAAI,EAAIvC,EAAUsC,OAAO3C,EAAkB0B,EAAMC,eAAgBD,EAAME,QACpEc,GAAI,EAAIrC,EAAUsC,OAAO1C,EAAkByB,EAAMC,iBAExDc,EAAMG,KAAI,EAAIvC,EAAUsC,OAAO1C,EAAkByB,EAAMC,eAAgB,MAG3EY,aAAc,CAAC,SAAUM,GACXA,EAAMJ,MACZG,KAAI,EAAIvC,EAAUsC,OAAOzC,GAAmB,QAIlD4C,EAAc,CAAC,SAAUC,GAC3B,IAAIJ,EAAQI,EAAMJ,MAGdjB,GAFOqB,EAAMvB,KACNuB,EAAMtB,KACLsB,EAAMrB,OAElB,GAAmC,UAA/BA,EAAMQ,SAASc,OAAOC,KAAkB,CAC1C,IAAIC,EAAWC,EAAEC,UAAUT,EAAMD,IAAI,QAAUhB,EAAMC,cAAgB,IAAMD,EAAMD,OAC7E4B,EAAWF,EAAEG,MAAMJ,EAAUxB,EAAMQ,SAASc,OAAOO,KAAKC,MAE5D,OADAb,EAAMC,IAAI,QAAUlB,EAAMC,cAAgB,IAAMD,EAAMD,KAAM4B,GACrD,CAAEH,SAAUA,GACd,GAAmC,WAA/BxB,EAAMQ,SAASc,OAAOC,KAAmB,CAClD,IAAIQ,EAAW/B,EAAM+B,SAASC,MAAM,KAAKC,KAAK,KAC1CT,EAAWC,EAAEC,UAAUT,EAAMD,IAAI,QAAUhB,EAAMC,cAAgB8B,IAErE,OADAd,EAAMiB,MAAM,QAAUlC,EAAMC,cAAgB,IAAMD,EAAMD,KAAOgC,GACxD,CAAEP,SAAUA,MAQnBR,EAAM,CAAC,SAAUmB,GACnB,IAAIrC,EAAOqC,EAAMrC,KACbiB,EAAQoB,EAAMpB,MACdC,EAAMmB,EAAMnB,IACZhB,EAAQmC,EAAMnC,MAElB,IAAKA,EAAMoC,SAAU,MAAM,IAAIC,MAAM,uKACrC,IAAID,EAAWpC,EAAMoC,UAAY,GACjC,OAAOvD,EAAWK,QAAQoD,IAAIF,GAAU,SAAUG,EAASC,GACzD,IAAID,EAAQE,SAAZ,CACA,IAAIC,EAAgBH,EAAQxC,KAAKJ,QAAQ,MAAO,IAAIqC,MAAM,KAAKC,KAAK,KACpE,GAAIM,EAAQI,MAAO,CACjB,IAAIC,EAAO5B,GAAI,EAAIrC,EAAUsC,OAAOxC,EAAkB8D,EAAQtC,eAAiBD,EAAMC,iBACjF2C,GAAUA,EAAKC,SAAWD,EAAKC,QAAQN,EAAQxC,QACjDwC,EAAQI,MAAMG,QAAU,CAAC,oBAAoBC,OAjGrD,SAA4BC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,IAAIR,EAAI,EAAGW,EAAOF,MAAMD,EAAII,QAASZ,EAAIQ,EAAII,OAAQZ,IAAOW,EAAKX,GAAKQ,EAAIR,GAAM,OAAOW,EAAe,OAAOF,MAAMI,KAAKL,GAiG9HM,CAAmBf,EAAQI,MAAMG,UACrFP,EAAQI,MAAMY,QAAUhB,EAAQI,MAAMY,SAAW,GACjDhB,EAAQI,MAAMY,QAAQtD,cAAgBsC,EAAQtC,eAAiBD,EAAMC,cACrEsC,EAAQI,MAAMY,QAAQxD,KAAO2C,GAGjC,OAAO5C,EAAKkB,IAAI,CACdf,cAAesC,EAAQtC,eAAiBD,EAAMC,cAC9CuD,IAAKjB,EAAQiB,IACbzD,KAAMwC,EAAQxC,KACd0D,QAASlB,EAAQkB,QACjBd,MAAOJ,EAAQI,MACfe,KAAMnB,EAAQmB,MAAQ1D,EAAM0D,OAC3BnD,MAAK,SAAUC,GAChB,IAAImD,EAAgBnD,EAASsB,KAEzB/B,EAAO,SAAWwC,EAAQtC,eAAiBD,EAAMC,eAAiB,IAAMyC,EACxEkB,EAAQ7D,EAAKiC,MAAM,KACnB6B,EAAc,GA0BlB,OAzBAD,EAAME,SAAQ,SAAUC,GACtBF,GAA4BE,EACoC,MAA5D/C,GAAI,EAAIrC,EAAUsC,OAAOvC,EAAkBmF,KAC7C9C,EAAMG,KAAI,EAAIvC,EAAUsC,OAAOvC,EAAkBmF,GAAc,IAEjEA,GAA4B,OAG1BF,GAAe5C,EAAMG,KAAI,EAAIvC,EAAUsC,OAAOvC,EAAkBqB,GAAO4D,GACvEpB,EAAQI,QAGViB,GADA7D,EAAO,SAAWwC,EAAQtC,eAAiBD,EAAMC,eAAiB,YAAcsC,EAAQxC,MAC3EiC,MAAM,KACnB6B,EAAc,GACdD,EAAME,SAAQ,SAAUC,GACtBF,GAA4BE,EACoC,MAA5D/C,GAAI,EAAIrC,EAAUsC,OAAOvC,EAAkBmF,KAC7C9C,EAAMG,KAAI,EAAIvC,EAAUsC,OAAOvC,EAAkBmF,GAAc,IAEjEA,GAA4B,OAE9B9C,EAAMG,KAAI,EAAIvC,EAAUsC,OAAOvC,EAAkBqB,IAAO,IAG1DqC,EAASI,GAAGC,UAAW,EAChBjC,KACNG,OAAM,SAAUC,GAEjB,OADAoD,QAAQC,IAAI,oBAAqBrD,GAC1BA,SAERL,MAAK,SAAU2D,GAChB,MAAO,CAAEA,UAAWA,EAAW9B,SAAUA,QAQzC+B,EAAM,CAAC,SAAUC,GACnB,IAAItE,EAAOsE,EAAMtE,KACbmB,EAAQmD,EAAMnD,MACdjB,EAAQoE,EAAMpE,MAElB,IAAKA,EAAMoC,SAAU,MAAM,IAAIC,MAAM,uKACrC,IAAID,EAAWpC,EAAMoC,UAAY,GACjC,OAAOvD,EAAWK,QAAQoD,IAAIF,GAAU,SAAUG,EAASC,GACzD,IAAID,EAAQE,SACZ,OAAO3C,EAAKqE,IAAI,CACdX,IAAKjB,EAAQiB,IACbzD,KAAMwC,EAAQxC,KACd+B,KAAMS,EAAQT,KACdP,KAAMgB,EAAQhB,KACdkC,QAASlB,EAAQkB,QACjBC,KAAMnB,EAAQmB,MAAQ1D,EAAM0D,KAC5BzD,cAAesC,EAAQtC,eAAiBD,EAAMC,gBAC7CM,MAAK,SAAUC,GAChB,IAAIgB,EAAWC,EAAEC,UAAUT,EAAMD,IAAI,SAAWuB,EAAQtC,eAAiBD,EAAMC,eAAiBsC,EAAQxC,KAAKiC,MAAM,KAAKC,KAAK,OACzHN,EAAWF,EAAEG,MAAMJ,EAAUe,EAAQT,MAErC/B,EAAO,SAAWwC,EAAQtC,eAAiBD,EAAMC,eAAiBsC,EAAQxC,KAAKiC,MAAM,KAAKC,KAAK,KAC/F2B,EAAQ7D,EAAKiC,MAAM,KACnB6B,EAAc,GAUlB,OATAD,EAAME,SAAQ,SAAUC,GACtBF,GAA4BE,EACE,MAA1B9C,EAAMD,IAAI6C,IACZ5C,EAAMC,IAAI2C,EAAa,IAEzBA,GAA4B,OAE9B5C,EAAMC,IAAInB,EAAM4B,GAChBS,EAASI,GAAGC,UAAW,EAChBjC,QAERD,MAAK,SAAU2D,GAChB,MAAO,CAAEA,UAAWA,EAAW9B,SAAUA,QAQzCiC,EAAa,CAAC,SAAUC,GAC1B,IAAIxE,EAAOwE,EAAMxE,KACbmB,EAAQqD,EAAMrD,MACdjB,EAAQsE,EAAMtE,MAElB,IAAKA,EAAMoC,SAAU,MAAM,IAAIC,MAAM,uKACrC,IAAID,EAAWpC,EAAMoC,UAAY,GACjC,OAAOvD,EAAWK,QAAQoD,IAAIF,GAAU,SAAUG,EAASC,GACzD,IAAID,EAAQE,SAAZ,CACA,IAAIC,EAAgBH,EAAQxC,KAAKJ,QAAQ,MAAO,IAAIqC,MAAM,KAAKC,KAAK,KAChEW,EAAO3B,EAAMD,IAAI,SAAWuB,EAAQtC,eAAiBD,EAAMC,gBAC/D,KAAIsC,EAAQgC,SAAW3B,GAAQA,EAAKC,UAE7BD,EAAKC,QAAQN,EAAQxC,MAE5B,OAAOD,EAAK0E,OAAO,CACjBvE,cAAesC,EAAQtC,eAAiBD,EAAMC,cAC9CuD,IAAKjB,EAAQiB,IACbzD,KAAMwC,EAAQxC,KACd0D,QAASlB,EAAQkB,QACjBc,QAAShC,EAAQgC,QACjBhD,KAAMgB,EAAQhB,KACdmC,KAAMnB,EAAQmB,MAAQ1D,EAAM0D,OAC3BnD,MAAK,SAAUC,GAQhB,OANI+B,EAAQgC,SAAW3B,GAAQA,EAAKC,QAClC5B,EAAMiB,MAAM,SAAWK,EAAQtC,eAAiBD,EAAMC,eAAiB,YAAcsC,EAAQxC,MAE7FkB,EAAMiB,MAAM,SAAWK,EAAQtC,eAAiBD,EAAMC,eAAiB,IAAMyC,GAE/EN,EAASI,GAAGC,UAAW,EAChBjC,SAERD,MAAK,SAAU2D,GAChB,MAAO,CAAEA,UAAWA,EAAW9B,SAAUA,QAQzCqC,EAAa,CAAC,SAAUC,GAC1B,IAAI5E,EAAO4E,EAAM5E,KAEbE,GADQ0E,EAAMzD,MACNyD,EAAM1E,OAElB,OAAOF,EAAK2E,WAAW,CACrBxE,cAAeD,EAAMC,eAAiBV,EAAqBS,EAAME,YAoBjEyE,EAAO,CAAC,SAAUC,GACpB,IAAI9E,EAAO8E,EAAO9E,KACdmB,EAAQ2D,EAAO3D,MACfjB,EAAQ4E,EAAO5E,MAEnB,IAAKA,EAAMoC,SAAU,MAAM,IAAIC,MAAM,uKACrC,IAAID,EAAWpC,EAAMoC,UAAY,GACjC,OAAOvD,EAAWK,QAAQoD,IAAIF,GAAU,SAAUG,EAASC,GACzD,IAAID,EAAQE,SACZ,OAAO3C,EAAK6E,KAAK,CACfnB,IAAKjB,EAAQiB,IACbzD,KAAMwC,EAAQxC,KACd+B,KAAMS,EAAQT,KACdP,KAAMgB,EAAQhB,KACdkC,QAASlB,EAAQkB,QACjBC,KAAMnB,EAAQmB,MAAQ1D,EAAM0D,KAC5BzD,cAAesC,EAAQtC,eAAiBD,EAAMC,gBAC7CM,MAAK,SAAUC,GACPA,EAASiD,QAAQoB,SAA1B,IACIrD,EAAWC,EAAEC,UAAUT,EAAMD,IAAI,SAAWuB,EAAQtC,eAAiBD,EAAMC,eAAiBsC,EAAQxC,KAAKiC,MAAM,KAAKC,KAAK,OACzHN,EAAWF,EAAEG,MAAMJ,EAAUe,EAAQT,MACzCb,EAAMC,IAAI,SAAWqB,EAAQtC,eAAiBD,EAAMC,eAAiB,IAAMsC,EAAQxC,KAAKiC,MAAM,KAAKC,KAAK,KAAMN,GAC9GS,EAASI,GAAGC,UAAW,QAGxBlC,MAAK,SAAU2D,GAChB,MAAO,CAAEA,UAAWA,QAIxBjG,EAAQiB,QAAU,CAChBsF,OAAQH,EACRrD,IAAKA,EACLmD,IAAKA,EACLQ,KAAMA,EACN/E,QAASA,EACT6E,WAAYA,EACZK,WAjDe,CAAC,SAAUC,GAC1B,IAAIjF,EAAOiF,EAAMjF,KAEbE,GADQ+E,EAAM9D,MACN8D,EAAM/E,OAElB,OAAOF,EAAKgF,WAAW,CAAE7E,cAAeD,EAAMC,kBA6C9CV,qBAAsBA,EACtB6B,YAAaA,I,iCC5UfrD,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAGT,IAEI8G,EAAclG,EAFDF,EAAQ,KAMrBqG,EAAqBnG,EAFDF,EAAQ,MAIhC,SAASE,EAAuBE,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEE,QAASF,GAEvFf,EAAQiB,QAAU,CAEhB+B,MAAO,CAAEiE,YAAa,IAEtBC,UAAW,CAAErF,KAAMmF,EAAmB/F,SAEtCkG,UAAWJ,EAAY9F,U,qjCCdzB,IASMmG,E,iLACM,IAAD,OACCC,EAAYC,KAAKvF,MAAjBsF,QAER,OACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,MAAM,UACNC,aAAW,cACXC,QAAS,kBAAM,EAAK5F,MAAM6F,iBAE1B,kBAAC,IAAD,CAAUC,UAAWR,EAAQS,QAE/B,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKP,MAAM,UAAUI,UAAWR,EAAQY,MAA5D,sBAGA,yBAAKJ,UAAWR,EAAQa,2BACtB,kBAACH,EAAA,EAAD,CAAYC,QAAQ,KAAKP,MAAM,WAC5BH,KAAKvF,MAAMC,cAAgB,YAAc,uB,GAlB9BmG,IAAMf,WA0BfzF,oBACb,CACEiG,aAAcT,oBAAF,KACZnF,cAAegB,gBAAF,MAEfoF,aAxCa,SAAAC,GAAK,MAAK,CACvBJ,KAAM,CACJA,KAAM,GAERC,0BAA2B,CACzBI,WAAY,WAmCdF,CAAmBhB,I,y+BC3BrB,IASMA,E,iLACM,IAAD,OACCC,EAAYC,KAAKvF,MAAjBsF,QAEJkB,EAAgB,8BACdC,EAAiBlB,KAAKvF,MAAMyG,eAClC,GAAIA,EAAeC,QAAUD,EAAeE,KAAOF,EAAeG,KAAM,CACtE,IAAMC,EAAO9I,OAAO+I,KAClBvB,KAAKvF,MAAMF,KAAKyF,KAAKvF,MAAMU,WAAWT,eAAe8G,UAAUC,QAC7D,gBACAP,EAAeC,QAFjB,SAEqC,cAAgB,IAEjDO,EAAQlJ,OAAO+I,KACnBvB,KAAKvF,MAAMF,KAAKyF,KAAKvF,MAAMU,WAAWT,eAAe8G,UAAUC,QAC7D,gBACAP,EAAeC,QAFjB,SAEqC,aAAaD,EAAeE,KAC/D,eACG,IAEDO,EACJ,kBAACC,EAAA,EAAD,CACEjJ,MAAOuI,EAAeE,IACtBS,YAAa,SAAAlJ,GAAK,gBAAOA,IACzBmJ,SAAU,SAAAnJ,GAAK,OAAI,EAAK8B,MAAMsH,UAAU,CAAEX,IAAKzI,EAAMqJ,OAAOrJ,UAE3D2I,EAAKvE,KAAI,SAAAkF,GAAI,OACZ,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAMtJ,MAAOsJ,GACzBA,MAPP,KAeIG,GAAkB,IAAIC,MAAOC,oBAC7BC,EAAe,SAAAlB,GAGnB,IAAMmB,EAAOnB,EAAK5E,MAAM,KAIpBgG,GAHeD,EAAK,GACpB,GAAKE,SAASF,EAAK,IAAME,SAASF,EAAK,IACvC,GAAKE,SAASrB,IACce,EAC5BO,EAAM,GACNF,EAAe,GACjBA,GAAgB,KAChBE,EAAM,aACGF,EAAe,OACxBA,GAAgB,KAChBE,EAAM,aAER,IACMC,EAAUH,EAAe,GAC/B,OAFgBI,KAAKC,MAAML,EAAe,IAGhCM,WAAWC,SAAS,EAAG,KAC/B,IACAJ,EAAQG,WAAWC,SAAS,EAAG,KAC/BL,GAIEM,EACJ,kBAACrB,EAAA,EAAD,CACEjJ,MAAOuI,EAAeG,KACtBQ,YAAa,SAAAlJ,GAAK,gBAAO4J,EAAa5J,KACtCmJ,SAAU,SAAAnJ,GAAK,OACb,EAAK8B,MAAMyI,WAAW,CAAE7B,KAAM1I,EAAMqJ,OAAOrJ,UAG5C+I,EAAM3E,KAAI,SAAAsE,GACT,OACE,kBAACa,EAAA,EAAD,CAAUC,IAAKd,EAAM1I,MAAO0I,GACzBkB,EAAalB,QAOxBJ,EACE,kBAACkC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,MAAM,SACNC,QAAO,kBAAatC,EAAeC,WAGvC,kBAACkC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAcC,MAAM,UAAU5B,IAEhC,kBAAC0B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAcC,MAAM,UAAUN,IAEhC,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAcC,MAAM,UAClB,kBAACE,EAAA,EAAD,CACE/C,QAAQ,YACRL,QAAS,kBAAM,EAAK5F,MAAMiJ,eAAe,MAF3C,sBAYV,OACE,kBAACC,EAAA,EAAD,CACEC,KAAM5D,KAAKvF,MAAMoJ,OACjBC,QAAS,kBAAM,EAAKrJ,MAAM6F,gBAC1BP,QAAS,CACPgE,MAAOhE,EAAQiE,cAGjB,yBAAKzD,UAAWR,EAAQkE,UACxB,kBAACd,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAcC,MAAM,SAASC,QAAS,uBAGxC,kBAACL,EAAA,EAAD,CAAM5C,UAAWR,EAAQmE,KAAMC,UAAU,OACtC3L,OAAO+I,KAAKvB,KAAKvF,MAAM2J,SAAW,IAAIrH,KAAI,SAAAoE,GAAM,OAC/C,kBAACkC,EAAA,EAAD,CACEgB,QAAM,EACNlC,IAAG,WAAMhB,GACTd,QAAS,kBAAM,EAAK5F,MAAM6J,aAAa,CAAEnD,aAEzC,kBAACoD,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACjB,EAAA,EAAD,CAAcE,QAASrC,IACvB,kBAACqD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,MACL5C,SAAU,kBAAM,EAAKrH,MAAMkK,iBAAiB,CAAExD,YAC9CyD,QAAS,EAAKnK,MAAM2J,QAAQjD,GAAQ0D,KACpCC,WAAY,CAAE,kBAAmB,kCAO1C7D,Q,GAlJaJ,IAAMf,WAyJfzF,oBACb,CACEwJ,OAAQnI,gBAAF,KACN4E,aAAcT,oBAAF,KACZuE,QAAS1I,gBAAF,KACPwF,eAAgBxF,gBAAF,KACd4I,aAAczE,oBAAF,KACZqD,WAAYrD,oBAAF,KACVkC,UAAWlC,oBAAF,KACT6D,eAAgB7D,oBAAF,KACd8E,iBAAkB9E,oBAAF,KAChB1E,WAAYO,gBAAF,KACVnB,KAAMmB,gBAAF,MAENoF,aAhLa,SAAAC,GAAK,MAAK,CACvBiD,YAAa,CACXe,SAAU,WACVC,MAAO,IACPC,gBAAiB,WAEnBhB,QAASlD,EAAMmE,OAAOjB,WA0KH,CAAEkB,WAAW,GAAhCrE,CAAwChB,I,wgBCnL1C,IAAIsF,GAAcC,KAAE7E,KAAK,CACvB8E,QAAS9E,KACT+E,UAAWC,OAGbH,KAAEI,OAAOC,UAAU9K,QAAQ4F,KAAO4E,GAElC,IASMO,G,iLACM,IAAD,OACC5F,EAAYC,KAAKvF,MAAjBsF,QAGJ6F,EAAU,GACdpN,OAAO+I,KAAKvB,KAAKvF,MAAM2J,SAAW,IAAI7F,SAAQ,SAAA4C,GAE1C,EAAK1G,MAAM2J,QAAQjD,GAAQ0D,MAC3B,EAAKpK,MAAM2J,QAAQjD,GAAQ7B,SAASuG,KACpC,EAAKpL,MAAM2J,QAAQjD,GAAQ7B,SAASwG,KAEpCF,EAAQG,KACN,kBAACC,GAAA,EAAD,CACEC,IAAK,SAAA9E,GACH,EAAKA,OAASA,GAEhBgB,IAAKhB,EACL+E,OAAQ,CACN,EAAKzL,MAAM2J,QAAQjD,GAAQ7B,SAASuG,IACpC,EAAKpL,MAAM2J,QAAQjD,GAAQ7B,SAASwG,KAEtC3F,MAAO,UACPgG,UAAW,UACXC,YAAa,EACbC,OAAQ,GACRC,aAAc,GAEd,kBAACC,GAAA,EAAD,CAASC,UAAU,MAAMC,OAAQ,CAAC,GAAI,IAAKC,WAAW,GACpD,2BAAIvF,SAQd,IAAMD,EAAiBlB,KAAKvF,MAAMyG,eAC9ByF,EAAM,GACV,GAAIzF,EAAeC,QAAUD,EAAeE,KAAOF,EAAeG,KAChE,IACE,IAAM9E,EACJyD,KAAKvF,MAAMF,KAAKyF,KAAKvF,MAAMU,WAAWT,eAAe8G,UAClDC,QAAQ,gBAAgBP,EAAeC,QAD1C,SAEE,aACAD,EAAeE,KAAK,cAAcF,EAAeG,MACjD,cACG,GACP7I,OAAO+I,KAAKhF,GAAMgC,SAAQ,SAAA4D,GACnByE,MAAMrK,EAAK4F,GAAK0D,MAASe,MAAMrK,EAAK4F,GAAK2D,OAC5Ca,EAAIpK,EAAK4F,GAAK0E,MAAQ,CAACtK,EAAK4F,GAAK0D,IAAKtJ,EAAK4F,GAAK2D,SAGpD,SACArH,QAAQC,IAAI,kCAIhB,OACE,yBAAK6B,UAAWR,EAAQhD,KACtB,kBAAC+J,GAAA,EAAD,CACEZ,OAAQ,CAAClG,KAAKvF,MAAMsM,UAAUlB,IAAK7F,KAAKvF,MAAMsM,UAAUjB,KACxDkB,KAAM,GACNC,MAAO,CAAEC,OAAQ,OAAQlC,MAAO,OAAQD,SAAU,aAElD,kBAACoC,GAAA,EAAD,CACEC,YAAY,6IACZnJ,IAAI,kGAEL2H,EAED,6BACE,kBAACyB,GAAA,EAAD,CACElF,IAAK,YACLmF,UAAW9O,OAAO+O,OAAOZ,IAAQ,GACjCxG,MAAM,mB,GA3EOU,IAAMf,WAoFlBzF,qBACb,CACE0M,UAAWrL,gBAAF,MACT0I,QAAS1I,gBAAF,MACPP,WAAYO,gBAAF,MACVnB,KAAMmB,gBAAF,MACJwF,eAAgBxF,gBAAF,OAEhBoF,aArGa,SAAAC,GAAK,MAAK,CACvBhE,IAAK,CACHgI,SAAU,WACVyC,QAAS,OACTxC,MAAO,OACPkC,OAAQ,wBAgGS,CAAE/B,WAAW,GAAhCrE,CAAwC6E,K,mFCnH1C,IAkBM8B,G,iLACM,IACA1H,EAAYC,KAAKvF,MAAjBsF,QAER,OACE,yBAAKQ,UAAWR,EAAQ2H,MACtB,kBAACC,EAAA,EAAD,CAAQ5C,SAAS,WAAWxE,UAAWR,EAAQ6H,QAC7C,kBAAC,EAAD,OAEF,kBAAC,EAAD,MACA,0BAAMrH,UAAWR,EAAQ8H,SACvB,yBAAKtH,UAAWR,EAAQkE,UACxB,kBAAC,GAAD,OAEF,kBAAC6D,EAAA,EAAD,CACEC,kBAAgB,qBAChBC,mBAAiB,2BACjBpE,KAAM5D,KAAKvF,MAAMwN,cAEjB,oC,GAnBiBpH,IAAMf,WA+BlBoI,GALH7N,kBACV,CAAE4N,aAAcvM,gBAAF,OACdoF,aA9Ca,SAAAC,GAAK,MAAK,CACvB2G,KAAM,CACJS,SAAU,EACVjB,OAAQ,QACRkB,OAAQ,EACRC,SAAU,SACVtD,SAAU,WACVyC,QAAS,QAEXI,OAAQ,CACNQ,OAAQrH,EAAMqH,OAAOvE,OAAS,GAEhCgE,QAAS,CACPM,SAAU,GAEZlE,QAASlD,EAAMmE,OAAOjB,WA+BH,CAAEkB,WAAW,GAAhCrE,CAAwC2G,K,kDCzD7Ba,GAAa,CACxB9G,UAAW,CACT+G,MAAO,wCACPC,KAAM,EACN/G,QAAS,CACP8G,MAAO,sCACPC,KAAM,EACN,eAAgB,CACd,IAAK,CACHD,MAAO,6CACPC,KAAM,EACN,IAAK,CACHD,MAAO,8CACPC,KAAM,EACN,YAAa,CACX,IAAK,CACHD,MAAO,0CACPC,KAAM,EACN,aAAc,CACZ,IAAK,CACHD,MAAO,qDAYdE,GAAW,CACtBjH,UAAW,CACT+G,MAAO,yCACPC,KAAM,EACN/G,QAAS,CACP8G,MAAO,uCACPC,KAAM,EACN,eAAgB,CACd,IAAK,CACHD,MAAO,8CACPC,KAAM,EACN,IAAK,CACHD,MAAO,8CACPC,KAAM,EACN,YAAa,CACX,IAAK,CACHD,MAAO,2CACPC,KAAM,UAUTE,GAAU,CACrBlH,UAAW,CACT+G,MAAO,yCACPC,KAAM,EACN/G,QAAS,CACP8G,MAAO,uCACPC,KAAM,EACN,eAAgB,CACd,IAAK,CACHD,MAAO,8CACPC,KAAM,EACN,IAAK,CACHD,MAAO,8CACPC,KAAM,QAQLG,GAAa,CACxBnH,UAAW,CACT+G,MAAO,yCACPC,KAAM,EACN/G,QAAS,CACP8G,MAAO,uCACPC,KAAM,EACN,eAAgB,M,+3DClFf,IAsBMI,GAAoB,SAAC,GAAa,IACvCzH,GAAS1F,EAD6B,EAAVA,KACfhB,gBAAA,OAEnB,MAAO,CACLoC,SAAU,CACR,CACErC,KAAK,mCAAD,OAAqC2G,EAArC,aACJhD,KAAM0K,GACNzL,MAAO,CAAEG,QAAS,CAAC,mBAAoBS,QAAS,CAAEmD,eAM7C2H,GAAqB,SAAC,GAAa,IAAXrN,EAAU,EAAVA,IAC7B0F,EAAS1F,EAAIhB,gBAAA,OACb2G,EAAM3F,EAAIhB,gBAAA,OAEhB,MAAO,CACLoC,SAAU,CACR,CACErC,KAAK,mCAAD,OAAqC2G,EAArC,+BAAkEC,GACtEjD,KAAM0K,OAODE,GAAyB,SAAC,GAAa,IAAXtN,EAAU,EAAVA,IACjC0F,EAAS1F,EAAIhB,gBAAA,OACb2G,EAAM3F,EAAIhB,gBAAA,OACV4G,EAAO5F,EAAIhB,gBAAA,OAEjB,MAAO,CACLoC,SAAU,CACR,CACErC,KAAK,mCAAD,OAAqC2G,EAArC,+BAAkEC,EAAlE,uBAAoFC,GACxFlD,KAAM0K,GACNzL,MAAO,CAAEG,QAAS,CAAC,8BAA+BS,QAAS,CAAEmD,eAMxD6H,GAAmB,SAAC,GAAa,IAAXvN,EAAU,EAAVA,IAC3B0F,EAAS1F,EAAIhB,gBAAA,OACbC,EAAgBe,EAAIC,gBAAA,OAC1B,IAAKyF,IAAWzG,EACd,MAAM,IAAIoC,MAAM,sBAGlB,IAAMmM,EAAYxN,EAChBC,gBADoB,KACPhB,EAAgDyG,IAIzD+H,EAAY1Q,OAAO+I,KAAK0H,GAC9B,OAAyB,IAArBC,EAAUrL,OACL,GAKF,CAAEuD,IAHSlF,KAAEiN,MAAMD,GAAW,SAASE,GAC5C,OAAO,IAAI/G,KAAK+G,QAKPC,GAAoB,SAAC,GAAa,IAAX5N,EAAU,EAAVA,IAC5B0F,EAAS1F,EAAIhB,gBAAA,OACbC,EAAgBe,EAAIC,gBAAA,OACpB0F,EAAM3F,EAAIhB,gBAAA,OAChB,IAAK0G,IAAWzG,IAAkB0G,EAChC,MAAM,IAAItE,MAAM,sBAGlB,IAAMwM,EAAa7N,EACjBC,gBADqB,KACRhB,EAAgDyG,EAA6BC,IAK5F,OAAyB,IADP5I,OAAO+I,KAAK+H,GAChBzL,OACL,GAGF,CAAEwD,KADSnF,KAAEqN,IAAI/Q,OAAO+I,KAAK+H,GAAc,OAIvCE,GAAwB,SAAC,GAAa,IAAX/N,EAAU,EAAVA,IAChC0F,EAAS1F,EAAIhB,gBAAA,OACbC,EAAgBe,EAAIC,gBAAA,OACpB0F,EAAM3F,EAAIhB,gBAAA,OACV4G,EAAO5F,EAAIhB,gBAAA,OACjB,IAAK0G,IAAWzG,IAAkB0G,IAAQC,EACxC,MAAM,IAAIvE,MAAM,sBAElB,IAAM2M,EAAehO,EACnBC,gBADuB,KACVhB,EAAgDyG,EAA6BC,EAAkBC,IAU9G,MAAO,CAAEqI,kBAPiBlR,OAAO+O,OAAOkC,GAAgB,IAAIE,QAC1D,SAACC,EAAQC,GACP,OAAOD,EAAO/C,KAAOgD,EAAWhD,KAAO+C,EAASC,IAElD,CAAEhD,KAAM,EAAGhB,IAAK,EAAGC,IAAK,MAMfgE,GAAwB,SAAC,GAAa,IAAXrO,EAAU,EAAVA,IAChCf,EAAgBe,EAAIC,gBAAA,OACpB0I,EACJ3I,EAAIC,gBAAA,KAAahB,KAAmD,GACtE,IAAKA,EACH,MAAM,IAAIoC,MAAM,sBAGlB,IAAIiN,EAAetO,EAAIC,gBAAA,OAEvB,IAAK,IAAMsO,KAAe5F,EAClB4F,KAAeD,IACnBA,EAAaC,GAAe,CAC1BnF,MAAM,EACNoF,UAAW,KACX3K,SAAU,CAAEuG,IAAK,KAAMC,IAAK,QAKlC,MAAO,CAAE1B,QAAS2F,I,0xNCvJb,IAAMG,GDDa,aCGf7P,GAAU,CDDY,WAC/B,MAAO,CACLM,OAAQ,sCACRG,MAAO,MACPD,OAAO,ICDTN,KAAKF,QACLsB,eAAID,gBAAA,MAAiCjB,gBAAjC,ODI8B,SAAC,GAAY,EAAVgB,IACrC,MAAO,CACLoB,SAAU,CACR,CACErC,KAAM,qBACN2D,KAAM0K,GACNzL,MAAO,CAAEG,QAAS,CAAC,wBCPzBhD,KAAKkB,IACL0O,GACAxO,eAAID,gBAAA,MAAgBjB,gBAAhB,OACJkB,eAAID,gBAAA,OAAqB,IAGd0O,GAAkB,CAC7BD,GACAxO,eAAID,gBAAA,MAAgBjB,gBAAhB,QAGO4P,GAA6B,CACxCF,GACAA,GACAA,GACAxO,eACED,gBADE,KACcjB,gBADd,OAEFA,gBAFE,OAIJkB,eACED,gBADE,KACcjB,gBADd,OAEFA,gBAFE,QAMO6P,GAAkB,CAC7B3O,eAAIlB,gBAAA,MAAsBiB,gBAAtB,OACJyO,GAEAA,GACA5P,KAAKkB,IACL0O,GAEAA,GACA5P,KAAKkB,IACL0O,GACAxO,eACED,gBADE,KACcjB,gBADd,OAEFA,gBAFE,OAIJkB,eACED,gBADE,KACcjB,gBADd,OAEFA,gBAFE,QAMO6F,GAAeiK,kBAAO7O,gBAAA,OAEtB4I,GAAe,CAC1B3I,eAAID,gBAAA,OAAqB,GACzBC,eAAIlB,gBAAA,MAAsBiB,gBAAtB,OAEJyO,GACA5P,KAAKkB,IACL0O,GAEAA,GACA5P,KAAKkB,IACL0O,GAEAA,GACA5P,KAAKkB,IACL0O,GACAxO,eACED,gBADE,KACcjB,gBADd,OAEFA,gBAFE,OAIJkB,eACED,gBADE,KACcjB,gBADd,OAEFA,gBAFE,OAIJkB,eAAID,gBAAA,KAAgBjB,gBAAhB,QAAsC,GAC1CkB,eAAID,gBAAA,MAAsBjB,gBAAtB,OACJkB,eAAID,gBAAA,MAAsBjB,gBAAtB,OACJkB,eAAID,gBAAA,MAA8BjB,gBAA9B,OACJkB,eAAID,gBAAA,MAA2BjB,gBAA3B,OACJkB,eAAID,gBAAA,MAA4BjB,gBAA5B,OACJkB,eAAID,gBAAA,OAAqB,IAGdgI,GAAiB,CAC5B/H,eAAID,gBAAA,MAA8B,MAClCC,eAAID,gBAAA,MAA2B,MAC/BC,eAAID,gBAAA,MAA4B,OAGrBqG,GAAY,CACvBpG,eAAID,gBAAA,OAAqB,GACzBC,eAAIlB,gBAAA,MAAsBiB,gBAAtB,OACJC,eAAIlB,gBAAA,MAAeiB,gBAAf,OACJC,eAAID,gBAAA,MAA2BjB,gBAA3B,OACJ0P,GACA5P,KAAKkB,IACLE,eAAID,gBAAA,OAAqB,IAEdwH,GAAa,CACxBvH,eAAID,gBAAA,OAAqB,GACzBC,eAAIlB,gBAAA,MAAsBiB,gBAAtB,OACJC,eAAIlB,gBAAA,MAAeiB,gBAAf,OACJC,eAAIlB,gBAAA,MAAYiB,gBAAZ,OACJC,eAAID,gBAAA,MAA4BjB,gBAA5B,OACJ0P,GACA5P,KAAKkB,IACLE,eAAID,gBAAA,OAAqB,IAGdiJ,GAAmB,CAC9BhJ,eAAID,gBAAA,OAAqB,GACzB8O,gBAAK9O,gBAAA,KAAgBjB,gBAAhB,QACL,CACEgQ,KAAM,CAAC9O,eAAID,gBAAA,KAAgBjB,gBAAhB,QAAsC,IACjDiQ,MAAO,CACL/O,eAAIlB,gBAAA,MAAsBiB,gBAAtB,OAEJyO,GACA5P,KAAKkB,IACL0O,GAEAA,GACA5P,KAAKkB,IACL0O,GAEAA,GACA5P,KAAKkB,IACL0O,GACAxO,eACED,gBADE,KACcjB,gBADd,OAEFA,gBAFE,OAIJkB,eACED,gBADE,KACcjB,gBADd,OAEFA,gBAFE,OAIJkB,eAAID,gBAAA,KAAgBjB,gBAAhB,QAAsC,KAG9CkB,eAAID,gBAAA,OAAqB,ICpJZ,IACbqL,UAAW,CAAElB,IAAK,UAAWC,KAAM,WACnC3K,WAAY,GACZiJ,QAAS,GACTuG,WAAY,CAAE9G,QAAQ,GACtB3C,eAAgB,CAAEC,OAAQ,KAAMC,IAAK,KAAMC,KAAM,MACjD4G,cAAc,G,mDCADC,sBACb,YAAc,IAAX0C,EAAU,EAAVA,IAID,OAHAA,EAAIC,GAAG,eAAe,WACpBD,EAAIE,YAAY,UAAhBF,MAEK,CACLG,QAAS,CACPxQ,KAAMyQ,MAERtP,SACAmE,YACAD,UAAW,CACTrF,KAAM0Q,SAIZ,CACEC,SAEM,OCfUC,QACW,cAA7BC,OAAO9L,SAASnF,UAEe,UAA7BiR,OAAO9L,SAASnF,UAEhBiR,OAAO9L,SAASnF,SAASkR,MACvB,2DCVNC,IAASC,OACP,kBAAC,YAAD,CAAWX,IAAKA,IACd,kBAAC,GAAD,OAEFY,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5Q,MAAK,SAAA6Q,GACjCA,EAAaC,kB","file":"static/js/main.dcfe4f53.chunk.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _templateObject = _taggedTemplateLiteral(['oada.connections.', ''], ['oada.connections.', '']),\n    _templateObject2 = _taggedTemplateLiteral(['oada.connections.', '.token'], ['oada.connections.', '.token']),\n    _templateObject3 = _taggedTemplateLiteral(['oada.connections.', '.domain'], ['oada.connections.', '.domain']),\n    _templateObject4 = _taggedTemplateLiteral(['oada.', '.bookmarks'], ['oada.', '.bookmarks']),\n    _templateObject5 = _taggedTemplateLiteral(['oada.error'], ['oada.error']),\n    _templateObject6 = _taggedTemplateLiteral(['oada.', ''], ['oada.', '']),\n    _templateObject7 = _taggedTemplateLiteral(['', ''], ['', '']);\n\nvar _cerebral = require('cerebral');\n\nvar _factories = require('cerebral/factories');\n\nvar _bluebird = require('bluebird');\n\nvar _bluebird2 = _interopRequireDefault(_bluebird);\n\nvar _url = require('url');\n\nvar _url2 = _interopRequireDefault(_url);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\n//Promise.config({warnings: false})\n\nfunction domainToConnectionId(domainUrl) {\n  var domain = _url2.default.parse(domainUrl).hostname;\n  return domain.replace(/\\./g, '_');\n}\n\n/**\n * connects to the oada, returns and object with get, put, post, resetCache, disconnect\n * @type {Primitive}\n */\nvar connect = [function (_ref) {\n  var oada = _ref.oada,\n      path = _ref.path,\n      props = _ref.props;\n\n  return oada.connect({\n    connection_id: props.connection_id || domainToConnectionId(props.domain),\n    domain: props.domain,\n    options: props.options,\n    cache: props.cache,\n    token: props.token,\n    websocket: props.websocket\n  }).then(function (response) {\n    return path.authorized({\n      token: response.token,\n      connection: response,\n      connection_id: props.connection_id || domainToConnectionId(props.domain)\n    });\n    //return result;\n  }).catch(function (err) {\n    return path.unauthorized({});\n  });\n}, {\n  authorized: [function (_ref2) {\n    var store = _ref2.store,\n        get = _ref2.get,\n        oada = _ref2.oada,\n        props = _ref2.props;\n\n    if (get((0, _cerebral.state)(_templateObject, props.connection_id)) == null) {\n      store.set((0, _cerebral.state)(_templateObject, props.connection_id), {});\n    }\n    store.set((0, _cerebral.state)(_templateObject2, props.connection_id), props.token);\n    store.set((0, _cerebral.state)(_templateObject3, props.connection_id), props.domain);\n    var wh = get((0, _cerebral.state)(_templateObject4, props.connection_id));\n    if (wh) {\n      store.set((0, _cerebral.state)(_templateObject4, props.connection_id), {});\n    }\n  }],\n  unauthorized: [function (_ref3) {\n    var store = _ref3.store;\n    store.set((0, _cerebral.state)(_templateObject5), {});\n  }]\n}];\n\nvar handleWatch = [function (_ref4) {\n  var state = _ref4.state,\n      oada = _ref4.oada,\n      path = _ref4.path,\n      props = _ref4.props;\n\n  if (props.response.change.type === 'merge') {\n    var oldState = _.cloneDeep(state.get('oada.' + props.connection_id + '.' + props.path));;\n    var newState = _.merge(oldState, props.response.change.body.data);\n    state.set('oada.' + props.connection_id + '.' + props.path, newState);\n    return { oldState: oldState };\n  } else if (props.response.change.type === 'delete') {\n    var nullPath = props.nullPath.split('/').join('.');\n    var oldState = _.cloneDeep(state.get('oada.' + props.connection_id + nullPath));;\n    state.unset('oada.' + props.connection_id + '.' + props.path + nullPath);\n    return { oldState: oldState };\n  }\n}];\n\n/**\n * using the connection_id provided, it GET requests to the server\n * @type {Primitive}\n */\nvar get = [function (_ref5) {\n  var oada = _ref5.oada,\n      store = _ref5.store,\n      get = _ref5.get,\n      props = _ref5.props;\n\n  if (!props.requests) throw new Error('Passing request parameters as top level keys of cerebral props has been deprecated. Instead, pass requests in as an array of request objects under the requests key');\n  var requests = props.requests || [];\n  return _bluebird2.default.map(requests, function (request, i) {\n    if (request.complete) return;\n    var _cerebralPath = request.path.replace(/^\\//, '').split('/').join('.');\n    if (request.watch) {\n      var conn = get((0, _cerebral.state)(_templateObject6, request.connection_id || props.connection_id));\n      if (conn && !(conn.watches && conn.watches[request.path])) {\n        request.watch.signals = ['oada.handleWatch'].concat(_toConsumableArray(request.watch.signals));\n        request.watch.payload = request.watch.payload || {};\n        request.watch.payload.connection_id = request.connection_id || props.connection_id;\n        request.watch.payload.path = _cerebralPath;\n      }\n    }\n    return oada.get({\n      connection_id: request.connection_id || props.connection_id,\n      url: request.url,\n      path: request.path,\n      headers: request.headers,\n      watch: request.watch,\n      tree: request.tree || props.tree\n    }).then(function (response) {\n      var _responseData = response.data;\n      //Build out path one object at a time.\n      var path = 'oada.' + (request.connection_id || props.connection_id) + '.' + _cerebralPath;\n      var parts = path.split('.');\n      var partialPath = '';\n      parts.forEach(function (part) {\n        partialPath = partialPath + part;\n        if (get((0, _cerebral.state)(_templateObject7, partialPath)) == null) {\n          store.set((0, _cerebral.state)(_templateObject7, partialPath), {});\n        }\n        partialPath = partialPath + '.';\n      });\n      //Set response\n      if (_responseData) store.set((0, _cerebral.state)(_templateObject7, path), _responseData);\n      if (request.watch) {\n        //TODO build path part by part\n        path = 'oada.' + (request.connection_id || props.connection_id) + '.watches.' + request.path;\n        parts = path.split('.');\n        partialPath = '';\n        parts.forEach(function (part) {\n          partialPath = partialPath + part;\n          if (get((0, _cerebral.state)(_templateObject7, partialPath)) == null) {\n            store.set((0, _cerebral.state)(_templateObject7, partialPath), {});\n          }\n          partialPath = partialPath + '.';\n        });\n        store.set((0, _cerebral.state)(_templateObject7, path), true);\n        //store.set(state`oada.${request.connection_id || props.connection_id}.watches.${request.path}`, true)\n      }\n      requests[i].complete = true;\n      return response;\n    }).catch(function (err) {\n      console.log('Error in oada.get', err);\n      return err;\n    });\n  }).then(function (responses) {\n    return { responses: responses, requests: requests };\n  });\n}];\n\n/**\n * it PUT requests the resource to the server\n * @type {Primitive}\n */\nvar put = [function (_ref6) {\n  var oada = _ref6.oada,\n      state = _ref6.state,\n      props = _ref6.props;\n\n  if (!props.requests) throw new Error('Passing request parameters as top level keys of cerebral props has been deprecated. Instead, pass requests in as an array of request objects under the requests key');\n  var requests = props.requests || [];\n  return _bluebird2.default.map(requests, function (request, i) {\n    if (request.complete) return;\n    return oada.put({\n      url: request.url, //props.domain + ((request.path[0] === '/') ? '':'/') + request.path,\n      path: request.path,\n      data: request.data,\n      type: request.type,\n      headers: request.headers,\n      tree: request.tree || props.tree,\n      connection_id: request.connection_id || props.connection_id\n    }).then(function (response) {\n      var oldState = _.cloneDeep(state.get('oada.' + (request.connection_id || props.connection_id) + request.path.split('/').join('.')));;\n      var newState = _.merge(oldState, request.data);\n      //Build out path one object at a time.\n      var path = 'oada.' + (request.connection_id || props.connection_id) + request.path.split('/').join('.');\n      var parts = path.split('.');\n      var partialPath = '';\n      parts.forEach(function (part) {\n        partialPath = partialPath + part;\n        if (state.get(partialPath) == null) {\n          state.set(partialPath, {});\n        }\n        partialPath = partialPath + '.';\n      });\n      state.set(path, newState);\n      requests[i].complete = true;\n      return response;\n    });\n  }).then(function (responses) {\n    return { responses: responses, requests: requests };\n  });\n}];\n\n/**\n * requests a DELETE operation to the server. We utilize the connection_id to know which connection to use\n * @type {Primitive}\n */\nvar oadaDelete = [function (_ref7) {\n  var oada = _ref7.oada,\n      state = _ref7.state,\n      props = _ref7.props;\n\n  if (!props.requests) throw new Error('Passing request parameters as top level keys of cerebral props has been deprecated. Instead, pass requests in as an array of request objects under the requests key');\n  var requests = props.requests || [];\n  return _bluebird2.default.map(requests, function (request, i) {\n    if (request.complete) return;\n    var _cerebralPath = request.path.replace(/^\\//, '').split('/').join('.');\n    var conn = state.get('oada.' + (request.connection_id || props.connection_id));\n    if (request.unwatch && conn && conn.watches) {\n      // Don't send the unwatch request if it isn't being watched already.\n      if (!conn.watches[request.path]) return;\n    }\n    return oada.delete({\n      connection_id: request.connection_id || props.connection_id,\n      url: request.url,\n      path: request.path,\n      headers: request.headers,\n      unwatch: request.unwatch,\n      type: request.type,\n      tree: request.tree || props.tree\n    }).then(function (response) {\n      //Handle watches index and optimistically update\n      if (request.unwatch && conn && conn.watches) {\n        state.unset('oada.' + (request.connection_id || props.connection_id) + '.watches.' + request.path);\n      } else {\n        state.unset('oada.' + (request.connection_id || props.connection_id) + '.' + _cerebralPath);\n      }\n      requests[i].complete = true;\n      return response;\n    });\n  }).then(function (responses) {\n    return { responses: responses, requests: requests };\n  });\n}];\n\n/**\n * resets or clears the cache\n * @type {Primitive}\n */\nvar resetCache = [function (_ref8) {\n  var oada = _ref8.oada,\n      state = _ref8.state,\n      props = _ref8.props;\n\n  return oada.resetCache({\n    connection_id: props.connection_id || domainToConnectionId(props.domain)\n  });\n}];\n\n/**\n * disconnects from the framework\n * @type {Primitive}\n */\nvar disconnect = [function (_ref9) {\n  var oada = _ref9.oada,\n      state = _ref9.state,\n      props = _ref9.props;\n\n  return oada.disconnect({ connection_id: props.connection_id });\n}];\n\n/**\n * it POST requests the resource to the server\n * @type {Primitive}\n */\nvar post = [function (_ref10) {\n  var oada = _ref10.oada,\n      state = _ref10.state,\n      props = _ref10.props;\n\n  if (!props.requests) throw new Error('Passing request parameters as top level keys of cerebral props has been deprecated. Instead, pass requests in as an array of request objects under the requests key');\n  var requests = props.requests || [];\n  return _bluebird2.default.map(requests, function (request, i) {\n    if (request.complete) return;\n    return oada.post({\n      url: request.url, //props.domain + ((request.path[0] === '/') ? '':'/') + request.path,\n      path: request.path,\n      data: request.data,\n      type: request.type,\n      headers: request.headers,\n      tree: request.tree || props.tree,\n      connection_id: request.connection_id || props.connection_id\n    }).then(function (response) {\n      var id = response.headers.location;\n      var oldState = _.cloneDeep(state.get('oada.' + (request.connection_id || props.connection_id) + request.path.split('/').join('.')));;\n      var newState = _.merge(oldState, request.data);\n      state.set('oada.' + (request.connection_id || props.connection_id) + '.' + request.path.split('/').join('.'), newState);\n      requests[i].complete = true;\n      return;\n    });\n  }).then(function (responses) {\n    return { responses: responses };\n  });\n}];\n\nexports.default = {\n  delete: oadaDelete,\n  get: get,\n  put: put,\n  post: post,\n  connect: connect,\n  resetCache: resetCache,\n  disconnect: disconnect,\n  domainToConnectionId: domainToConnectionId,\n  handleWatch: handleWatch\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _sequences = require('./sequences');\n\nvar _sequences2 = _interopRequireDefault(_sequences);\n\nvar _cerebralProvider = require('@oada/cerebral-provider');\n\nvar _cerebralProvider2 = _interopRequireDefault(_cerebralProvider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n\n  state: { connections: {} },\n\n  providers: { oada: _cerebralProvider2.default },\n\n  sequences: _sequences2.default\n\n};","import React from \"react\";\nimport { state, sequences } from \"cerebral\";\nimport { connect } from \"@cerebral/react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Toolbar, Typography, IconButton, Grid } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SyncIcon from \"@material-ui/icons/Sync\";\n\nconst styles = theme => ({\n  flex: {\n    flex: 1,\n  },\n  connectopmStatusIndicator: {\n    marginLeft: \"auto\",\n  },\n});\n\nclass Component extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"Open Drawer\"\n          onClick={() => this.props.toggleDrawer()}\n        >\n          <MenuIcon className={classes.icon} />\n        </IconButton>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n          ISOBlueApp [2.0.0]\n        </Typography>\n        <div className={classes.connectopmStatusIndicator}>\n          <Typography variant=\"h6\" color=\"inherit\">\n            {this.props.connection_id ? \"Connected\" : \"Not Connected\"}\n          </Typography>\n        </div>\n      </Toolbar>\n    );\n  }\n}\n\nexport default connect(\n  {\n    toggleDrawer: sequences`toggleDrawer`,\n    connection_id: state`connection.connection_id`,\n  },\n  withStyles(styles)(Component),\n);\n","import React from \"react\";\nimport { state, sequences } from \"cerebral\";\nimport { connect } from \"@cerebral/react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  Toolbar,\n  Typography,\n  Drawer,\n  Divider,\n  Switch,\n  Select,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  MenuItem,\n  Button,\n} from \"@material-ui/core\";\nimport RouterIcon from \"@material-ui/icons/Router\";\n\nconst styles = theme => ({\n  drawerPaper: {\n    position: \"relative\",\n    width: 240,\n    backgroundColor: \"#eeeeee\",\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\nclass Component extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    let deviceDetails = <div />;\n    const selectedDevice = this.props.selectedDevice;\n    if (selectedDevice.device && selectedDevice.day && selectedDevice.hour) {\n      const days = Object.keys(\n        this.props.oada[this.props.connection.connection_id].bookmarks.isoblue[\n          \"device-index\"\n        ][selectedDevice.device][\"location\"][\"day-index\"] || {},\n      );\n      const hours = Object.keys(\n        this.props.oada[this.props.connection.connection_id].bookmarks.isoblue[\n          \"device-index\"\n        ][selectedDevice.device][\"location\"][\"day-index\"][selectedDevice.day][\n          \"hour-index\"\n        ] || {},\n      );\n      const daySelector = (\n        <Select\n          value={selectedDevice.day}\n          renderValue={value => `${value}`}\n          onChange={value => this.props.selectDay({ day: value.target.value })}\n        >\n          {days.map(date => (\n            <MenuItem key={date} value={date}>\n              {date}\n            </MenuItem>\n          ))}\n          ;\n        </Select>\n      );\n\n      // Get timezone offset\n      const tzOffsetMinutes = new Date().getTimezoneOffset();\n      const genTimeLabel = hour => {\n        // UTC -> Local time zone conversion\n        // Assume hour has format hh:mm\n        const hhmm = hour.split(\":\");\n        const utcMinutes = hhmm[1]\n          ? 60 * parseInt(hhmm[0]) + parseInt(hhmm[1])\n          : 60 * parseInt(hour);\n        var localMinutes = utcMinutes - tzOffsetMinutes;\n        var msg = \"\";\n        if (localMinutes < 0) {\n          localMinutes += 1440;\n          msg = \" (-1 day)\";\n        } else if (localMinutes > 1440) {\n          localMinutes -= 1440;\n          msg = \" (+1 day)\";\n        }\n        const localHH = Math.floor(localMinutes / 60);\n        const localMM = localMinutes % 60;\n        return (\n          localHH.toString().padStart(2, \"0\") +\n          \":\" +\n          localMM.toString().padStart(2, \"0\") +\n          msg\n        );\n      };\n\n      const hourSelector = (\n        <Select\n          value={selectedDevice.hour}\n          renderValue={value => `${genTimeLabel(value)}`}\n          onChange={value =>\n            this.props.selectHour({ hour: value.target.value })\n          }\n        >\n          {hours.map(hour => {\n            return (\n              <MenuItem key={hour} value={hour}>\n                {genTimeLabel(hour)}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      );\n\n      deviceDetails = (\n        <List>\n          <Divider />\n          <ListItem>\n            <ListItemText\n              align=\"center\"\n              primary={`Device: ${selectedDevice.device}`}\n            />\n          </ListItem>\n          <ListItem>\n            <ListItemText align=\"center\">{daySelector}</ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemText align=\"center\">{hourSelector}</ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemText align=\"center\">\n              <Button\n                variant=\"contained\"\n                onClick={() => this.props.unselectDevice({})}\n              >\n                Unselect Device\n              </Button>\n            </ListItemText>\n          </ListItem>\n        </List>\n      );\n    }\n\n    return (\n      <Drawer\n        open={this.props.drawer}\n        onClose={() => this.props.toggleDrawer()}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.toolbar} />\n        <List>\n          <ListItem>\n            <ListItemText align=\"center\" primary={\"Available Devices\"} />\n          </ListItem>\n\n          <List className={classes.list} component=\"nav\">\n            {Object.keys(this.props.devices || {}).map(device => (\n              <ListItem\n                button\n                key={`-${device}`}\n                onClick={() => this.props.selectDevice({ device })}\n              >\n                <ListItemIcon>\n                  <RouterIcon />\n                </ListItemIcon>\n                <ListItemText primary={device} />\n                <ListItemSecondaryAction>\n                  <Switch\n                    edge=\"end\"\n                    onChange={() => this.props.toggleDeviceSync({ device })}\n                    checked={this.props.devices[device].sync}\n                    inputProps={{ \"aria-labelledby\": \"switch-list-label-wifi\" }}\n                  />\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </List>\n\n          {deviceDetails}\n        </List>\n      </Drawer>\n    );\n  }\n}\n\nexport default connect(\n  {\n    drawer: state`components.drawer`,\n    toggleDrawer: sequences`toggleDrawer`,\n    devices: state`devices`,\n    selectedDevice: state`selectedDevice`,\n    selectDevice: sequences`selectDevice`,\n    selectHour: sequences`selectHour`,\n    selectDay: sequences`selectDay`,\n    unselectDevice: sequences`unselectDevice`,\n    toggleDeviceSync: sequences`toggleDeviceSync`,\n    connection: state`connection`,\n    oada: state`oada`,\n  },\n  withStyles(styles, { withTheme: true })(Component),\n);\n","import React from \"react\";\nimport { state, sequences } from \"cerebral\";\nimport { connect } from \"@cerebral/react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport {\n  Map,\n  TileLayer,\n  Marker,\n  Popup,\n  CircleMarker,\n  Tooltip,\n  Polyline,\n} from \"react-leaflet\";\nimport icon from \"leaflet/dist/images/marker-icon.png\";\nimport iconShadow from \"leaflet/dist/images/marker-shadow.png\";\n\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow,\n});\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\nconst styles = theme => ({\n  map: {\n    position: \"relative\",\n    display: \"flex\",\n    width: \"100%\",\n    height: \"calc(100% - 56px)\",\n  },\n});\n\nclass MapComponent extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    // Device Markers\n    let markers = [];\n    Object.keys(this.props.devices || {}).forEach(device => {\n      if (\n        this.props.devices[device].sync &&\n        this.props.devices[device].location.lat &&\n        this.props.devices[device].location.lng\n      ) {\n        markers.push(\n          <CircleMarker\n            ref={device => {\n              this.device = device;\n            }}\n            key={device}\n            center={[\n              this.props.devices[device].location.lat,\n              this.props.devices[device].location.lng,\n            ]}\n            color={\"#ffffff\"}\n            fillColor={\"#008000\"}\n            fillOpacity={1}\n            radius={12}\n            zIndexOffset={1}\n          >\n            <Tooltip direction=\"top\" offset={[0, -10]} permanent={true}>\n              <b>{device}</b>\n            </Tooltip>\n          </CircleMarker>,\n        );\n      }\n    });\n\n    // Track Line\n    const selectedDevice = this.props.selectedDevice;\n    let pts = {};\n    if (selectedDevice.device && selectedDevice.day && selectedDevice.hour) {\n      try {\n        const data =\n          this.props.oada[this.props.connection.connection_id].bookmarks\n            .isoblue[\"device-index\"][selectedDevice.device][\"location\"][\n            \"day-index\"\n          ][selectedDevice.day][\"hour-index\"][selectedDevice.hour][\n            \"sec-index\"\n          ] || {};\n        Object.keys(data).forEach(key => {\n          if (!isNaN(data[key].lat) && !isNaN(data[key].lng)) {\n            pts[data[key].time] = [data[key].lat, data[key].lng];\n          }\n        });\n      } catch {\n        console.log(\"failed to get location points.\");\n      }\n    }\n\n    return (\n      <div className={classes.map}>\n        <Map\n          center={[this.props.mapCenter.lat, this.props.mapCenter.lng]}\n          zoom={13}\n          style={{ height: \"100%\", width: \"100%\", position: \"relative\" }}\n        >\n          <TileLayer\n            attribution=\"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\"\n            url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n          />\n          {markers}\n\n          <div>\n            <Polyline\n              key={\"trackline\"}\n              positions={Object.values(pts) || []}\n              color=\"#ffffff\"\n            />\n          </div>\n        </Map>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  {\n    mapCenter: state`mapCenter`,\n    devices: state`devices`,\n    connection: state`connection`,\n    oada: state`oada`,\n    selectedDevice: state`selectedDevice`,\n  },\n  withStyles(styles, { withTheme: true })(MapComponent),\n);\n","import React from \"react\";\nimport { state, sequences } from \"cerebral\";\nimport { connect } from \"@cerebral/react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Typography, Modal } from \"@material-ui/core\";\n\n// Components\nimport AppBarComponent from \"./AppBar\";\nimport DrawerComponent from \"./Drawer\";\nimport Map from \"./Map\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    height: \"100vh\",\n    zIndex: 1,\n    overflow: \"hidden\",\n    position: \"relative\",\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  content: {\n    flexGrow: 1,\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\nclass AppComponent extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"absolute\" className={classes.appBar}>\n          <AppBarComponent />\n        </AppBar>\n        <DrawerComponent />\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Map />\n        </main>\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={this.props.modalOverlay}\n        >\n          <div />\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst App = connect(\n  { modalOverlay: state`modalOverlay` },\n  withStyles(styles, { withTheme: true })(AppComponent),\n);\n\nexport default App;\n","export const masterTree = {\n  bookmarks: {\n    _type: \"application/vnd.oada.bookmarks.1+json\",\n    _rev: 0,\n    isoblue: {\n      _type: \"application/vnd.oada.isoblue.1+json\",\n      _rev: 0,\n      \"device-index\": {\n        \"*\": {\n          _type: \"application/vnd.oada.isoblue.device.1+json\",\n          _rev: 0,\n          \"*\": {\n            _type: \"application/vnd.oada.isoblue.dataset.1+json\",\n            _rev: 0,\n            \"day-index\": {\n              \"*\": {\n                _type: \"application/vnd.oada.isoblue.day.1+json\",\n                _rev: 0,\n                \"hour-index\": {\n                  \"*\": {\n                    _type: \"application/vnd.oada.isoblue.hour.1+json\",\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const hourTree = {\n  bookmarks: {\n    _type: \"applications/vnd.oada.bookmarks.1+json\",\n    _rev: 0,\n    isoblue: {\n      _type: \"applications/vnd.oada.isoblue.1+json\",\n      _rev: 0,\n      \"device-index\": {\n        \"*\": {\n          _type: \"applications/vnd.oada.isoblue.device.1+json\",\n          _rev: 0,\n          \"*\": {\n            _type: \"application/vnd.oada.isoblue.dataset.1+json\",\n            _rev: 0,\n            \"day-index\": {\n              \"*\": {\n                _type: \"applications/vnd.oada.isoblue.day.1+json\",\n                _rev: 0,\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const dayTree = {\n  bookmarks: {\n    _type: \"applications/vnd.oada.bookmarks.1+json\",\n    _rev: 0,\n    isoblue: {\n      _type: \"applications/vnd.oada.isoblue.1+json\",\n      _rev: 0,\n      \"device-index\": {\n        \"*\": {\n          _type: \"applications/vnd.oada.isoblue.device.1+json\",\n          _rev: 0,\n          \"*\": {\n            _type: \"application/vnd.oada.isoblue.dataset.1+json\",\n            _rev: 0,\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const deviceTree = {\n  bookmarks: {\n    _type: \"applications/vnd.oada.bookmarks.1+json\",\n    _rev: 0,\n    isoblue: {\n      _type: \"applications/vnd.oada.isoblue.1+json\",\n      _rev: 0,\n      \"device-index\": {},\n    },\n  },\n};\n","import { state, props, sequences } from \"cerebral\";\nimport { set, when, toggle, unset } from \"cerebral/factories\";\nimport _ from \"lodash\";\nimport * as oadatrees from \"./oadatrees\";\n\nexport const initialize = () => {};\n\nexport const setConnectionArgs = () => {\n  return {\n    domain: \"https://cloudradio33.ecn.purdue.edu\",\n    token: \"abc\",\n    cache: false,\n  };\n};\n\nexport const setDeviceListRequest = ({ get }) => {\n  return {\n    requests: [\n      {\n        path: \"/bookmarks/isoblue\",\n        tree: oadatrees.deviceTree,\n        watch: { signals: [\"handleNewDevice\"] },\n      },\n    ],\n  };\n};\n\nexport const setDayListRequest = ({ get }) => {\n  const device = get(props`device`);\n\n  return {\n    requests: [\n      {\n        path: `/bookmarks/isoblue/device-index/${device}/location`,\n        tree: oadatrees.dayTree,\n        watch: { signals: [\"handleDayUpdate\"], payload: { device } },\n      },\n    ],\n  };\n};\n\nexport const setHourListRequest = ({ get }) => {\n  const device = get(props`device`);\n  const day = get(props`day`);\n\n  return {\n    requests: [\n      {\n        path: `/bookmarks/isoblue/device-index/${device}/location/day-index/${day}`,\n        tree: oadatrees.hourTree,\n        //watch: { signals: [\"handleHourUpdate\"], payload: { device } },\n      },\n    ],\n  };\n};\n\nexport const setLocationDataRequest = ({ get }) => {\n  const device = get(props`device`);\n  const day = get(props`day`);\n  const hour = get(props`hour`);\n\n  return {\n    requests: [\n      {\n        path: `/bookmarks/isoblue/device-index/${device}/location/day-index/${day}/hour-index/${hour}`,\n        tree: oadatrees.masterTree,\n        watch: { signals: [\"handleDeviceLocationUpdate\"], payload: { device } },\n      },\n    ],\n  };\n};\n\nexport const getMostRecentDay = ({ get }) => {\n  const device = get(props`device`);\n  const connection_id = get(state`connection.connection_id`);\n  if (!device || !connection_id) {\n    throw new Error(\"Missing parameters\");\n  }\n\n  const day_index = get(\n    state`oada.${connection_id}.bookmarks.isoblue.device-index.${device}.location.day-index`,\n  );\n\n  // find the most recent day\n  const date_list = Object.keys(day_index);\n  if (date_list.length === 0) {\n    return {};\n  }\n  const last_date = _.maxBy(date_list, function(o) {\n    return new Date(o);\n  });\n  return { day: last_date };\n};\n\nexport const getMostRecentHour = ({ get }) => {\n  const device = get(props`device`);\n  const connection_id = get(state`connection.connection_id`);\n  const day = get(props`day`);\n  if (!device || !connection_id || !day) {\n    throw new Error(\"Missing parameters\");\n  }\n\n  const hour_index = get(\n    state`oada.${connection_id}.bookmarks.isoblue.device-index.${device}.location.day-index.${day}.hour-index`,\n  );\n\n  // find the most recent hour\n  const hour_list = Object.keys(hour_index);\n  if (hour_list.length === 0) {\n    return {};\n  }\n  const last_hour = _.max(Object.keys(hour_index || {}));\n  return { hour: last_hour };\n};\n\nexport const getMostRecentLocation = ({ get }) => {\n  const device = get(props`device`);\n  const connection_id = get(state`connection.connection_id`);\n  const day = get(props`day`);\n  const hour = get(props`hour`);\n  if (!device || !connection_id || !day || !hour) {\n    throw new Error(\"Missing parameters\");\n  }\n  const hour_dataset = get(\n    state`oada.${connection_id}.bookmarks.isoblue.device-index.${device}.location.day-index.${day}.hour-index.${hour}.sec-index`,\n  );\n\n  const latest_data_point = Object.values(hour_dataset || {}).reduce(\n    (latest, data_point) => {\n      return latest.time > data_point.time ? latest : data_point;\n    },\n    { time: 0, lat: 0, lng: 0 },\n  );\n\n  return { latest_data_point };\n};\n\nexport const updateDeviceListState = ({ get }) => {\n  const connection_id = get(state`connection.connection_id`);\n  const devices =\n    get(state`oada.${connection_id}.bookmarks.isoblue.device-index`) || {};\n  if (!connection_id) {\n    throw new Error(\"Missing parameters\");\n  }\n\n  let device_state = get(state`devices`);\n\n  for (const device_name in devices) {\n    if (!(device_name in device_state)) {\n      device_state[device_name] = {\n        sync: false,\n        watchPath: null,\n        location: { lat: null, lng: null },\n      };\n    }\n  }\n\n  return { devices: device_state };\n};\n","import { state, props } from \"cerebral\";\nimport { set, when, toggle, unset } from \"cerebral/factories\";\nimport oada from \"@oada/cerebral-module/sequences\";\nimport * as actions from \"./actions\";\nimport * as oadatrees from \"./oadatrees\";\n\nexport const initialize = actions.initialize;\n\nexport var connect = [\n  actions.setConnectionArgs,\n  oada.connect,\n  set(state`connection.connection_id`, props`connection_id`),\n\n  actions.setDeviceListRequest,\n  oada.get,\n  actions.updateDeviceListState,\n  set(state`devices`, props`devices`),\n  set(state`modalOverlay`, false)\n];\n\nexport const handleNewDevice = [\n  actions.updateDeviceListState,\n  set(state`devices`, props`devices`),\n];\n\nexport const handleDeviceLocationUpdate = [\n  actions.getMostRecentDay,\n  actions.getMostRecentHour,\n  actions.getMostRecentLocation,\n  set(\n    state`devices.${props`device`}.location.lng`,\n    props`latest_data_point.lng`,\n  ),\n  set(\n    state`devices.${props`device`}.location.lat`,\n    props`latest_data_point.lat`,\n  ),\n];\n\nexport const handleDayUpdate = [\n  set(props`connection_id`, state`connection.connection_id`),\n  actions.getMostRecentDay,\n\n  actions.setHourListRequest,\n  oada.get,\n  actions.getMostRecentHour,\n\n  actions.setLocationDataRequest,\n  oada.get,\n  actions.getMostRecentLocation,\n  set(\n    state`devices.${props`device`}.location.lng`,\n    props`latest_data_point.lng`,\n  ),\n  set(\n    state`devices.${props`device`}.location.lat`,\n    props`latest_data_point.lat`,\n  ),\n];\n\nexport const toggleDrawer = toggle(state`components.drawer`);\n\nexport const selectDevice = [\n  set(state`modalOverlay`, true),\n  set(props`connection_id`, state`connection.connection_id`),\n\n  actions.setDayListRequest,\n  oada.get,\n  actions.getMostRecentDay,\n\n  actions.setHourListRequest,\n  oada.get,\n  actions.getMostRecentHour,\n\n  actions.setLocationDataRequest,\n  oada.get,\n  actions.getMostRecentLocation,\n  set(\n    state`devices.${props`device`}.location.lng`,\n    props`latest_data_point.lng`,\n  ),\n  set(\n    state`devices.${props`device`}.location.lat`,\n    props`latest_data_point.lat`,\n  ),\n  set(state`devices.${props`device`}.sync`, true),\n  set(state`mapCenter.lat`, props`latest_data_point.lat`),\n  set(state`mapCenter.lng`, props`latest_data_point.lng`),\n  set(state`selectedDevice.device`, props`device`),\n  set(state`selectedDevice.day`, props`day`),\n  set(state`selectedDevice.hour`, props`hour`),\n  set(state`modalOverlay`, false)\n];\n\nexport const unselectDevice = [\n  set(state`selectedDevice.device`, null),\n  set(state`selectedDevice.day`, null),\n  set(state`selectedDevice.hour`, null),\n];\n\nexport const selectDay = [\n  set(state`modalOverlay`, true),\n  set(props`connection_id`, state`connection.connection_id`),\n  set(props`device`, state`selectedDevice.device`),\n  set(state`selectedDevice.day`, props`day`),\n  actions.setHourListRequest,\n  oada.get,\n  set(state`modalOverlay`, false),\n];\nexport const selectHour = [\n  set(state`modalOverlay`, true),\n  set(props`connection_id`, state`connection.connection_id`),\n  set(props`device`, state`selectedDevice.device`),\n  set(props`day`, state`selectedDevice.day`),\n  set(state`selectedDevice.hour`, props`hour`),\n  actions.setLocationDataRequest,\n  oada.get,\n  set(state`modalOverlay`, false),\n];\n\nexport const toggleDeviceSync = [\n  set(state`modalOverlay`, true),\n  when(state`devices.${props`device`}.sync`),\n  {\n    true: [set(state`devices.${props`device`}.sync`, false)],\n    false: [\n      set(props`connection_id`, state`connection.connection_id`),\n\n      actions.setDayListRequest,\n      oada.get,\n      actions.getMostRecentDay,\n\n      actions.setHourListRequest,\n      oada.get,\n      actions.getMostRecentHour,\n\n      actions.setLocationDataRequest,\n      oada.get,\n      actions.getMostRecentLocation,\n      set(\n        state`devices.${props`device`}.location.lng`,\n        props`latest_data_point.lng`,\n      ),\n      set(\n        state`devices.${props`device`}.location.lat`,\n        props`latest_data_point.lat`,\n      ),\n      set(state`devices.${props`device`}.sync`, true),\n    ],\n  },\n  set(state`modalOverlay`, false),\n];\n","import { state } from \"cerebral\";\n\nexport default {\n  mapCenter: { lat: 40.428641, lng: -86.913783 },\n  connection: {},\n  devices: {},\n  components: { drawer: false },\n  selectedDevice: { device: null, day: null, hour: null },\n  modalOverlay: true,\n};\n","import App from \"cerebral\";\nimport * as sequences from \"./sequences\";\n//import * as providers from \"./providers\";\nimport state from \"./state\";\nimport DevTools from \"cerebral/devtools\";\nimport oadaProvider from \"@oada/cerebral-provider\";\nimport oadaModule from \"@oada/cerebral-module\";\n\nexport default App(\n  ({ app }) => {\n    app.on(\"initialized\", () => {\n      app.getSequence(\"connect\")();\n    });\n    return {\n      modules: {\n        oada: oadaModule,\n      },\n      state,\n      sequences,\n      providers: {\n        oada: oadaProvider,\n      },\n    };\n  },\n  {\n    devtools:\n      process.env.NODE_ENV === \"production\"\n        ? null\n        : DevTools({\n            host: \"localhost:8787\",\n          }),\n  },\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Container } from \"@cerebral/react\";\n//import \"./index.css\";\nimport ISOBlueAppComponent from \"./components/App\";\nimport app from \"./app\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Container app={app}>\n    <ISOBlueAppComponent />\n  </Container>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}